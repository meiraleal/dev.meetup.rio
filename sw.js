const FILE_BUNDLE = {"/bootstrap.js": {"content": "self.sleep = (ms = 0) => new Promise((resolve) => setTimeout(resolve, ms));\nconst coreModulesExternal = [\"test\", \"types\", \"mvc\", \"date\"];\nconst installEventsHandler = (target) => {\n\tconst listeners = new Map();\n\tconst anyListeners = new Set(); "metaType": "application/javascript"},"/app.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.bootstrap({\n\tname: \"Habits Tracker\",\n\tmodules: [\n\t\t\"apps/habits\",\n\t\t\"icon-lucide\",\n\t\t\"font/manrope\",\n\t\t\"uix\",\n\t\t\"apps/bundler\",\n\t\t\"p2p\",\n\t],\n\ttheme: {\n\t\tfont: {\n\t\t\tfamily: \"'Manrope'\",\n\t\t},\n\t},\n});\n","metaType": "application/javascript"},"/modules/test/index.js": {"content": "export default {}"},"/modules/test/assert/index.js": {"content": "export default {}"},"/modules/test/mock/index.js": {"content": "export default {}"},"/modules/types/index.js": {"content": "const formats = { email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/ };\n\nconst parseJSON = (value) => {\n\ttry {\n\t\treturn value in specialCases ? value : JSON.parse(value);\n\t} catch (error) {\n\t\treturn undefined;\n\t}\n};\n\nconst specialCases = {\n\tundefined: undefined,\n\tnull: null,\n\t\"\": null,\n\t[undefined]: undefined,\n};\n\nconst typeHandlers = {\n\tany: (value) => value,\n\tfunction: (value) => value,\n\textension: () => undefined,\n\tboolean: (value, { attribute = true } = {}) =>\n\t\t(attribute && value === \"\") || [\"true\", 1, \"1\", true].includes(value),\n\tstring: (val) => (val in specialCases ? specialCases[val] : String(val)),\n\tarray: (value, prop = {}) => {\n\t\tif (Array.isArray(value)) return value;\n\t\tconst { itemType } = prop;\n\t\ttry {\n\t\t\tif (!value) throw value;\n\t\t\tconst parsedArray = parseJSON(value);\n\t\t\tif (!Array.isArray(parsedArray)) throw parsedArray;\n\t\t\treturn !itemType\n\t\t\t\t? parsedArray\n\t\t\t\t: parsedArray.map((item) =>\n\t\t\t\t\t\ttypeof item !== \"object\"\n\t\t\t\t\t\t\t? item\n\t\t\t\t\t\t\t: Object.entries(item).reduce((obj, [key, val]) => {\n\t\t\t\t\t\t\t\t\tobj[key] = typeHandlers[itemType[key]?.type]\n\t\t\t\t\t\t\t\t\t\t? typeHandlers[itemType[key].type](val, prop)\n\t\t\t\t\t\t\t\t\t\t: val;\n\t\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t\t}, {}),\n\t\t\t\t\t);\n\t\t} catch (err) {\n\t\t\treturn [];\n\t\t}\n\t},\n\tnumber: (value) => {\n\t\treturn value ? Number(value) : value;\n\t},\n\tdate: (value) => new Date(value),\n\tobject: (v, prop = {}) => {\n\t\tconst value = typeof v === \"string\" ? parseJSON(v) : v;\n\t\tif (prop.properties) {\n\t\t\tObject.entries(prop.properties).map(([propKey, propProps]) => {\n\t\t\t\tif (propProps.defaultValue !== undefined) {\n\t\t\t\t\tvalue[propKey] = propProps.defaultValue;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn value;\n\t},\n};\n\nconst stringToType = (value, prop = {}) => {\n\tconst { type } = prop;\n\treturn (typeHandlers[type] || ((val) => val))(value, prop);\n};\n\nconst validations = {\n\tnumber: (value, prop = {}) => {\n\t\tif (\"min\" in prop && value < prop.min) {\n\t\t\treturn [\"minimum\", null];\n\t\t}\n\t\tif (\"max\" in prop && value > prop.max) {\n\t\t\treturn [\"maximum\", null];\n\t\t}\n\t\tif (Number.isNaN(Number(value))) {\n\t\t\treturn [\"NaN\", null];\n\t\t}\n\t},\n};\n\nconst validateField = (value, prop) => {\n\tif (\n\t\tprop.required === true &&\n\t\t(value === undefined || value === null || value === \"\")\n\t)\n\t\treturn [\"required\", null];\n\tconst typeHandler = typeHandlers[prop.type];\n\tif (prop.relationship) {\n\t\tif (prop.many) {\n\t\t\treturn [\n\t\t\t\tnull,\n\t\t\t\tArray.isArray(value)\n\t\t\t\t\t? value.map((i) => (prop.mixed ? i : (i?.id ?? i)))\n\t\t\t\t\t: [],\n\t\t\t];\n\t\t}\n\t\treturn [null, value?.id ?? value];\n\t}\n\tconst typedValue = typeHandler\n\t\t? typeHandler(value, prop)\n\t\t: [undefined, null, \"\"].includes(value)\n\t\t\t? (prop.defaultValue ?? null)\n\t\t\t: value;\n\tconst validation = validations[prop.type];\n\tif (validation) {\n\t\tconst errors = validation(value, prop);\n\t\tif (errors) return errors;\n\t}\n\n\tif (\"format\" in prop || formats[prop.key]) {\n\t\tconst formatFn = \"format\" in prop ? prop.format : formats[prop.key];\n\t\tconst format =\n\t\t\ttypeof formatFn === \"function\"\n\t\t\t\t? prop.format\n\t\t\t\t: (value) => formatFn.test(value);\n\t\tconst isValid = format(typedValue);\n\t\tif (!isValid) return [\"invalid\", null];\n\t}\n\n\treturn [null, typedValue];\n};\n\nfunction interpolate(str, data) {\n\treturn str.replace(/\\${(.*?)}/g, (match, key) => {\n\t\treturn data[key.trim()];\n\t});\n}\n\nconst validateType = (\n\tobject,\n\t{ schema, row = {}, undefinedProps = true, validateVirtual = false },\n) => {\n\tif (!schema) return [null, object];\n\tconst errors = {};\n\tlet hasError = false;\n\n\tconst props = undefinedProps ? schema : object;\n\tfor (const key in props) {\n\t\tconst prop = { ...schema[key], key };\n\t\tif (\"virtual\" in prop || prop.persist === false) continue;\n\t\tconst [error, value] =\n\t\t\t[undefined, null, \"\"].includes(object[key]) && !prop.required\n\t\t\t\t? [null, prop.defaultValue]\n\t\t\t\t: validateField(object[key], prop);\n\t\tif (error) {\n\t\t\thasError = true;\n\t\t\terrors[key] = error;\n\t\t} else if (value !== undefined) object[key] = value;\n\t}\n\tconst virtual = Object.fromEntries(\n\t\tObject.entries(schema).filter(([name, prop]) => \"virtual\" in prop),\n\t);\n\tfor (const prop in virtual) {\n\t\tif (validateVirtual) {\n\t\t\t"metaType": "application/javascript"},"/modules/mvc/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"mvc\",\n\tmodules: [\"mvc/view\", \"mvc/model\", \"mvc/controller\", \"app\"],\n});\n","metaType": "application/javascript"},"/modules/mvc/view/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"view\",\n\tpath: \"mvc/view\",\n\talias: \"View\",\n\tfrontend: true,\n\tbackend: true,\n\tmodules: [\"mvc/view/fonts\", \"mvc/view/unocss\"],\n});\n","metaType": "application/javascript"},"/modules/mvc/view/fonts/index.js": {"content": "import $APP from \"/bootstrap.js\";\n$APP.addModule({\n\tname: \"fonts\",\n\tpath: \"mvc/view/fonts\",\n\tfrontend: true,\n\tbase: [],\n});\n","metaType": "application/javascript"},"/modules/mvc/view/fonts/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\nconst fontFormats = { ttf: \"truetype\" };\nconst Weight = {\n\textralight: 200,\n\tlight: 300,\n\tregular: 400,\n\tmedium: 500,\n\tsemibold: 600,\n\tbold: 700,\n\textrabold: 800,\n};\nconst prepareFont = (extension, config) => {\n\tconst { variants, name, type = \"woff2\" } = config;\n\tconst fontFaces = variants\n\t\t.map((weight) => {\n\t\t\tconst fontWeight = Weight[weight] || 400;\n\t\t\treturn `@font-face {\n      font-family: '${name}';\n      font-weight: ${fontWeight};\n      src: url('${$APP.settings.basePath}/modules/font/${extension}/${weight}.${type}') format('${fontFormats[type] || type}');\n    }`;\n\t\t})\n\t\t.join(\"\\n\");\n\treturn fontFaces;\n};\n\nconst load = (name, config) => {\n\tconst css = prepareFont(name, config);\n\tconst style = document.createElement(\"style\");\n\tstyle.textContent = css;\n\tdocument.head.appendChild(style);\n};\n\n$APP.addFunctions({\n\tname: \"fonts\",\n\tfunctions: { load },\n});\n\n$APP.addHooks({\n\tname: \"fonts\",\n\thooks: {\n\t\tmoduleAdded({ module }) {\n\t\t\tif (!module.font) return;\n\t\t\tload(module.name, module.font);\n\t\t},\n\t},\n});\n","metaType": "application/javascript"},"/modules/mvc/view/unocss/index.js": {"content": "import $APP from \"/bootstrap.js\";\n$APP.addModule({\n\tname: \"unocss\",\n\tpath: \"mvc/view/unocss\",\n\tfrontend: true,\n\tdev: true,\n});\n","metaType": "application/javascript"},"/modules/mvc/view/unocss/frontend.js": {"content": "export default {}"},"/modules/mvc/view/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport html from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nconst _data = T.object({\n\tproperties: {\n\t\tmodel: T.string().$,\n\t\tid: T.string().$,\n\t\tmethod: T.string().$,\n\t\tfilter: T.object().$,\n\t\tincludes: T.string().$,\n\t\torder: T.string().$,\n\t\tlimit: T.number().$,\n\t\toffset: T.number().$,\n\t\tcount: T.number().$,\n\t\trows: T.array().$,\n\t\trow: T.object().$,\n\t},\n}).$;\n\nconst _actions = T.object({}).$;\nconst _map = T.object({}).$;\nconst _rows = T.array({}).$;\nconst _row = T.object({}).$;\n\nfunction addClassTags(instance, proto) {\n\tif (proto?.constructor) {\n\t\taddClassTags(instance, Object.getPrototypeOf(proto));\n\t\tif (proto.constructor.tag) {\n\t\t\tinstance.classList.add(proto.constructor.tag);\n\t\t}\n\t}\n}\n\nclass View extends HTMLElement {\n\tstatic get observedAttributes() {\n\t\treturn Object.keys(this.properties).filter(\n\t\t\t(key) => this.properties[key].attribute !== false,\n\t\t);\n\t}\n\n\tstatic properties = { _data, _actions, _map, _rows, _row };\n\tstatic _attrs = {};\n\tstatic plugins = [];\n\tstate = {};\n\t_hasUpdated = false;\n\t_ignoreAttributeChange = false;\n\t_changedProps = {};\n\tconstructor() {\n\t\tsuper();\n\t\t$APP.events.install(this);\n\t}\n\tconnectedCallback() {\n\t\tif (this.constructor.properties) this.initProps();\n\t\taddClassTags(this, Object.getPrototypeOf(this));\n\t\tfor (const plugin of this.constructor.plugins) {\n\t\t\tconst { event, fn, test } = plugin;\n\t\t\tif (\n\t\t\t\tfn &&\n\t\t\t\t(!test || test({ instance: this, component: this.constructor }))\n\t\t\t)\n\t\t\t\tthis.on(event, fn.bind(this));\n\t\t}\n\t\tthis.emit(\"connectedCallback\", {\n\t\t\tinstance: this,\n\t\t\tcomponent: this.constructor,\n\t\t});\n\t\tthis.requestUpdate();\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.emit(\"disconnectedCallback\", {\n\t\t\tinstance: this,\n\t\t\tcomponent: this.constructor,\n\t\t});\n\t}\n\n\tq(element) {\n\t\treturn this.querySelector(element);\n\t}\n\n\tqa(element) {\n\t\treturn this.querySelectorAll(element);\n\t}\n\n\tprop(prop) {\n\t\treturn {\n\t\t\tvalue: this[prop],\n\t\t\tsetValue: ((newValue) => (this[prop] = newValue)).bind(this),\n\t\t};\n\t}\n\n\tinitProps() {\n\t\tfor (const attr of this.attributes) {\n\t\t\tconst key = this.constructor._attrs[attr.name];\n\t\t\tconst prop = this.constructor.properties[key];\n\t\t\tif (prop && prop.type !== \"boolean\" && attr.value === \"\") {\n\t\t\t\tthis.removeAttribute(attr.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.state[key] = prop\n\t\t\t\t? T.stringToType(attr.value, {\n\t\t\t\t\t\t...prop,\n\t\t\t\t\t\tattribute: true,\n\t\t\t\t\t})\n\t\t\t\t: attr.value;\n\t\t}\n\n\t\tfor (const [key, prop] of Object.entries(this.constructor.properties)) {\n\t\t\tconst {\n\t\t\t\ttype,\n\t\t\t\tsync,\n\t\t\t\tdefaultValue,\n\t\t\t\tattribute = true,\n\t\t\t\tsetter,\n\t\t\t\tgetter,\n\t\t\t} = prop;\n\t\t\tif (sync) continue;\n\t\t\tthis.state[key] ??= this[key] ?? defaultValue;\n\n\t\t\tif (!Object.getOwnPropertyDescriptor(this, key)) {\n\t\t\t\tObject.defineProperty(this, key, {\n\t\t\t\t\tget: getter ? getter.bind(this) : () => this.state[key],\n\t\t\t\t\tset: setter\n\t\t\t\t\t\t? setter.bind(this)\n\t\t\t\t\t\t: (value) => {\n\t\t\t\t\t\t\t\tconst oldValue = this.state[key];\n\t\t\t\t\t\t\t\tif (oldValue === value) return;\n\t\t\t\t\t\t\t\tthis.state[key] = value;\n\t\t\t\t\t\t\t\tthis.updateAttribute({\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\tskipPropUpdate: true,\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.requestUpdate(key, oldValue, value);\n\t\t\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst value = this.state[key];\n\t\t\tif (!attribute || this.hasAttribute(key) || value === undefined) continue;\n\n\t\t\tthis.updateAttribute({\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\tskipPropUpdate: true,\n\t\t\t\ttype,\n\t\t\t});\n\n\t\t\tthis._changedProps[key] = undefined;\n\t\t}\n\t}\n\n\trequestUpdate(key, oldValue) {\n\t\tif (key) this._changedProps[key] = oldValue;\n\t\tif (this.updateComplete) clearTimeout(this.updateComplete);\n\t\tconst changedProps = { ...this._changedProps };\n\t\tthis.updateComplete = setTimeout(() => {\n\t\t\tthis.performUpdate(changedProps, key === undefined);\n\t\t}, 0);\n\t\treturn this.updateComplete;\n\t}\n\n\tperformUpdate(changedProps, forceUpdate) {\n\t\tthis.updateComplete = null;\n\t\tif (this._hasUpdated && !forceUpdate && !this.shouldUpdate(changedProps))\n\t\t\treturn;\n\t\tthis.emit(\"willUpdate\", changedProps);\n\t\tthis.update(changedProps);\n\t\tif (!this._hasUpdated) {\n\t\t\tthis._hasUpdated = true;\n\t\t\tthis.emit(\"firstUpdated\", changedProps);\n\t\t}\n\t\tthis.emit(\"updated\", changedProps);\n\t\tthis._changedProps = {};\n\t}\n\n\tshouldUpdate(changedProps) {\n\t\tfor (const [key, oldValue] of Object.entries(changedProps)) {\n\t\t\tconst newValue = this[key];\n\t\t\tconst prop = this.constructor.properties[key];\n\t\t\tconst hasChanged = prop?.hasChanged\n\t\t\t\t? prop.hasChanged(newValue, oldValue)\n\t\t\t\t: oldValue !== newValue;\n\t\t\tif (key === \"darkmode\") console.log({ hasChanged }, prop.hasChanged);\n\t\t\tif (!hasChanged) delete changedProps[key];\n\t\t}\n\t\tthis.changedProps = {};\n\t\treturn Object.keys(changedProps).length > 0 || !this._hasUpdated;\n\t}\n\n\tupdate() {\n\t\thtml.render(this.render(), this);\n\t}\n\n\trender() {\n\t\treturn html``;\n\t}\n\n\tattributeChangedCallback(key, oldValue, value) {\n\t\tif (oldValue === value) return;\n\t\tthis.emit(\"attributeChangedCallback\", {\n\t\t\tinstance: this,\n\t\t\tcomponent: this.constructor,\n\t\t\tkey,\n\t\t\tvalue,\n\t\t\toldValue,\n\t\t});\n\n\t\tif (this._ignoreAttributeChange) return;\n\t\tthis.state[key] = T.stringToType(value, this.constructor.properties[key]);\n\t\tif (this._hasUpdated) this.requestUpdate(key, oldValue);\n\t}\n\n\tupdateAttribute({ key, value, type, skipPropUpdate = false }) {\n\t\tif (!type) return;\n\t\tthis._ignoreAttributeChange = skipPropUpdate;\n\t\tif (type === \"function\" && typeof value === \"function\") {\n\t\t\tthis.setAttribute(key, value.toString());\n\t\t} else if (type === \"boolean\") {\n\t\t\tif (value) this.setAttribute(key, \"\");\n\t\t\telse this.removeAttribute(key);\n\t\t} else {\n\t\t\tif (value === undefined) this.removeAttribute(key);\n\t\t\telse {\n\t\t\t\tif ([\"array\", \"object\"].includes(type))\n\t\t\t\t\tthis.setAttribute(key, JSON.stringify(value));\n\t\t\t\telse this.setAttribute(key, value);\n\t\t\t}\n\t\t}\n\n\t\tif (skipPropUpdate) this._ignoreAttributeChange = false;\n\t\telse this[key] = value;\n\t}\n}\n\nwindow.$ = (element) => document.querySelector(element);\nwindow.$$ = (element) => document.querySelectorAll(element);\n\n$APP.setLibrary({\n\tname: \"view\",\n\tpath: \"mvc/view\",\n\talias: \"View\",\n\tbase: View,\n});\n\nexport default View;\n","metaType": "application/javascript"},"/modules/mvc/view/html/index.js": {"content": "const DEV_MODE = false;\nconst ENABLE_EXTRA_SECURITY_HOOKS = false;\nconst ENABLE_SHADYDOM_NOPATCH = false;\nconst NODE_MODE = false;\n\n"metaType": "application/javascript"},"/modules/mvc/model/index.js": {"content": "import $APP from \"/bootstrap.js\";\nimport T from \"/modules/types/index.js\";\n\n$APP.addModule({\n\tname: \"sysmodel\",\n\talias: \"SysModel\",\n});\n\nconst addModels = ({ context, collection = \"models\" }) => {\n\treturn ({ module }) => {\n\t\tif (!module[collection]) return;\n\t\tconst models = Object.fromEntries(\n\t\t\tObject.keys(module[collection]).map((model) => {\n\t\t\t\tconst props = {\n\t\t\t\t\tid: T.string({ primary: true }),\n\t\t\t\t\t...module[collection][model],\n\t\t\t\t};\n\t\t\t\treturn [\n\t\t\t\t\tmodel,\n\t\t\t\t\tObject.fromEntries(\n\t\t\t\t\t\tObject.entries(props).map(([key, _prop]) => {\n\t\t\t\t\t\t\tconst prop = _prop?.$ || _prop;\n\t\t\t\t\t\t\tprop.name = key;\n\t\t\t\t\t\t\tif (prop.relationship && !prop.targetForeignKey)\n\t\t\t\t\t\t\t\tprop.targetForeignKey = model;\n\t\t\t\t\t\t\treturn [key, prop];\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t}),\n\t\t);\n\t\tcontext.set(models);\n\t};\n};\n\n$APP.addModule({\n\tname: \"models\",\n\thooks: ({ context }) => ({\n\t\tmoduleAdded: addModels({ context, collection: \"models\" }),\n\t\tmoduleUpdated: addModels({ context, collection: \"models\" }),\n\t}),\n});\n\n$APP.addModule({\n\tname: \"sysmodels\",\n\thooks: ({ context }) => ({\n\t\tmoduleAdded: addModels({ context, collection: \"sysmodels\" }),\n\t}),\n\tsettings: { APP: \"App\", USER: \"User\", DEVICE: \"Device\" },\n});\n\nconst instanceProxyHandler = {\n\tget(target, prop, receiver) {\n\t\tif (prop === \"remove\") {\n\t\t\treturn () =>\n\t\t\t\tModel.request(\"REMOVE\", target._modelName, { id: target.id });\n\t\t}\n\n\t\tif (prop === \"update\") {\n\t\t\treturn () => {\n\t\t\t\tconst cleanRow = { ...target };\n\t\t\t\tdelete cleanRow._modelName;\n\t\t\t\treturn Model.request(\"EDIT\", target._modelName, {\n\t\t\t\t\trow: cleanRow,\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tif (prop === \"include\") {\n\t\t\treturn async (include) => {\n\t\t\t\tif (!target.id || !target._modelName) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\"Cannot run .include() on an object without an ID or model name.\",\n\t\t\t\t\t);\n\t\t\t\t\treturn receiver; "metaType": "application/javascript"},"/modules/mvc/controller/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"controller\",\n\tpath: \"mvc/controller\",\n\talias: \"Controller\",\n\tmodules: [\"mvc/controller/backend\"],\n\tsettings: { syncKeySeparator: \"_-_\" },\n});\n","metaType": "application/javascript"},"/modules/mvc/controller/backend/index.js": {"content": "import $APP from \"/bootstrap.js\";\nconst sanitize = (obj) => {\n\tif (obj === null || typeof obj !== \"object\") return obj;\n\tif (Array.isArray(obj)) return obj.map((item) => sanitize(item));\n\tconst newObj = {};\n\tfor (const key in obj) {\n\t\tif (Object.hasOwn(obj, key)) {\n\t\t\tconst value = obj[key];\n\t\t\tif (typeof value !== \"function\") newObj[key] = sanitize(value);\n\t\t}\n\t}\n\treturn newObj;\n};\n\n$APP.addModule({\n\tname: \"backend\",\n\talias: \"Backend\",\n\tpath: \"mvc/controller/backend\",\n\tbase: { sanitize },\n\tbackend: true,\n});\n","metaType": "application/javascript"},"/modules/app/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({ name: \"app\" });\n","metaType": "application/javascript"},"/modules/date/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\nconst date = {\n\tformatKey(date) {\n\t\tif (!date) return null;\n\t\tconst year = date.getFullYear();\n\t\tconst month = String(date.getMonth() + 1).padStart(2, \"0\");\n\t\tconst day = String(date.getDate()).padStart(2, \"0\");\n\t\treturn `${year}-${month}-${day}`;\n\t},\n};\n$APP.addModule({\n\tname: \"date\",\n\talias: \"Date\",\n\tbase: date,\n});\n","metaType": "application/javascript"},"/modules/apps/habits/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"habits\",\n\tpath: \"apps/habits\",\n\tfrontend: true,\n\tbackend: true,\n});\n","metaType": "application/javascript"},"/modules/apps/habits/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Controller from \"/modules/mvc/controller/frontend.js\";\nimport html from \"/modules/mvc/view/html/index.js\";\n\n$APP.events.on(\"INIT_APP\", () => {\n\t$APP.define(\"app-index\", {\n\t\trender() {\n\t\t\treturn html`<div class=\"max-w-6xl mx-auto p-8 flex flex-col gap-16\">\n                  <div class=\"flex flex-col gap-4\">\n                    <h1 class=\"text-6xl text-center font-bold\">\n                      <uix-icon name=\"calendar-heart\" class=\"text-4xl text-blue-600 inline-block align-middle\"></uix-icon>\n                      Habit Tracker\n\t\t\t\t\t\t\t\t\t\t</h1>\n                    <h2 class=\"text-3xl text-center font-bold\">Build better habits, one day at a time</h2>\n                  </div>\n                  <uix-card class=\"p-6 bg-white rounded-lg shadow-md flex flex-col gap-4\">\n                    <span class=\"text-2xl font-bold\">                 \n                      <uix-icon name=\"circle-plus\" class=\"text-lg text-green-600 inline-block align-middle\"></uix-icon> \n                      New Habit\n                    </span>\n                    <uix-form ._data=${{ model: \"habits\" }} ._map=${{ submit: \"$data:add\" }}>\n                      <uix-join>\n                        <uix-input name=\"name\" class=\"text-xl\"></uix-input>\n                        <uix-button label=\"ADD\" icon=\"plus\" type=\"submit\" class=\"text-xl p-3\"></uix-button>\n                      </uix-join>\n                    </uix-form>\n                  </uix-card>\n                  <uix-container      \n                    class=\"flex flex-col gap-4\"\n                    ._data=${{\n\t\t\t\t\t\t\t\t\t\t\tmodel: \"habits\",\n\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-card\",\n\t\t\t\t\t\t\t\t\t\t\tclass:\n\t\t\t\t\t\t\t\t\t\t\t\t\"p-6 bg-white rounded-lg shadow-md flex flex-col gap-4\",\n\t\t\t\t\t\t\t\t\t\t\tincludes: \"checkins,notes\",\n\t\t\t\t\t\t\t\t\t\t\tblocks: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-list\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"flex items-center justify-between\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tblocks: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-link\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"text-xl font-semibold\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: { label: \"@parent.name\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-link\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"text-red-500 hover:text-red-700\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: \"trash\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirmation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Are you sure you want to remove habit?\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: { click: \"$data:remove\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-calendar\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"gap-[10px]\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggledDays: \"$map:@parent.checkins:date\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thabit: \"@parent.id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdayContent: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-calendar-day\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-list\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"flex items-center justify-between\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tblocks: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-button\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Complete today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"px-4 py-2 rounded-md bg-blue-600 text-white hover:bg-blue-700\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_data: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodel: \"checkins\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: \"edit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayIf: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"@parent.checkins\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$ninc: { date: \"$today\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_row: \"$find:@parent.checkins:date=$today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thabit: \"@parent.id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate: \"$today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclick: \"$data:add\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-button\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Today Completed\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"px-4 py-2 rounded-md bg-green-600 text-white cursor-not-allowed\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_data: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodel: \"checkins\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: \"edit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayIf: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"@parent.checkins\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$inc: { date: \"$today\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thabit: \"@parent.id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate: \"$today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclick: \"$data:remove\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-modal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: \"message\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Add notes\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcta: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-button\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: \"message-square-text\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Notes\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"px-4 py-2 rounded-md bg-gray-200 text-black hover:bg-gray-300\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-form\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"flex flex-col gap-4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_data: { model: \"notes\", method: \"add\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_row: \"$find:@parent.notes:date=$today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thabit: \"@parent.id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate: \"$today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmit: \"$data:upsert\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitSuccess:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"$closest:uix-modal.hide\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tblocks: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-join\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tblocks: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-input\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"notes\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"text-xl\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_map: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_row: \"$find:@parent.notes:date=$today\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"@notes\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttag: \"uix-button\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"ADD\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon: \"plus\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"submit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: \"text-xl\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t}}> \n                  </uix-container>\n                  <uix-card class=\"p-6 bg-white rounded-lg shadow-md flex flex-col gap-4\">\n                    <span class=\"text-lg font-bold\">Your Progress</span>\n                    <uix-list class=\"flex gap-8 justify-evenly\">\n                      <uix-stat label=\"Total Habits\" ._data=${{ model: \"habits\" }} ._map=${{ value: \"$count\" }} class=\"flex flex-col bg-blue-100 p-4 rounded-lg text-center\"></uix-stat>\n                      <uix-stat label=\"Total Streaks\" value=\"5\" class=\"flex flex-col bg-blue-100 p-4 rounded-lg text-center\"></uix-stat>\n                      <uix-stat label=\"Longest Streaks\" value=\"5\" class=\"flex flex-col bg-blue-100 p-4 rounded-lg text-center\"></uix-stat>\n                    </uix-list>\n                  </uix-card>\n                </div>\n      <app-button></app-button>      \n    `;\n\t\t},\n\t});\n});\n","metaType": "application/javascript"},"/modules/mvc/controller/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport adaptersStorage from \"/modules/mvc/controller/adapter-storage.js\";\nimport adaptersUrl from \"/modules/mvc/controller/adapter-url.js\";\nimport backend from \"/modules/mvc/controller/backend/frontend.js\";\nimport View from \"/modules/mvc/view/frontend.js\";\n\nconst controllerAdapters = { ...adaptersStorage, ...adaptersUrl, backend };\n\nconst parseKey = (key) => {\n\tif (typeof key === \"string\" && key.includes(\".\")) {\n\t\tconst [storeKey, path] = key.split(\".\", 2);\n\t\treturn { storeKey, path };\n\t}\n\treturn { storeKey: key, path: null };\n};\n\nconst createAdapter = (store, storeName) => {\n\tconst adapter =\n\t\ttypeof store === \"function\"\n\t\t\t? store\n\t\t\t: (key, value) =>\n\t\t\t\t\tvalue !== undefined ? adapter.set(key, value) : adapter.get(key);\n\n\t$APP.events.install(adapter);\n\n\tconst notify = (key, value) => {\n\t\tController[storeName]?.emit(key, value);\n\t};\n\n\tadapter.get = (key) => {\n\t\tconst { storeKey, path } = parseKey(key);\n\t\tconst baseValue = store.get(storeKey);\n\t\t"metaType": "application/javascript"},"/modules/mvc/controller/adapter-storage.js": {"content": "const serialize = (value) => {\n\tif ((typeof value === \"object\" && value !== null) || Array.isArray(value)) {\n\t\treturn JSON.stringify(value);\n\t}\n\treturn value;\n};\n\nconst deserialize = (value) => {\n\ttry {\n\t\treturn JSON.parse(value);\n\t} catch {\n\t\treturn value;\n\t}\n};\n\nconst get = (storage) => (key) => {\n\tconst value = storage.getItem(key);\n\treturn value !== null ? deserialize(value) : null;\n};\n\nconst set = (storage) => (key, value) => {\n\tstorage.setItem(key, serialize(value));\n\treturn { key };\n};\n\nconst remove = (storage) => (key) => {\n\tstorage.removeItem(key);\n\treturn { key };\n};\nconst keys = (storage) => () => {\n\treturn Object.keys(storage);\n};\n\nconst has = (storage) => (key) => {\n\treturn storage.getItem(key) !== null && storage.getItem(key) !== undefined;\n};\n\nconst createStorageAdapter = (storage) => {\n\treturn {\n\t\thas: has(storage),\n\t\tset: set(storage),\n\t\tremove: remove(storage),\n\t\tget: get(storage),\n\t\tkeys: keys(storage),\n\t};\n};\n\nconst ramStore = new Map();\nconst ram = {\n\thas: (key) => {\n\t\treturn ramStore.has(key);\n\t},\n\tget: (key) => {\n\t\treturn ramStore.get(key);\n\t},\n\tset: (key, value) => {\n\t\tramStore.set(key, value);\n\t\treturn { key };\n\t},\n\tremove: (key) => {\n\t\tramStore.delete(key);\n\t\treturn { key };\n\t},\n\tkeys: () => ramStore.keys(),\n};\n\nconst local = createStorageAdapter(window.localStorage);\nconst session = createStorageAdapter(window.sessionStorage);\n\nexport default { local, ram, session };\n","metaType": "application/javascript"},"/modules/mvc/controller/adapter-url.js": {"content": "const getHashParams = () => {\n\tconst hash = window.location.hash.substring(1);\n\treturn new URLSearchParams(hash);\n};\n\nconst setHashParams = (params) => {\n\tconst newHash = params.toString();\n\twindow.location.hash = newHash;\n};\n\nconst hash = {\n\tget: (key) => {\n\t\tconst params = getHashParams();\n\t\treturn params.get(key);\n\t},\n\thas: (key) => {\n\t\tconst params = getHashParams();\n\t\treturn params.has(key);\n\t},\n\tset: (key, value) => {\n\t\tconst params = getHashParams();\n\t\tparams.set(key, value);\n\t\tsetHashParams(params);\n\t\twindow.dispatchEvent(new Event(\"popstate\"));\n\t\treturn { key };\n\t},\n\tremove: (key) => {\n\t\tconst params = getHashParams();\n\t\tparams.delete(key);\n\t\tsetHashParams(params);\n\t\treturn { key };\n\t},\n\tkeys: () => {\n\t\tconst params = getHashParams();\n\t\treturn [...params.keys()];\n\t},\n\tentries: () => {\n\t\tconst params = getHashParams();\n\t\treturn [...params.entries()];\n\t},\n};\n\nconst querystring = {\n\tget(key) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\treturn params.get(key);\n\t},\n\n\tset(key, value) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tparams.set(key, value);\n\t\twindow.history?.pushState?.(\n\t\t\t{},\n\t\t\t\"\",\n\t\t\t`${window.location.pathname}?${params}`,\n\t\t);\n\t\twindow.dispatchEvent(new Event(\"popstate\"));\n\t\treturn { key };\n\t},\n\n\tremove(key) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tparams.delete(key);\n\t\twindow.history.pushState?.({}, \"\", `${window.location.pathname}?${params}`);\n\t\treturn { key };\n\t},\n\tkeys() {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\treturn [...params.keys()];\n\t},\n\thas(key) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\treturn params.has(key);\n\t},\n\tentries: () => {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\treturn [...params.entries()];\n\t},\n};\n\nexport default { querystring, hash };\n","metaType": "application/javascript"},"/modules/mvc/controller/backend/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Blocks from \"/modules/blocks/index.js\";\nimport Model from \"/modules/mvc/model/frontend.js\";\nimport View from \"/modules/mvc/view/frontend.js\";\nimport Loader from \"/modules/mvc/view/loader/index.js\";\n\nlet appWorker;\nlet wwPort;\nlet swPort;\nconst pendingRequests = {};\nconst pendingSWRequests = {};\n\nconst handleWWMessage = async (message = {}) => {\n\tconst { data } = message;\n\tconst { eventId, type, payload, connection } = data;\n\tconst handler = $APP.events[type];\n\tlet response = payload;\n\n\tconst respond =\n\t\teventId &&\n\t\t((responsePayload) =>\n\t\t\twwPort.postMessage({\n\t\t\t\teventId,\n\t\t\t\tpayload: responsePayload,\n\t\t\t\tconnection,\n\t\t\t}));\n\n\tif (handler) response = await handler({ respond, payload, eventId });\n\n\tif (eventId && pendingRequests[eventId]) {\n\t\ttry {\n\t\t\tpendingRequests[data.eventId].resolve(response);\n\t\t} catch (error) {\n\t\t\tpendingRequests[data.eventId].reject(new Error(error));\n\t\t} finally {\n\t\t\tdelete pendingRequests[eventId];\n\t\t}\n\t\treturn;\n\t}\n\n\tif (respond) return respond(response);\n};\n\nconst handleSWMessage = async (message = {}) => {\n\tconst { data } = message;\n\tconst { eventId, type, payload } = data;\n\tconsole.log({ eventId, type, payload });\n\tif (eventId && pendingSWRequests[eventId]) {\n\t\ttry {\n\t\t\tpendingSWRequests[eventId].resolve(payload);\n\t\t} catch (error) {\n\t\t\tpendingSWRequests[eventId].reject(new Error(error));\n\t\t} finally {\n\t\t\tdelete pendingSWRequests[eventId];\n\t\t}\n\t\treturn;\n\t}\n\n\tconst handler = $APP.swEvents[type];\n\tif (handler) await handler({ payload });\n};\n\nconst initBackend = async () => {\n\tappWorker = new Worker(\n\t\t`/worker.js?project=${encodeURIComponent(JSON.stringify($APP.settings))}`,\n\t\t{ type: \"module\" },\n\t);\n\n\tconst wwChannel = new MessageChannel();\n\twwPort = wwChannel.port1;\n\twwPort.onmessage = handleWWMessage;\n\tappWorker.postMessage({ type: \"INIT_PORT\" }, [wwChannel.port2]);\n\n\tconst { user, device, app } = await backend(\"INIT_APP\");\n\t$APP.models.set(app.models);\n\t$APP.events.emit(\"INIT_APP\", { user, device, app });\n\t$APP.about = { user, device, app };\n\n\tawait navigator.storage.persist();\n\n\tconst swChannel = new MessageChannel();\n\tswPort = swChannel.port1;\n\tswPort.onmessage = handleSWMessage;\n\n\tconst initSWPort = () => {\n\t\tif (navigator.serviceWorker.controller) {\n\t\t\tnavigator.serviceWorker.controller.postMessage({ type: \"INIT_PORT\" }, [\n\t\t\t\tswChannel.port2,\n\t\t\t]);\n\t\t}\n\t};\n\n\tinitSWPort();\n\tnavigator.serviceWorker.addEventListener(\"controllerchange\", initSWPort);\n};\n\nconst postMessageToPort = (port, params, retryFn) => {\n\tif (!port) {\n\t\tsetTimeout(() => retryFn(params), 100);\n\t\treturn;\n\t}\n\tport.postMessage(params);\n};\n\nconst postMessageToSW = (params) =>\n\tpostMessageToPort(swPort, params, postMessageToSW);\nconst postMessageToWW = (params) =>\n\tpostMessageToPort(wwPort, params, postMessageToWW);\n\nconst requestToSW = (type, payload = {}) => {\n\tconst eventId =\n\t\tDate.now().toString() + Math.random().toString(36).substr(2, 9);\n\treturn new Promise((resolve, reject) => {\n\t\tpendingSWRequests[eventId] = { resolve, reject };\n\t\tpostMessageToSW({ type, payload, eventId });\n\t});\n};\n\n$APP.addModule({\n\tname: \"SW\",\n\tbase: { postMessage: postMessageToSW, request: requestToSW },\n});\n\nconst backend = (type, payload = {}, connection = null) => {\n\tconst eventId =\n\t\tDate.now().toString() + Math.random().toString(36).substr(2, 9);\n\tconst params = { type, payload, eventId };\n\treturn new Promise((resolve, reject) => {\n\t\tif (connection) params.connection = connection;\n\t\tpendingRequests[eventId] = { resolve, reject };\n\t\tpostMessageToWW(params);\n\t});\n};\n\n$APP.hooks.add(\"init\", initBackend);\n\nconst requestDataSync = ({ instance }) => {\n\tconst {\n\t\tid,\n\t\tmodel,\n\t\tlimit,\n\t\toffset = 0,\n\t\tincludes,\n\t\trecursive,\n\t\torder,\n\t\tfilter,\n\t} = instance._data;\n\tconst method = (instance._data.method ?? id) ? \"get\" : \"getMany\";\n\tconst opts = { limit, offset, order, recursive };\n\n\tif (filter && Object.keys(filter).length > 0)\n\t\topts.filter = DisplayHandler.resolveObject(filter, instance);\n\tif (includes)\n\t\topts.includes = Array.isArray(includes) ? includes : includes.split(\",\");\n\n\tconst onDataLoaded = (results) => {\n\t\tif (method.toLowerCase() === \"get\") {\n\t\t\tinstance._row = results;\n\t\t} else {\n\t\t\tinstance._rows = results.items ?? results;\n\t\t\tif (results.count) instance._data.count = results.count;\n\t\t}\n\t\tinstance.requestUpdate();\n\t\tinstance.emit(\"dataLoaded\", { instance, component: instance.constructor });\n\t};\n\n\tif (method.toLowerCase() === \"get\") {\n\t\tModel[model].get(id, opts).then(onDataLoaded);\n\t} else {\n\t\tModel[model].getAll(opts).then(onDataLoaded);\n\t}\n};\n\nconst argsFn = ({ value, ...context }) => {\n\tconst [, ...args] = value.split(\":\");\n\treturn args.map((arg) =>\n\t\tDisplayHandler.resolveValue({ ...context, value: arg }),\n\t);\n};\n\nconst componentsFunctions = {\n\t$find: (context) => {\n\t\tconst [sourceArray, condition] = argsFn(context);\n\t\tif (!Array.isArray(sourceArray) || !condition) return;\n\t\tlet [key, value] = condition.split(\"=\");\n\t\tvalue = DisplayHandler.resolveValue({ ...context, value });\n\t\tif (!key || value === undefined) return;\n\t\treturn sourceArray.find((item) => String(item[key]) === String(value));\n\t},\n\t$boolean: (context) => {\n\t\tconst [source] = argsFn(context);\n\t\tconst value = DisplayHandler.resolveValue({ ...context, value: source });\n\t\treturn Boolean(value);\n\t},\n\t$filter: (context) => {\n\t\tconst [sourceArray, condition] = argsFn(context);\n\t\tif (!Array.isArray(sourceArray) || !condition) return [];\n\t\tconst [key, value] = condition.split(\"=\");\n\t\tif (!key || value === undefined) return [];\n\t\treturn sourceArray.filter((item) => String(item[key]) === String(value));\n\t},\n\t$includes: (context) => {\n\t\tconst [sourceArray, condition] = argsFn(context);\n\t\tif (!Array.isArray(sourceArray) || !condition) return false;\n\t\tconst [key, value] = condition.split(\"=\");\n\t\tif (!key || value === undefined) return false;\n\t\treturn sourceArray.some((item) => String(item[key]) === String(value));\n\t},\n\t$map: (context) => {\n\t\tconst mapFn = (ctx) => {\n\t\t\tconst [sourceArray, key] = argsFn(ctx);\n\t\t\tif (!Array.isArray(sourceArray) || !key) return [];\n\t\t\treturn sourceArray.map((row) => row[key]);\n\t\t};\n\t\tconst willUpdate =\n\t\t\t({ instance, prop }) =>\n\t\t\t() => {\n\t\t\t\tinstance[prop] = mapFn(context);\n\t\t\t\tinstance.requestUpdate();\n\t\t\t};\n\t\treturn mapFn({ ...context, willUpdate });\n\t},\n\t$count: ({ instance }) => instance?._rows?.count ?? instance?._rows?.length,\n\t$now: () => Date.now(),\n\t$data: (context) => {\n\t\tconst { value, prop, instance } = context;\n\t\tconst [, event] = value.split(\":\");\n\t\tif (!componentsEvents.data[event]) return;\n\t\tconst eventFn = componentsEvents.data[event];\n\t\tconst _data = instance._data || instance.closest(\"[_data]\")?._data || {};\n\t\tconst fn = eventFn({ ..._data, instance });\n\t\tif (prop.startsWith(\"on\")) instance[prop] = fn;\n\t\treturn fn;\n\t},\n\t$closest: ({ value, instance }) => {\n\t\tconst [element, fn] = value.slice(9).split(\".\");\n\t\tconst node = instance.closest(element);\n\t\treturn node[fn].bind(node);\n\t},\n\t$query: (context) => {\n\t\tconst { value } = context;\n\t\tif (value.startsWith(\"@parent\"))\n\t\t\treturn componentsFunctions.$parent(context);\n\t\tif (value.startsWith(\"@\")) return componentsFunctions.$row(context);\n\t},\n\t$row: ({ value, instance }) => {\n\t\tconst parent = instance.closest(\"[_row]\");\n\t\tconst row = instance._row ?? parent?._row ?? {};\n\t\treturn value === \"@\" ? row : row[value.slice(1)];\n\t},\n\t$parent: ({ value, instance, prop, willUpdate }) => {\n\t\tconst [, key] = value.split(\".\");\n\t\tconst parent = instance.parentElement.closest(\"[_row]\");\n\t\tif (!parent && !instance._parentListener) return;\n\t\tif (!instance._parentListener) {\n\t\t\tinstance._parentListener = parent;\n\t\t\tif (willUpdate) parent.on(\"willUpdate\", willUpdate({ prop, instance }));\n\t\t}\n\t\tconst row = instance._parentListener._row || {};\n\t\treturn key ? row[key] : row;\n\t},\n\t$today: () => new Date().toISOString().split(\"T\")[0],\n\t$todayLocale: () =>\n\t\tnew Intl.DateTimeFormat(undefined, { dateStyle: \"short\" }).format(\n\t\t\tnew Date(),\n\t\t),\n\t$currentTime: () =>\n\t\tnew Intl.DateTimeFormat(undefined, {\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t}).format(new Date()),\n\t$currentDay: () => new Date().getDate(),\n\t$currentMonth: () => new Date().getMonth() + 1,\n\t$currentYear: () => new Date().getFullYear(),\n\t$currentHour: () => new Date().getHours(),\n\t$timeAgo: ({ value }) => {\n\t\tif (!value) return \"\";\n\t\tconst rtf = new Intl.RelativeTimeFormat(undefined, { numeric: \"auto\" });\n\t\tconst seconds = (new Date(value).getTime() - Date.now()) / 1000;\n\t\tconst time = {\n\t\t\tyear: 31536000,\n\t\t\tmonth: 2592000,\n\t\t\tweek: 604800,\n\t\t\tday: 86400,\n\t\t\thour: 3600,\n\t\t\tminute: 60,\n\t\t};\n\t\tfor (const unit in time) {\n\t\t\tconst interval = seconds / time[unit];\n\t\t\tif (Math.abs(interval) > 1) return rtf.format(Math.round(interval), unit);\n\t\t}\n\t\treturn rtf.format(seconds, \"second\");\n\t},\n};\n\nconst DisplayHandler = {\n\toperators: {\n\t\t$eq: (s, p) => s === p,\n\t\t$neq: (s, p) => s !== p,\n\t\t$exists: (s) => s != null,\n\t\t$nexists: (s) => s == null,\n\t\t$gt: (s, p) => Number(s) > Number(p),\n\t\t$inc: (s, p) => {\n\t\t\tif (!Array.isArray(s)) return false;\n\t\t\tconst [key, value] = Object.entries(p)[0];\n\t\t\treturn s.some((item) => item && item[key] === value);\n\t\t},\n\t\t$ninc: (s, p) => {\n\t\t\tif (!Array.isArray(s)) return true;\n\t\t\tconst [key, value] = Object.entries(p)[0];\n\t\t\treturn !s.some((item) => item && item[key] === value);\n\t\t},\n\t},\n\tresolveObject(object, instance) {\n\t\treturn Object.fromEntries(\n\t\t\tObject.entries(object).map(([prop, value]) => [\n\t\t\t\tprop,\n\t\t\t\tDisplayHandler.resolveValue({ prop, value, instance }),\n\t\t\t]),\n\t\t);\n\t},\n\tresolveValue(context) {\n\t\tconst { value } = context;\n\t\tif (typeof value === \"object\" && value.tag) {\n\t\t\tconst block = {\n\t\t\t\t...value,\n\t\t\t\tproperties: { ...(value.properties || {}) },\n\t\t\t};\n\t\t\treturn value.function\n\t\t\t\t? (args = {}) => {\n\t\t\t\t\t\tblock.properties = { ...block.properties, ...args };\n\t\t\t\t\t\treturn Blocks.render({ block });\n\t\t\t\t\t}\n\t\t\t\t: Blocks.render({ block });\n\t\t}\n\t\tif (typeof value !== \"string\") return value;\n\t\tif (value.startsWith(\"@\")) return componentsFunctions.$query(context);\n\t\tif (value.startsWith(\"$\")) {\n\t\t\tconst [fn] = value.split(\":\");\n\t\t\treturn componentsFunctions[fn]?.(context);\n\t\t}\n\t\treturn value;\n\t},\n\tresolveParams(params, context) {\n\t\tif (typeof params !== \"object\" || params === null)\n\t\t\treturn this.resolveValue({ ...context, value: params });\n\t\tconst resolved = {};\n\t\tfor (const key in params) {\n\t\t\tresolved[key] = this.resolveValue({ ...context, value: params[key] });\n\t\t}\n\t\treturn resolved;\n\t},\n\tevaluate(rules, context) {\n\t\tfor (const subjectStr in rules) {\n\t\t\tconst condition = rules[subjectStr];\n\t\t\tconst subject = this.resolveValue({ ...context, value: subjectStr });\n\t\t\tfor (const operator in condition) {\n\t\t\t\tif (!this.operators[operator]) continue;\n\t\t\t\tconst rawParams = condition[operator];\n\t\t\t\tconst resolvedParams = this.resolveParams(rawParams, context);\n\t\t\t\tif (!this.operators[operator](subject, resolvedParams)) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n};\n\nconst componentsEvents = {\n\tdata: {\n\t\t_prepareRow(model, instance) {\n\t\t\tconst modelProps = $APP.models[model];\n\t\t\tif (!modelProps) return;\n\t\t\tif (!instance._row) instance._row = {};\n\t\t\tinstance\n\t\t\t\t.qa(\".uix-input\")\n\t\t\t\t.forEach((input) => (instance._row[input.name] = input.inputValue()));\n\t\t\tconst row = { ...instance._row };\n\t\t\tObject.keys(row).forEach((prop) => {\n\t\t\t\tif (prop !== \"id\" && modelProps[prop] === undefined) delete row[prop];\n\t\t\t});\n\t\t\treturn row;\n\t\t},\n\t\trender() {\n\t\t\tconst { model, tag, blocks, properties = {} } = this._data;\n\t\t\tconst rows = this._rows ?? (this._row ? [this._row] : null);\n\t\t\tif (!rows) return;\n\t\t\treturn rows.map((row) =>\n\t\t\t\tBlocks.render({\n\t\t\t\t\trow,\n\t\t\t\t\tblock: {\n\t\t\t\t\t\ttag,\n\t\t\t\t\t\tblocks,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tclass: this._data.class,\n\t\t\t\t\t\t\t_data: { model, id: row.id },\n\t\t\t\t\t\t\t_row: row,\n\t\t\t\t\t\t\t...properties,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\tremove:\n\t\t\t({ model, id, instance }) =>\n\t\t\t() =>\n\t\t\t\tid\n\t\t\t\t\t? Model[model].remove(id)\n\t\t\t\t\t: Model[model].removeAll(\n\t\t\t\t\t\t\tcomponentsEvents.data._prepareRow(model, instance),\n\t\t\t\t\t\t),\n\t\tadd:\n\t\t\t({ model, instance }) =>\n\t\t\tasync () => {\n\t\t\t\tconst rowData = componentsEvents.data._prepareRow(model, instance);\n\t\t\t\tif (!rowData) return;\n\t\t\t\tconst res = await Model[model].add(rowData);\n\t\t\t\tif (res?.id) instance._row.id = res.id;\n\t\t\t},\n\t\tedit:\n\t\t\t({ model, instance }) =>\n\t\t\tasync () => {\n\t\t\t\tconst rowData = componentsEvents.data._prepareRow(model, instance);\n\t\t\t\tif (rowData?.id) await Model[model].edit(rowData);\n\t\t\t},\n\t\tupsert:\n\t\t\t({ model, instance }) =>\n\t\t\tasync () => {\n\t\t\t\tconst rowData = componentsEvents.data._prepareRow(model, instance);\n\t\t\t\tif (!rowData) return;\n\t\t\t\tif (rowData.id) {\n\t\t\t\t\tawait Model[model].edit(rowData);\n\t\t\t\t} else {\n\t\t\t\t\tconst res = await Model[model].add(rowData);\n\t\t\t\t\tif (res?.id) instance._row.id = res.id;\n\t\t\t\t}\n\t\t\t},\n\t},\n};\n\nView.plugins.push({\n\tevent: \"connectedCallback\",\n\ttest: ({ instance }) => !!instance._data?.displayIf,\n\tfn: ({ instance }) => {\n\t\tconst { displayIf } = instance._data;\n\t\tconst evaluate = () =>\n\t\t\tinstance.classList.toggle(\n\t\t\t\t\"hide\",\n\t\t\t\t!DisplayHandler.evaluate(displayIf, context),\n\t\t\t);\n\t\tconst context = { instance, row: instance._row, listener: evaluate };\n\t\tevaluate();\n\t\tinstance.on(\"dataLoaded\", evaluate);\n\t},\n});\n\nconst instanceMapProperties = ({ instance }) => {\n\tfor (const [propKey, value] of Object.entries(instance._map)) {\n\t\tif (!propKey || !value) continue;\n\t\tconst resolvedValue = DisplayHandler.resolveValue({\n\t\t\tvalue,\n\t\t\tinstance,\n\t\t\tprop: propKey,\n\t\t});\n\t\tinstance.state[propKey] = resolvedValue;\n\t\tconst prop = instance.constructor.properties[propKey];\n\t\tif (prop?.attribute && propKey !== \"_row\") {\n\t\t\tinstance.updateAttribute({\n\t\t\t\tkey: propKey,\n\t\t\t\tvalue: resolvedValue,\n\t\t\t\ttype: prop.type,\n\t\t\t\tskipPropUpdate: true,\n\t\t\t});\n\t\t}\n\t\tif (!instance.state._row) instance.state._row = {};\n\t\tinstance.state._row[propKey] = resolvedValue;\n\t}\n};\n\nView.plugins.push({\n\tevent: \"connectedCallback\",\n\ttest: ({ instance }) =>\n\t\tinstance?._data?.model &&\n\t\t![\"add\", \"edit\", \"remove\"].includes(instance?._data?.method),\n\tfn: ({ instance }) => {\n\t\tinstance._listeners = {};\n\t\tif (instance._data.tag) {\n\t\t\tinstance.on(\"dataLoaded\", () => {\n\t\t\t\tif (!instance._updatedRender) {\n\t\t\t\t\tinstance.render = componentsEvents.data.render.bind(instance);\n\t\t\t\t\tinstance._updatedRender = true;\n\t\t\t\t}\n\t\t\t\tinstance.requestUpdate();\n\t\t\t});\n\t\t}\n\n\t\tconst { model, id } = instance._data;\n\t\tconst row = instance._row;\n\n\t\tif (row && !id) {\n\t\t\tinstance._data.id = row.id;\n\t\t}\n\t\tif ((row && !id) || instance._rows) {\n\t\t\tinstance.emit(\"dataLoaded\", {\n\t\t\t\tinstance,\n\t\t\t\tcomponent: instance.constructor,\n\t\t\t});\n\t\t}\n\n\t\tconst modelRows = Model[model]?.rows;\n\t\tif (!modelRows) return;\n\n\t\tif (id) {\n\t\t\tconst listenerKey = `get:${id}`;\n\t\t\tif (row !== undefined && modelRows[id] === undefined) {\n\t\t\t\tmodelRows[id] = row;\n\t\t\t}\n\t\t\tinstance._listeners[listenerKey] = () => {\n\t\t\t\tinstance._row = modelRows[id];\n\t\t\t\tinstance.requestUpdate();\n\t\t\t};\n\t\t\tModel[model].on(listenerKey, instance._listeners[listenerKey]);\n\t\t} else {\n\t\t\tinstance._listeners.any = () => requestDataSync({ instance });\n\t\t\tModel[model].onAny(instance._listeners.any);\n\t\t}\n\n\t\tif (!instance._row && !instance._rows) requestDataSync({ instance });\n\t\tinstance.syncable = true;\n\t},\n});\n\nView.plugins.push({\n\tevent: \"connectedCallback\",\n\ttest: ({ instance }) => !!instance._map,\n\tfn: ({ instance }) => {\n\t\tconst container = instance.parentElement.closest(\"[_data]\");\n\t\tif (!container) return;\n\t\tcontainer.on(\"dataLoaded\", () => {\n\t\t\tinstanceMapProperties({ instance });\n\t\t\tinstance.requestUpdate();\n\t\t});\n\t},\n});\n\nView.plugins.push({\n\tevent: \"willUpdate\",\n\ttest: ({ instance }) => !!instance._map,\n\tfn() {\n\t\tinstanceMapProperties({ instance: this });\n\t},\n});\n\nView.plugins.push({\n\tevent: \"disconnectedCallback\",\n\ttest: ({ instance }) => instance.syncable,\n\tfn: ({ instance }) => {\n\t\tObject.entries(instance._listeners).forEach(([key, listener]) => {\n\t\t\tif (key === \"any\") Model[instance._data.model].offAny(listener);\n\t\t\telse Model[instance._data.model].off(key, listener);\n\t\t});\n\t},\n});\n\n$APP.events.set({\n\tBROADCAST: (payload) => {},\n\tUPDATE_MODELS: ({ payload: { models } }) => $APP.models.set(models),\n\tREQUEST_DATA_SYNC: ({ payload: { model, key, data } }) => {\n\t\tconsole.log({ key, model, data });\n\t\tModel[model].emit(key, data);\n\t},\n});\n\nexport default backend;\n","metaType": "application/javascript"},"/modules/blocks/index.js": {"content": "import { keyed as keyedDirective } from \"/modules/mvc/view/html/directive.js\";\nimport htmlModule from \"/modules/mvc/view/html/index.js\";\nimport spread from \"/modules/mvc/view/html/spread.js\";\n\nconst { unsafeStatic, staticHTML: html } = htmlModule;\n\nfunction parse(htmlString) {\n\tconst parser = new DOMParser();\n\tconst doc = parser.parseFromString(htmlString, \"text/html\");\n\n\tfunction parseValue(value) {\n\t\tif (value === \"\" || value.toLowerCase() === \"true\") return true;\n\t\tif (value.toLowerCase() === \"false\") return false;\n\t\tif (value.trim() !== \"\" && !Number.isNaN(Number(value))) {\n\t\t\treturn Number(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction elementToBlock(element) {\n\t\tconst properties = {};\n\t\tfor (const attr of element.attributes) {\n\t\t\tproperties[attr.name] = parseValue(attr.value);\n\t\t}\n\n\t\tconst block = {\n\t\t\ttag: element.tagName.toLowerCase(),\n\t\t\tproperties: properties,\n\t\t\tblocks: Array.from(element.children).map(elementToBlock),\n\t\t};\n\n\t\treturn block;\n\t}\n\treturn Array.from(doc.body.children).map(elementToBlock);\n}\n\nfunction render({ block, row, filter, keyed = true }) {\n\tif (!block || !block.tag) return \"\";\n\tconst { tag, properties = {}, value, topBlock, bottomBlock } = block;\n\tlet blocks = block.blocks || [];\n\tconst tagName = tag;\n\tif (topBlock) blocks.unshift(topBlock);\n\tif (bottomBlock) blocks.push(bottomBlock);\n\tif (filter) blocks = blocks.filter(filter);\n\n\tconst children = blocks?.length\n\t\t? blocks.map((child) => render({ block: child, filter, keyed: false }))\n\t\t: value?.tag\n\t\t\t? render({ block: value, filter, keyed: false })\n\t\t\t: (value ?? \"\");\n\tconst template = html`<${unsafeStatic(tagName)}  ${spread(properties)}>${children}</${unsafeStatic(tagName)}>`;\n\treturn row?.id && keyed === true\n\t\t? keyedDirective(row.id, template)\n\t\t: template;\n}\n\nconst blocks = { render, parse };\n\nexport default blocks;\n","metaType": "application/javascript"},"/modules/mvc/model/frontend.js": {"content": "import backend from \"/modules/mvc/controller/backend/frontend.js\";\nimport Model from \"/modules/mvc/model/index.js\";\n\nconst request = (action, modelName, params = {}) => {\n\treturn backend(action, {\n\t\tmodel: modelName,\n\t\t...params,\n\t});\n};\n\nModel.request = request;\nexport default Model;\n","metaType": "application/javascript"},"/modules/mvc/view/loader/index.js": {"content": "import $APP from \"/bootstrap.js\";\nimport View from \"/modules/mvc/view/frontend.js\";\nimport ThemeManager from \"/modules/theme/index.js\";\n\nconst modulePath = `${$APP.settings.basePath}/modules`;\nconst componentDefinitions = new Map();\nconst componentConstructors = new Map();\nconst componentLoadPromises = new Map();\nconst resolvePath = (tagName) => {\n\tif ($APP.components?.[tagName]?.path) return $APP.components[tagName].path;\n\tconst parts = tagName.split(\"-\");\n\tconst moduleName = parts[0];\n\tconst module = $APP.modules[moduleName];\n\tconst componentName = parts.slice(1).join(\"-\");\n\tif (module)\n\t\treturn [modulePath, module.path ?? moduleName, componentName].join(\"/\");\n\treturn [$APP.settings.basePath, tagName].join(\"/\");\n};\n\nconst loadComponent = (tag) => {\n\tconst path = resolvePath(tag);\n\treturn $APP.fs.import(`${path}.js`, { tag });\n};\n\nasync function createAndRegisterComponent(tag, definition) {\n\tconst {\n\t\tproperties = {},\n\t\ticons,\n\t\tformAssociated = false,\n\t\tcss,\n\t\tstyle = false,\n\t\textends: extendsTag,\n\t\ttypes,\n\t\tconnectedCallback,\n\t\tdisconnectedCallback,\n\t\twillUpdate,\n\t\tfirstUpdated,\n\t\tupdated,\n\t\tclass: klass,\n\t\t...prototypeMethods\n\t} = definition;\n\tconst BaseClass = extendsTag ? await getComponent(extendsTag) : View;\n\tconst NewComponentClass = class extends BaseClass {\n\t\tstatic icons = icons;\n\t\tstatic css = css;\n\t\tstatic formAssociated = formAssociated;\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tif (klass) {\n\t\t\t\tthis.classList.add(...klass.split(\" \"));\n\t\t\t}\n\t\t}\n\n\t\tstatic properties = (() => {\n\t\t\tconst baseProperties = super.properties || {};\n\t\t\tconst baseTheme = super.theme || {};\n\t\t\tconst merged = { ...baseProperties };\n\t\t\tfor (const key of Object.keys(properties)) {\n\t\t\t\tconst config = properties[key];\n\n\t\t\t\tif (config.type === \"object\" && config.properties)\n\t\t\t\t\tconfig.properties = merged[key]?.properties\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...merged[key]?.properties,\n\t\t\t\t\t\t\t\t...config.properties,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: config.properties;\n\n\t\t\t\tmerged[key] = merged[key]\n\t\t\t\t\t? { ...merged[key], ...config }\n\t\t\t\t\t: { ...config };\n\t\t\t\tif (config.theme) baseTheme[key] = merged[key].theme;\n\t\t\t}\n\t\t\tif (types) baseTheme.types = types;\n\t\t\tsuper.theme = baseTheme;\n\t\t\tmerged.attribute = merged.attribute === false;\n\t\t\treturn merged;\n\t\t})();\n\t};\n\tObject.assign(NewComponentClass.prototype, prototypeMethods);\n\tNewComponentClass.tag = tag;\n\tNewComponentClass._attrs = Object.fromEntries(\n\t\tObject.keys(NewComponentClass.properties).map((prop) => [\n\t\t\tprop.toLowerCase(),\n\t\t\tprop,\n\t\t]),\n\t);\n\tNewComponentClass.plugins = [...NewComponentClass.plugins];\n\n\tObject.entries({\n\t\tconnectedCallback,\n\t\tdisconnectedCallback,\n\t\twillUpdate,\n\t\t"metaType": "application/javascript"},"/modules/mvc/view/html/spread.js": {"content": "import { Directive, directive } from \"/modules/mvc/view/html/directive.js\";\n\nconst prefixValueKeys = (value, prefix) => {\n\tconst o = {};\n\tfor (const p in value) {\n\t\to[prefix + p] = value[p];\n\t}\n\treturn o;\n};\n\nconst toSpread = ({ properties, events, attributes, booleanAttributes }) => {\n\tproperties ??= {};\n\treturn {\n\t\t...attributes,\n\t\t...prefixValueKeys(properties ?? {}, \".\"),\n\t\t...prefixValueKeys(events ?? {}, \"@\"),\n\t\t...prefixValueKeys(booleanAttributes ?? {}, \"?\"),\n\t};\n};\n\nclass Spread extends Directive {\n\telement;\n\thost;\n\tpreviousValue;\n\n\trender(value, events) {}\n\n\tisEqual(o, v) {\n\t\treturn Object.is(o, v);\n\t}\n\n\tupdate(part, [value]) {\n\t\tthis.element ??= part.element;\n\t\tif (this.element === undefined) {\n\t\t\tthis.element = part.parentNode;\n\t\t}\n\t\tthis.host ??= part.options?.host;\n\t\t"metaType": "application/javascript"},"/modules/mvc/view/html/directive.js": {"content": "\nexport const directive =\n\t(c) =>\n\t(...values) => ({\n\t\t"metaType": "application/javascript"},"/modules/theme/index.js": {"content": "import $APP from \"/bootstrap.js\";\nconst Theme = new Map();\n\nconst camelToKebab = (str) =>\n\tstr.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nconst generateShade = (baseColorVar, percentage) =>\n\tpercentage >= 0\n\t\t? `color-mix(in hsl, white ${percentage}%, ${baseColorVar})`\n\t\t: `color-mix(in hsl, ${baseColorVar}, black ${Math.abs(percentage)}%)`;\n\nconst shades = {\n\t0: 100,\n\t1: 98,\n\t5: 90,\n\t10: 80,\n\t20: 60,\n\t30: 40,\n\t40: 20,\n\t50: 0,\n\t60: -20,\n\t70: -30,\n\t80: -40,\n\t90: -55,\n\t95: -65,\n\t99: -80,\n\t100: -100,\n};\n\nconst generateColorVariables = (colors) =>\n\tObject.entries(colors)\n\t\t.flatMap(([color, value]) => [\n\t\t\t`--color-${color}: ${value};`,\n\t\t\t...Object.entries(shades).map(\n\t\t\t\t([shade, percentage]) =>\n\t\t\t\t\t`--color-${color}-${shade}: ${generateShade(`var(--color-${color})`, percentage)};`,\n\t\t\t),\n\t\t])\n\t\t.join(\"\\n\");\n\nconst generateGeneralVariables = (obj, prefix = \"--\") =>\n\tObject.entries(obj)\n\t\t.flatMap(([key, value]) =>\n\t\t\tkey === \"colors\"\n\t\t\t\t? []\n\t\t\t\t: typeof value === \"object\" && value !== null\n\t\t\t\t\t? generateGeneralVariables(value, `${prefix}${camelToKebab(key)}-`)\n\t\t\t\t\t: `${prefix}${camelToKebab(key)}: ${value};`,\n\t\t)\n\t\t.join(\"\\n\");\n\nconst setCSSVariables = (root, { colors, ...theme }) => {\n\tconst cssString = `${generateColorVariables(colors)}\\n${generateGeneralVariables(theme)}`;\n\tcssString\n\t\t.split(\"\\n\")\n\t\t.filter(Boolean)\n\t\t.forEach((variable) => {\n\t\t\tconst [name, value] = variable.trim().split(\": \");\n\t\t\troot.style.setProperty(name, value.slice(0, -1));\n\t\t});\n};\n\nconst globalStyleTag = (() => {\n\tconst styleTag =\n\t\tdocument.querySelector(\"#compstyles\") ||\n\t\t(() => {\n\t\t\tconst tag = document.createElement(\"style\");\n\t\t\ttag.id = \"compstyles\";\n\t\t\tdocument.head.appendChild(tag);\n\t\t\treturn tag;\n\t\t})();\n\treturn styleTag;\n})();\n\nasync function loadStyle(component) {\n\tconst { tag, css } = component;\n\tif (!css) return;\n\tif (Theme.has(tag)) return;\n\tTheme.set(tag, \"\");\n\tif (css) globalStyleTag.textContent += `.${tag} { ${css} }`;\n}\n\nconst getSize = (value, multiplier) => {\n\tconst size = $APP.theme.sizes[value] || value;\n\tif (typeof size === \"number\")\n\t\treturn multiplier ? `calc(${size}px * ${multiplier})` : `${size}px`;\n\tif (typeof size === \"string\" && size.includes(\"/\")) {\n\t\tconst [num, den] = size.split(\"/\");\n\t\tconst percent = `${((Number.parseFloat(num) / Number.parseFloat(den)) * 100).toFixed(3)}%`;\n\t\treturn multiplier ? `calc(${percent} * ${multiplier})` : percent;\n\t}\n\treturn size;\n};\n\nconst getTextSize = (\n\tsize,\n\t{ base = $APP.theme.text.base, ratio = $APP.theme.text.ratio } = {},\n) => {\n\tconst baseIndex = $APP.theme.text.sizes.indexOf(\"md\");\n\tconst sizeIndex = $APP.theme.text.sizes.indexOf(size);\n\tconst diff = sizeIndex - baseIndex;\n\tconst result =\n\t\tdiff < 0 ? base / ratio ** Math.abs(diff) : base * ratio ** diff;\n\treturn `${result.toFixed(2)}rem`;\n};\n\nconst ThemeManager = {\n\tloadStyle,\n\tgetSize,\n\tgetTextSize,\n};\n\n$APP.hooks.set({\n\tinit: () => {\n\t\tsetCSSVariables(document.documentElement, $APP.theme);\n\t},\n\tmoduleAdded({ module }) {\n\t\tif (module.theme) $APP.theme[module.name] = module.theme;\n\t},\n});\n\n$APP.theme.set({\n\tcolors: {\n\t\tdefault: \"darkgray\",\n\t\tprimary: \"#00a7f1\",\n\t\tsecondary: \"#007400\",\n\t\ttertiary: \"#00998d\",\n\t\tsuccess: \"#49f09c\",\n\t\twarning: \"#fc8700\",\n\t\terror: \"#ff0040\",\n\t\tsurface: \"darkgray\",\n\t\tred: \"#F44336\",\n\t\tpink: \"#E91E63\",\n\t\tpurple: \"#9C27B0\",\n\t\tblue: \"#2196F3\",\n\t\tcyan: \"#00BCD4\",\n\t\tgreen: \"#4CAF50\",\n\t\tyellow: \"#FFEB3B\",\n\t\torange: \"#FF9800\",\n\t\tbrown: \"#795548\",\n\t\tgray: \"#9E9E9E\",\n\t\tblack: \"#000000\",\n\t\twhite: \"#FFFFFF\",\n\t},\n\tfont: {\n\t\tfamily:\n\t\t\t\"'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif\",\n\t\ticonFamily: \"lucide\",\n\t\ticon: {\n\t\t\tfamily: \"lucide\",\n\t\t},\n\t},\n\tbackground: {\n\t\tcolor: \"var(--color-primary-10)\",\n\t},\n\tbutton: {\n\t\tshade: 60,\n\t\tborder: {\n\t\t\tshade: 90,\n\t\t},\n\t},\n\ttext: {\n\t\tcolor: \"var(--color-surface-100)\",\n\t\tsizes: [\n\t\t\t\"2xs\",\n\t\t\t\"xs\",\n\t\t\t\"sm\",\n\t\t\t\"md\",\n\t\t\t\"lg\",\n\t\t\t\"xl\",\n\t\t\t\"2xl\",\n\t\t\t\"xl\",\n\t\t\t\"2xl\",\n\t\t\t\"3xl\",\n\t\t\t\"4xl\",\n\t\t],\n\t\tbase: 1,\n\t\tratio: 1.2,\n\t},\n\tborder: {\n\t\tradius: \"md\",\n\t\tsize: \"1px\",\n\t\tstyle: \"solid\",\n\t\tcolor: \"var(--color-default-70)\",\n\t},\n\tradius: {\n\t\txs: \"2px\",\n\t\tsm: \"4px\",\n\t\tmd: \"8px\",\n\t\tlg: \"12px\",\n\t\txl: \"16px\",\n\t\t\"2xl\": \"24px\",\n\t\tfull: \"100%\",\n\t},\n\tspacing: {\n\t\tnone: \"0\",\n\t\txs: \"0.25rem\",\n\t\tsm: \"0.5rem\",\n\t\tmd: \"1rem\",\n\t\tlg: \"1.5rem\",\n\t\txl: \"2rem\",\n\t\t\"2xl\": \"2.5rem\",\n\t\t\"3xl\": \"3rem\",\n\t\t\"4xl\": \"4rem\",\n\t},\n\tsizes: {\n\t\t\"3xs\": 50,\n\t\t\"2xs\": 80,\n\t\txs: 120,\n\t\tsm: 200,\n\t\tmd: 320,\n\t\tlg: 480,\n\t\txl: 768,\n\t\t\"2xl\": 1024,\n\t\t\"3xl\": 1280,\n\t\t\"4xl\": 1536,\n\t\tmin: \"min-content\",\n\t\tmax: \"max-content\",\n\t\tfit: \"fit-content\",\n\t\t\"fit-content\": \"fit-content\",\n\t\tscreen: \"100vh\",\n\t\tfull: \"100%\",\n\t\tauto: \"auto\",\n\t},\n});\nexport default ThemeManager;\n","metaType": "application/javascript"},"/modules/icon-lucide/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({ name: \"icon-lucide\", icon: true });\n","metaType": "application/javascript"},"/modules/font/manrope/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"manrope\",\n\tfont: {\n\t\tname: \"Manrope\",\n\t\ttype: \"woff2\",\n\t\tvariants: [\n\t\t\t\"extralight\",\n\t\t\t\"light\",\n\t\t\t\"medium\",\n\t\t\t\"regular\",\n\t\t\t\"semibold\",\n\t\t\t\"bold\",\n\t\t\t\"extrabold\",\n\t\t],\n\t},\n});\n","metaType": "application/javascript"},"/modules/uix/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"uix\",\n\tfrontend: true,\n\tcomponents: {\n\t\tform: [\n\t\t\t\"form\",\n\t\t\t\"form-control\",\n\t\t\t\"input\",\n\t\t\t\"select\",\n\t\t\t\"textarea\",\n\t\t\t\"time\",\n\t\t\t\"rating\",\n\t\t\t\"join\",\n\t\t\t\"file-upload\", "metaType": "application/javascript"},"/modules/uix/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport html from \"/modules/mvc/view/html/index.js\";\n\nconst routes = {\n\t\"/theme\": {\n\t\tcomponent: () => html`<theme-ui></theme-ui>`,\n\t\ttitle: \"Theme\",\n\t\ttemplate: \"uix-template\",\n\t},\n};\n\n$APP.routes.set(routes);\n","metaType": "application/javascript"},"/modules/apps/bundler/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\n$APP.addModule({\n\tname: \"bundler\",\n\tpath: \"apps/bundler\",\n\tbase: [],\n\tdev: true,\n\tfrontend: true,\n});\n","metaType": "application/javascript"},"/modules/apps/bundler/frontend.js": {"content": "export default {}"},"/modules/integrations/github.js": {"content": "export default {}"},"/modules/p2p/index.js": {"content": "import $APP from \"/bootstrap.js\";\n\nconst p2p = {};\n$APP.events.install(p2p);\n$APP.addModule({\n\tname: \"p2p\",\n\tfrontend: true,\n\tbackend: true,\n\tbase: p2p,\n});\n","metaType": "application/javascript"},"/modules/p2p/frontend.js": {"content": "import $APP from \"/bootstrap.js\";\n\nconst events = {\n\t\"P2P:SEND_DATA_OP\": ({ payload }) => {\n\t\tconsole.log(\"P2P DATA OP\", { payload });\n\t\t$APP.p2p.emit(\"SEND_DATA_OP\", payload);\n\t},\n};\n$APP.events.set(events);\n","metaType": "application/javascript"},"/theme.css": {"content": "body {\n\tfont-family: var(--font-family);\n}\n\nhtml,\nbody {\n\tfont-family: var(--font-family);\n\tbackground-color: var(--background-color) !important;\n\tcolor: var(--text-color) !important;\n\twidth: 100%;\n\tmin-height: 100%;\n\theight: 100%;\n\tpadding: 0;\n\tmargin: 0;\n}\n\nbody:not(.production) *:not(:defined) {\n\tborder: 1px solid red;\n}\n\n.dark {\n\tfilter: invert(1) hue-rotate(180deg);\n}\n\n.dark img,\n.dark dialog,\n.dark video,\n.dark iframe {\n\tfilter: invert(1) hue-rotate(180deg);\n}\n\nhtml {\n\tfont-size: 14px;\n}\n\n@media (max-width: 768px) {\n\thtml {\n\t\tfont-size: 18px;\n\t}\n}\n\n@media (max-width: 480px) {\n\thtml {\n\t\tfont-size: 20px;\n\t}\n}\n\ntextarea {\n\tfont-family: inherit;\n\tfont-feature-settings: inherit;\n\tfont-variation-settings: inherit;\n\tfont-size: 100%;\n\tfont-weight: inherit;\n\tline-height: inherit;\n\tcolor: inherit;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n:root {\n\tbox-sizing: border-box;\n\t-moz-text-size-adjust: none;\n\t-webkit-text-size-adjust: none;\n\ttext-size-adjust: none;\n\tline-height: 1.2;\n\t-webkit-font-smoothing: antialiased;\n}\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n* {\n\tmargin: 0;\n}\nbody {\n\t-webkit-font-smoothing: antialiased;\n}\na {\n\tcolor: currentColor;\n\ttext-decoration: none;\n\tfont-family: var(--font-family);\n}\n\nbutton,\ntextarea,\nselect {\n\tbackground-color: inherit;\n\tborder-width: 0;\n\tcolor: inherit;\n}\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n\tdisplay: block;\n\tmax-width: 100%;\n}\ninput,\nbutton,\ntextarea,\nselect {\n\tfont: inherit;\n}\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tfont-family: var(--font-family);\n\toverflow-wrap: break-word;\n}\n\ndialog::backdrop {\n\tbackground-color: rgba(0, 0, 0, 0.8);\n}\n\n*::-webkit-scrollbar {\n\twidth: 8px;\n\tmargin-right: 10px;\n}\n\n*::-webkit-scrollbar-track {\n\tbackground: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n\t&:hover {\n\t\tscrollbar-color: rgba(154, 153, 150, 0.8) transparent;\n\t}\n\tborder-radius: 10px;\n\tborder: none;\n}\n\n*::-webkit-scrollbar-button {\n\tbackground: transparent;\n\tcolor: transparent;\n}\n\n* {\n\tscrollbar-width: thin;\n\tscrollbar-color: transparent transparent;\n\t&:hover {\n\t\tscrollbar-color: rgba(154, 153, 150, 0.8) transparent;\n\t}\n}\n\n[full] {\n\twidth: 100%;\n\theight: 100vh;\n}\n\n[w-full] {\n\twidth: 100%;\n}\n\n[grow] {\n\tflex-grow: 1;\n}\n\n[hide] {\n\tdisplay: none !important;\n}\n\n.hide {\n\tdisplay: none !important;\n}\n\n[noscroll] {\n\toverflow: hidden;\n}\n\ndiv [container] {\n\tdisplay: flex;\n}\n\ndiv [container][horizontal] {\n\tdisplay: flex;\n\tflex-direction: col;\n}\n","metaType": "text/css"},"/worker.js": {"content": "import $APP from \"/bootstrap.js\";\n\nlet STARTED;\n\nconst bootstrap = async (_project) => {\n\tconsole.log(\"App Worker: bootstrap() called\");\n\tconst url = new URL(self.location);\n\tconst param = url.searchParams.get(\"project\");\n\tconst project = param ? JSON.parse(decodeURIComponent(param)) : {};\n\tproject.backend = true;\n\tconst APP = await $APP.bootstrap({\n\t\tbackend: true,\n\t\t...(project || {}),\n\t\tsettings: {\n\t\t\t...(project.settings || {}),\n\t\t\tpreview: !!self.IS_PREVIEW,\n\t\t\tIS_MV3: !!self.chrome,\n\t\t},\n\t});\n\n\tif (APP && !STARTED) {\n\t\tconsole.log(\"App Worker: Initializing backend application\");\n\t\tawait $APP.Backend.bootstrap(APP);\n\t}\n\treturn APP;\n};\n\nlet app;\nlet commsPort;\nconst events = [];\nconst MessageHandler = {\n\thandleMessage: async ({ data }) => {\n\t\tif (data.eventId && events.includes(data.eventId)) return;\n\t\tif (data.eventId) events.push(data.eventId);\n\n\t\tconst respond =\n\t\t\tdata.eventId &&\n\t\t\t((responsePayload) => {\n\t\t\t\tif (commsPort) {\n\t\t\t\t\tcommsPort.postMessage({\n\t\t\t\t\t\teventId: data.eventId,\n\t\t\t\t\t\tpayload: responsePayload,\n\t\t\t\t\t\tconnection: data.connection,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (data.type === \"LOAD_APP\" && $APP.settings.preview) {\n\t\t\tconst project = data?.payload?.project;\n\t\t\tif (!project) return;\n\t\t\tif (app) {\n\t\t\t\tconsole.info(\"App Worker: Restarting existing application\");\n\t\t\t\tapp.restart();\n\t\t\t}\n\t\t\tapp = await bootstrap(project);\n\t\t}\n\n\t\tif ($APP?.Backend) {\n\t\t\tconsole.info(`App Worker: Routing message to backend: ${data.type}`);\n\t\t\t$APP.Backend.handleMessage({\n\t\t\t\tdata,\n\t\t\t\trespond,\n\t\t\t});\n\t\t} else {\n\t\t\t$APP.hooks.add(\"APP:BACKEND_STARTED\", async () => {\n\t\t\t\tconsole.info(\n\t\t\t\t\t`App Worker: Routing message to backend after APP:BACKEND_STARTED: ${data.type}`,\n\t\t\t\t);\n\t\t\t\t$APP.Backend.handleMessage({\n\t\t\t\t\tdata,\n\t\t\t\t\trespond,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n};\n\nself.addEventListener(\"message\", async (event) => {\n\tif (event.data.type === \"INIT_PORT\") {\n\t\tcommsPort = event.ports[0];\n\t\tconsole.warn(\"App Worker: Communication port initialized.\");\n\t\tcommsPort.onmessage = MessageHandler.handleMessage;\n\t\t(async () => {\n\t\t\tapp = await bootstrap();\n\t\t\t$APP.Backend.client = commsPort;\n\t\t})();\n\t}\n});\n","metaType": "application/javascript"},"/modules/mvc/view/backend.js": {"content": "import $APP from \"/bootstrap.js\";\n\nconst getTagProps = async (tag) => {\n\treturn $APP.Backend.requestFromClient(\"GET_TAG_PROPS\", { tag });\n};\n$APP.addFunctions({ name: \"view\", functions: { getTagProps } });\n","metaType": "application/javascript"},"/modules/mvc/controller/backend/backend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Model from \"/modules/mvc/model/backend.js\";\nimport Database from \"/modules/mvc/model/database/index.js\";\n\nconst generateId = (() => {\n\tlet lastTimestamp = 0;\n\tlet sequentialCounter = 0;\n\treturn () => {\n\t\tlet now = Date.now();\n\t\tif (now > lastTimestamp) {\n\t\t\tsequentialCounter = 0;\n\t\t} else {\n\t\t\tsequentialCounter++;\n\t\t\tnow += sequentialCounter;\n\t\t}\n\t\tlastTimestamp = now;\n\t\treturn now.toString();\n\t};\n})();\n\nlet nextRequestId = 1;\nconst pendingRequests = {};\nconst pendingBackendRequests = {};\n\nconst requestFromClient = async (type, payload, timeout = 5000) => {\n\tconst clients = await self.clients.matchAll({\n\t\ttype: \"window\",\n\t\tincludeUncontrolled: true,\n\t});\n\tconst client = clients[0]; "metaType": "application/javascript"},"/modules/mvc/model/backend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Database from \"/modules/mvc/model/database/index.js\";\nimport Model from \"/modules/mvc/model/index.js\";\n\nconst queryModelEvents = {\n\tDISCONNECT: (_, { port }) => port.removePort(),\n\tCREATE_REMOTE_WORKSPACE: async ({ payload }, { importDB }) =>\n\t\timportDB(payload),\n\tADD_REMOTE_USER: async ({ payload }) => $APP.Backend.createUserEntry(payload),\n\tADD: async ({ payload, respond }) => {\n\t\tconst response = await Database.add(\n\t\t\tpayload.model,\n\t\t\tpayload.row,\n\t\t\tpayload.opts,\n\t\t);\n\t\trespond(response);\n\t},\n\tADD_MANY: async ({ payload, respond }) => {\n\t\tconst response = await Database.addMany(\n\t\t\tpayload.model,\n\t\t\tpayload.rows,\n\t\t\tpayload.opts,\n\t\t);\n\t\trespond({ success: true, results: response });\n\t},\n\tREMOVE: async ({ payload, respond }) => {\n\t\tconst response = await Database.remove(\n\t\t\tpayload.model,\n\t\t\tpayload.id,\n\t\t\tpayload.opts,\n\t\t);\n\t\trespond(response);\n\t},\n\tREMOVE_MANY: async ({ payload, respond }) => {\n\t\tconst response = await Database.removeMany(\n\t\t\tpayload.model,\n\t\t\tpayload.ids,\n\t\t\tpayload.opts,\n\t\t);\n\t\trespond({ success: true, results: response });\n\t},\n\tEDIT: async ({ payload, respond }) => {\n\t\tconst response = await Database.edit(\n\t\t\tpayload.model,\n\t\t\tpayload.row,\n\t\t\tpayload.opts,\n\t\t);\n\t\trespond(response);\n\t},\n\tEDIT_MANY: async ({ payload, respond }) => {\n\t\tconst response = await Database.editMany(\n\t\t\tpayload.model,\n\t\t\tpayload.rows,\n\t\t\tpayload.opts,\n\t\t);\n\t\trespond({ success: true, results: response });\n\t},\n\tGET: async ({ payload, respond }) => {\n\t\tconst { id, model, opts = {} } = payload;\n\t\tconst response = await Database.get(\n\t\t\tmodel,\n\t\t\tid ??\n\t\t\t\t(opts.filter &&\n\t\t\t\t\t((typeof opts.filter === \"string\" && JSON.parse(opts.filter)) ||\n\t\t\t\t\t\topts.filter)),\n\t\t\topts,\n\t\t);\n\t\trespond(response);\n\t},\n\tGET_MANY: async ({ payload: { model, opts = {} }, respond } = {}) => {\n\t\tconst response = await Database.getMany(model, opts.filter, opts);\n\t\trespond(response);\n\t},\n};\n\n$APP.events.set(queryModelEvents);\n\nconst request = (action, modelName, payload = {}) => {\n\treturn new Promise((resolve) => {\n\t\tconst event = queryModelEvents[action];\n\t\tif (event && typeof event === \"function\") {\n\t\t\tevent({\n\t\t\t\trespond: resolve,\n\t\t\t\tpayload: {\n\t\t\t\t\tmodel: modelName,\n\t\t\t\t\t...payload,\n\t\t\t\t},\n\t\t\t});\n\t\t} else resolve({ success: false, error: `Action \"${action}\" not found.` });\n\t});\n};\n\nconst syncRelationships = ({ model, row }) => {\n\tif (!row) return;\n\n\tconst props = $APP.models[model];\n\tconst relationships = Object.entries(props).filter(\n\t\t([, prop]) => prop.belongs && prop.targetModel !== \"*\",\n\t);\n\n\tif (!relationships.length) return;\n\n\trelationships.forEach(([key, prop]) => {\n\t\tif (row[key]) {\n\t\t\t$APP.Backend.broadcast({\n\t\t\t\ttype: \"REQUEST_DATA_SYNC\",\n\t\t\t\tpayload: {\n\t\t\t\t\tkey: `get:${row[key]}`,\n\t\t\t\t\tmodel: prop.targetModel,\n\t\t\t\t\tdata: undefined,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t});\n};\n\nconst handleExtensions = ({ row, db, model }) => {\n\tif (!row.models) return;\n\tconst currentExtensions = new Set(row.extensions || []);\n\tconst foundExtensions = new Set();\n\tObject.values(row.models).forEach((modelSchema) =>\n\t\tObject.keys(modelSchema).forEach((prop) => {\n\t\t\tif (prop.startsWith(\"$\")) {\n\t\t\t\tfoundExtensions.add(prop.slice(1));\n\t\t\t}\n\t\t}),\n\t);\n\tconst newExtensions = [...foundExtensions].filter(\n\t\t(ext) => !currentExtensions.has(ext),\n\t);\n\n\tif (newExtensions.length === 0) return;\n\n\tconsole.log(`New extensions found: ${newExtensions.join(\", \")}`);\n\n\tnewExtensions.forEach((extensionName) => {\n\t\tconsole.log(`Initializing extension: ${extensionName}`);\n\t\t$APP.DatabaseExtensions.add(extensionName);\n\t});\n\n\tconst allExtensions = [...currentExtensions, ...newExtensions];\n\tdb.edit(model, { ...row, extensions: allExtensions });\n};\n\n$APP.hooks.set({\n\t\"ModelAddRecord-App\": handleExtensions,\n\t\"ModelEditRecord-App\": handleExtensions,\n\n\tonAddRecord({ model, row, system }) {\n\t\tif (system) return;\n\t\t$APP.Backend.broadcast({\n\t\t\ttype: \"REQUEST_DATA_SYNC\",\n\t\t\tpayload: { key: `get:${row.id}`, model, data: row },\n\t\t});\n\t\tsyncRelationships({ model, row });\n\t\tconsole.log(\"BROADCAST MESSAGE\", {\n\t\t\tsystem,\n\t\t\ttype: \"REQUEST_DATA_SYNC\",\n\t\t\tpayload: { key: `get:${row.id}`, model, data: row },\n\t\t});\n\t},\n\n\tonEditRecord({ model, row, system }) {\n\t\tif (system) return;\n\t\t$APP.Backend.broadcast({\n\t\t\ttype: \"REQUEST_DATA_SYNC\",\n\t\t\tpayload: { key: `get:${row.id}`, model, data: row },\n\t\t});\n\t\tsyncRelationships({ model, row });\n\t},\n\n\tonRemoveRecord({ model, row, id, system }) {\n\t\tif (system) return;\n\t\t$APP.Backend.broadcast({\n\t\t\ttype: \"REQUEST_DATA_SYNC\",\n\t\t\tpayload: { key: `get:${id}`, model, data: undefined },\n\t\t});\n\t\tsyncRelationships({ model, row });\n\t},\n});\n\nModel.request = request;\nexport default Model;\n","metaType": "application/javascript"},"/modules/mvc/model/database/index.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Model from \"/modules/mvc/model/backend.js\";\nimport metadata from \"/modules/mvc/model/extensions/metadata.js\";\nimport operations from \"/modules/mvc/model/extensions/operations.js\";\nimport IndexedDBWrapper from \"/modules/mvc/model/indexeddb/index.js\";\nimport T from \"/modules/types/index.js\";\n\nconst availableDatabaseExtensions = { operations, metadata };\n\n$APP.sysmodels.set({\n\t[$APP.settings.sysmodels.APP]: {\n\t\tname: T.string({ index: true, primary: true }).$,\n\t\tversion: T.number().$,\n\t\tusers: T.many($APP.settings.sysmodels.USER, \"appId\").$,\n\t\tactive: T.boolean({ defaultValue: true, index: true }).$,\n\t\tmodels: T.object().$,\n\t\tmigrationTimestamp: T.number().$,\n\t},\n\t[$APP.settings.sysmodels.USER]: {\n\t\tname: T.string({ index: true, primary: true }).$,\n\t\tappId: T.one($APP.settings.sysmodels.APP, \"users\").$,\n\t\tdevices: T.many($APP.settings.sysmodels.DEVICE, \"userId\").$,\n\t\tpublicKey: T.string().$,\n\t\tprivateKey: T.string().$,\n\t\tactive: T.boolean({ index: true }).$,\n\t},\n\t[$APP.settings.sysmodels.DEVICE]: {\n\t\tname: T.string({ index: true, primary: true }).$,\n\t\tuserId: T.one($APP.settings.sysmodels.USER, \"devices\").$,\n\t\tdeviceData: T.string().$,\n\t\tactive: T.number({ defaultValue: true, index: true }).$,\n\t},\n});\n\nconst isSystem = (model) => !!$APP.sysmodels[model];\n\n$APP.addModule({\n\tname: \"DatabaseExtensions\",\n\tbase: $APP.storage.install([]),\n});\n\nconst filterExtensionModels = (models, ext) =>\n\tObject.fromEntries(\n\t\tObject.entries(models)\n\t\t\t.filter(([_, schema]) => Object.hasOwn(schema, `$${ext}`))\n\t\t\t.map(([model]) => [model, availableDatabaseExtensions[ext]]),\n\t);\n\nconst loadDBDump = async (payload) => {\n\tconst { dump } = payload;\n\tconst app = payload.app ?? (await getApp());\n\tif (!dump) throw \"No dump provided\";\n\tif (!app) throw \"No app selected\";\n\n\tfor (const [modelName, entries] of Object.entries(dump))\n\t\tif (Model[modelName])\n\t\t\tawait Model[modelName].addMany(entries, { keepIndex: true });\n\n\tawait $APP.SysModel.edit($APP.settings.sysmodels.APP, {\n\t\tid: app.id,\n\t\tmigrationTimestamp: Date.now(),\n\t});\n};\n\nconst createDBDump = async () => {\n\tconst app = await $APP.Backend.getApp();\n\tconst dump = {};\n\tconst modelNames = Object.keys(app.models);\n\n\tfor (const modelName of modelNames)\n\t\tif (Model[modelName])\n\t\t\tdump[modelName] = await Model[modelName].getAll({ object: true });\n\n\treturn dump;\n};\n\nconst createDatabase = () => {\n\tlet models;\n\tlet version;\n\tlet name;\n\tlet db;\n\tlet system;\n\tconst extdbs = {};\n\tconst stores = {};\n\n\tconst open = async (props = {}) => {\n\t\tif (props.extensions) $APP.DatabaseExtensions.add(...props.extensions);\n\t\tif (props.name) name = props.name;\n\t\tif (props.models) models = props.models;\n\t\tif (props.version) version = props.version;\n\t\tsystem = props.system === true;\n\t\tif (db) db.close();\n\t\tdb = await IndexedDBWrapper.open({\n\t\t\tname,\n\t\t\tversion,\n\t\t\tmodels,\n\t\t});\n\t\tif ($APP.DatabaseExtensions.length && !system) {\n\t\t\t$APP.DatabaseExtensions.forEach(async (ext) => {\n\t\t\t\textdbs[ext] = await IndexedDBWrapper.open({\n\t\t\t\t\tname: `${name}_${ext}`,\n\t\t\t\t\tversion,\n\t\t\t\t\tmodels: filterExtensionModels(models, ext),\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\tconst _loadRelationshipsForMany = async (rows, modelName, includes, opts) => {\n\t\tif (!rows || rows.length === 0 || !includes || includes.length === 0)\n\t\t\treturn;\n\t\tconst modelDef = models[modelName];\n\t\tconst idsToFetchByModel = {};\n\t\tconst relationshipDetails = {};\n\n\t\tfor (const relation of includes) {\n\t\t\tconst relationDef = modelDef[relation];\n\t\t\tif (!relationDef) continue;\n\t\t\trelationshipDetails[relation] = relationDef;\n\n\t\t\tconst { targetModel, belongs, polymorphic, mixed } = relationDef;\n\n\t\t\tfor (const row of rows) {\n\t\t\t\tlet fkValue = row[relation];\n\n\t\t\t\tif (belongs) {\n\t\t\t\t\tfkValue = row[relation];\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (fkValue === null || fkValue === undefined) continue;\n\n\t\t\t\tconst addId = (model, id) => {\n\t\t\t\t\tif (!idsToFetchByModel[model]) idsToFetchByModel[model] = new Set();\n\t\t\t\t\tidsToFetchByModel[model].add(id);\n\t\t\t\t};\n\n\t\t\t\tconst processFkValue = (val) => {\n\t\t\t\t\tif (polymorphic) {\n\t\t\t\t\t\tif (typeof val === \"string\") {\n\t\t\t\t\t\t\tconst [polyModel, polyId] = val.split(\"@\");\n\t\t\t\t\t\t\tif (polyModel && polyId) addId(polyModel, polyId);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (typeof val === \"string\") {\n\t\t\t\t\t\taddId(targetModel, val);\n\t\t\t\t\t} else if (mixed && typeof val === \"object\" && val !== null) {\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(fkValue)) {\n\t\t\t\t\tfkValue.forEach(processFkValue);\n\t\t\t\t} else {\n\t\t\t\t\tprocessFkValue(fkValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst fetchedItemsByModel = {};\n\t\tfor (const [modelToFetch, idSet] of Object.entries(idsToFetchByModel)) {\n\t\t\tif (idSet.size > 0) {\n\t\t\t\tconst ids = Array.from(idSet);\n\t\t\t\tconst items = await api.getMany(modelToFetch, ids);\n\t\t\t\tfetchedItemsByModel[modelToFetch] = items.reduce((acc, item) => {\n\t\t\t\t\tacc[item.id] = item;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {});\n\t\t\t}\n\t\t}\n\n\t\tfor (const row of rows) {\n\t\t\tfor (const relation of includes) {\n\t\t\t\tconst relationDef = relationshipDetails[relation];\n\t\t\t\tif (!relationDef) continue;\n\n\t\t\t\tconst { targetModel, belongs, polymorphic, mixed, many } = relationDef;\n\t\t\t\tconst transform = opts.transform ?? relationDef.transform;\n\n\t\t\t\tif (belongs) {\n\t\t\t\t\tconst fkValueOnCurrentRow = row[relation];\n\t\t\t\t\tif (\n\t\t\t\t\t\tfkValueOnCurrentRow === null ||\n\t\t\t\t\t\tfkValueOnCurrentRow === undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\trow[relation] = many ? [] : null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stitch = (fk) => {\n\t\t\t\t\t\tlet model = targetModel;\n\t\t\t\t\t\tlet id = fk;\n\t\t\t\t\t\tif (polymorphic && typeof fk === \"string\") {\n\t\t\t\t\t\t\t[model, id] = fk.split(\"@\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (mixed && typeof fk === \"object\" && fk !== null) return fk;\n\n\t\t\t\t\t\tconst item = fetchedItemsByModel[model]?.[id] ?? null;\n\t\t\t\t\t\treturn transform ? transform(item, model) : item;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (many) {\n\t\t\t\t\t\trow[relation] = Array.isArray(fkValueOnCurrentRow)\n\t\t\t\t\t\t\t? fkValueOnCurrentRow.map(stitch).filter(Boolean)\n\t\t\t\t\t\t\t: [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow[relation] = stitch(fkValueOnCurrentRow);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet filter;\n\t\t\t\t\tif (polymorphic) {\n\t\t\t\t\t\tconst searchPolymorphicId = `${modelName}@${row.id}`;\n\t\t\t\t\t\tconst targetFkDef =\n\t\t\t\t\t\t\tmodels[targetModel]?.[relationDef.targetForeignKey];\n\t\t\t\t\t\tif (targetFkDef?.many) {\n\t\t\t\t\t\t\tfilter = {\n\t\t\t\t\t\t\t\t[relationDef.targetForeignKey]: {\n\t\t\t\t\t\t\t\t\t$contains: searchPolymorphicId,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilter = { [relationDef.targetForeignKey]: searchPolymorphicId };\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilter = { [relationDef.targetForeignKey]: row.id };\n\t\t\t\t\t}\n\t\t\t\t\trow[relation] = await api.getMany(targetModel, filter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst api = {\n\t\tloadDBDump,\n\t\tcreateDBDump,\n\t\textdbs,\n\t\tget db() {\n\t\t\treturn db;\n\t\t},\n\t\tget models() {\n\t\t\treturn models;\n\t\t},\n\t\tget version() {\n\t\t\treturn db?.version;\n\t\t},\n\t\topen,\n\t\tstores,\n\t\treload: open,\n\t\tcount: (...args) => db.count(...args),\n\t\tisEmpty: (...args) => db.isEmpty(...args),\n\t\tasync put(model, row = {}, opts = {}) {\n\t\t\tconst { skipRelationship = false, currentRow = {} } = opts;\n\t\t\tconst properties = models[model];\n\t\t\tif (!properties)\n\t\t\t\treturn console.error(\n\t\t\t\t\t`Model ${model} not found. current schema version: ${version} / ${db.version}`,\n\t\t\t\t);\n\t\t\tif (isSystem(model)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await db.put(model, row);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst row = await db.get(model, result);\n\t\t\t\t\t\treturn [null, row];\n\t\t\t\t\t}\n\t\t\t\t\treturn [null, null];\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn [error, null];\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst [errors, validatedRow] = T.validateType(row, {\n\t\t\t\tschema: models[model],\n\t\t\t\trow: currentRow,\n\t\t\t\tundefinedProps: !!opts.insert,\n\t\t\t\tvalidateVirtual: true,\n\t\t\t});\n\t\t\tif (errors) return [errors, null];\n\t\t\ttry {\n\t\t\t\tif (skipRelationship) {\n\t\t\t\t\tawait db.put(model, validatedRow, opts);\n\t\t\t\t\treturn [null, validatedRow];\n\t\t\t\t}\n\t\t\t\tconst storesToTransact = [model];\n\t\t\t\tconst relationships = Object.keys(properties).filter((prop) => {\n\t\t\t\t\tconst propDef = properties[prop];\n\t\t\t\t\tconst bool =\n\t\t\t\t\t\tpropDef.targetModel &&\n\t\t\t\t\t\tpropDef.relationship &&\n\t\t\t\t\t\tvalidatedRow[prop] !== undefined &&\n\t\t\t\t\t\tvalidatedRow[prop] !== null;\n\t\t\t\t\tif (bool && !storesToTransact.includes(propDef.targetModel)) {\n\t\t\t\t\t\tif (propDef.polymorphic) {\n\t\t\t\t\t\t} else storesToTransact.push(propDef.targetModel);\n\t\t\t\t\t}\n\t\t\t\t\treturn bool;\n\t\t\t\t});\n\t\t\t\tconst id = validatedRow.id || row.id;\n\t\t\t\tconst updates = [];\n\t\t\t\tfor (const propKey of relationships) {\n\t\t\t\t\tconst prop = properties[propKey];\n\t\t\t\t\tlet relatedValue = validatedRow[propKey];\n\t\t\t\t\tif (prop.many && Array.isArray(relatedValue)) {\n\t\t\t\t\t\tconst newFkArray = [];\n\t\t\t\t\t\tfor (const item of relatedValue) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttypeof item === \"string\" ||\n\t\t\t\t\t\t\t\t(prop.mixed && typeof item === \"object\" && item !== null)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tnewFkArray.push(item);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst childModel = prop.targetModel;\n\t\t\t\t\t\t\t\tif (models[childModel]) {\n\t\t\t\t\t\t\t\t\tconst newChildRow = { ...item };\n\t\t\t\t\t\t\t\t\tif (!newChildRow.id)\n\t\t\t\t\t\t\t\t\t\tnewChildRow.id = $APP.Backend.generateId();\n\n\t\t\t\t\t\t\t\t\tupdates.push([childModel, newChildRow]);\n\t\t\t\t\t\t\t\t\tif (!storesToTransact.includes(childModel))\n\t\t\t\t\t\t\t\t\t\tstoresToTransact.push(childModel);\n\n\t\t\t\t\t\t\t\t\tconst idToStore = prop.polymorphic\n\t\t\t\t\t\t\t\t\t\t? `${childModel}@${newChildRow.id}`\n\t\t\t\t\t\t\t\t\t\t: newChildRow.id;\n\t\t\t\t\t\t\t\t\tnewFkArray.push(idToStore);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalidatedRow[propKey] = newFkArray;\n\t\t\t\t\t\trelatedValue = newFkArray;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!models[prop.targetModel] && !prop?.polymorphic) {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`ERROR: couldn't find target model '${prop.targetModel}' for relationship '${propKey}' on model '${model}'`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst fkProp = models[prop.targetModel]?.[prop.targetForeignKey];\n\t\t\t\t\tif (!fkProp) {\n\t\t\t\t\t\tif (!prop.belongs) {\n\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t`WARN: couldn't find target foreign key '${prop.targetForeignKey}' in model '${prop.targetModel}' for relationship '${propKey}' from '${model}'. This might be a one-way definition or configuration issue.`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (fkProp.belongs) {\n\t\t\t\t\t\tconst effectiveFkId = fkProp.polymorphic ? `${model}@${id}` : id;\n\t\t\t\t\t\tconst targetIsMany = fkProp.many;\n\n\t\t\t\t\t\tif (targetIsMany) {\n\t\t\t\t\t\t\tconst fks = Array.isArray(relatedValue)\n\t\t\t\t\t\t\t\t? relatedValue\n\t\t\t\t\t\t\t\t: [relatedValue];\n\t\t\t\t\t\t\tif (fks.length) {\n\t\t\t\t\t\t\t\tconst targets = await api.getMany(\n\t\t\t\t\t\t\t\t\tprop.targetModel,\n\t\t\t\t\t\t\t\t\tfks.map((fk) => (fk && typeof fk === \"object\" ? fk.id : fk)),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\ttargets.forEach((target) => {\n\t\t\t\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\t\t\t\tconst fk = target[prop.targetForeignKey];\n\t\t\t\t\t\t\t\t\t\tif (!fk) target[prop.targetForeignKey] = [effectiveFkId];\n\t\t\t\t\t\t\t\t\t\telse if (!fk.includes(effectiveFkId))\n\t\t\t\t\t\t\t\t\t\t\tfk.push(effectiveFkId);\n\t\t\t\t\t\t\t\t\t\tupdates.push([prop.targetModel, target]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst targetId =\n\t\t\t\t\t\t\t\ttypeof relatedValue === \"string\"\n\t\t\t\t\t\t\t\t\t? relatedValue\n\t\t\t\t\t\t\t\t\t: relatedValue?.id;\n\t\t\t\t\t\t\tif (targetId) {\n\t\t\t\t\t\t\t\tconst target = await api.get(prop.targetModel, targetId);\n\t\t\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\t\t\ttarget[prop.targetForeignKey] = effectiveFkId;\n\t\t\t\t\t\t\t\t\tupdates.push([prop.targetModel, target]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!prop.belongs && !properties[propKey]?.polymorphic) {\n\t\t\t\t\t\tdelete validatedRow[propKey];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdates.push([model, validatedRow]);\n\t\t\t\tconst tx = await db.transaction(storesToTransact);\n\t\t\t\tconst relatedPuts = updates.map(([m, r]) => tx.put(m, r));\n\t\t\t\tawait Promise.all(relatedPuts);\n\t\t\t\tawait tx.done();\n\t\t\t\treturn [null, validatedRow];\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error in put operation:\", error, {\n\t\t\t\t\tmodel,\n\t\t\t\t\trow,\n\t\t\t\t\tmodels,\n\t\t\t\t\tversion,\n\t\t\t\t});\n\t\t\t\treturn [error, null];\n\t\t\t}\n\t\t},\n\t\tasync get(model, filter, opts = {}) {\n\t\t\tif (!filter) return null;\n\t\t\tconst { insert = false, includes = [], recursive = null } = opts;\n\t\t\tlet row = await db.get(model, filter);\n\t\t\tif (!row && !insert) return null;\n\t\t\tif (!row && insert) {\n\t\t\t\tconst [error, newRow] = await api.add(\n\t\t\t\t\tmodel,\n\t\t\t\t\ttypeof filter === \"object\" ? filter : { id: filter },\n\t\t\t\t\t{\n\t\t\t\t\t\tskipRelationship: true,\n\t\t\t\t\t\t...(typeof filter !== \"object\" && {\n\t\t\t\t\t\t\toverrideId: true,\n\t\t\t\t\t\t\tkeepIndex: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(\"Failed to insert record in get():\", error);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\trow = newRow;\n\t\t\t}\n\t\t\tif (row && includes.length) {\n\t\t\t\tawait _loadRelationshipsForMany([row], model, includes, opts);\n\t\t\t}\n\t\t\tif (row && recursive) {\n\t\t\t\tconst visited = new Set();\n\t\t\t\tlet itemsToProcess = [row];\n\t\t\t\tconst relationName = recursive;\n\t\t\t\twhile (itemsToProcess.length > 0) {\n\t\t\t\t\tconst currentBatch = [];\n\t\t\t\t\tfor (const item of itemsToProcess) {\n\t\t\t\t\t\tconst modelForVisitor = item._modelName || model;\n\t\t\t\t\t\tconst visitedKey = `${modelForVisitor}@${item.id}`;\n\t\t\t\t\t\tif (!visited.has(visitedKey)) {\n\t\t\t\t\t\t\tvisited.add(visitedKey);\n\t\t\t\t\t\t\tcurrentBatch.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentBatch.length === 0) break;\n\n\t\t\t\t\tawait _loadRelationshipsForMany(\n\t\t\t\t\t\tcurrentBatch,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t[relationName],\n\t\t\t\t\t\topts,\n\t\t\t\t\t);\n\n\t\t\t\t\titemsToProcess = [];\n\t\t\t\t\tfor (const item of currentBatch) {\n\t\t\t\t\t\tconst children = item[relationName];\n\t\t\t\t\t\tif (Array.isArray(children)) {\n\t\t\t\t\t\t\tchildren.forEach((child) => {\n\t\t\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\t\t\tconst relDef = models[model][relationName];\n\t\t\t\t\t\t\t\t\tif (relDef) child._modelName = relDef.targetModel;\n\t\t\t\t\t\t\t\t\titemsToProcess.push(child);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (children) {\n\t\t\t\t\t\t\tconst relDef = models[model][relationName];\n\t\t\t\t\t\t\tif (relDef) children._modelName = relDef.targetModel;\n\t\t\t\t\t\t\titemsToProcess.push(children);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn row;\n\t\t},\n\t\tasync getMany(model, filter, opts = {}) {\n\t\t\tconst { limit, offset, order, includes = [], recursive = null } = opts;\n\t\t\tlet items;\n\t\t\tif (Array.isArray(filter)) {\n\t\t\t\titems = (\n\t\t\t\t\tawait Promise.all(filter.map((id) => db.get(model, id)))\n\t\t\t\t).filter((item) => item !== null);\n\t\t\t} else {\n\t\t\t\titems = await db.getMany(model, filter, {\n\t\t\t\t\tlimit,\n\t\t\t\t\toffset,\n\t\t\t\t\torder,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (includes.length && items.length)\n\t\t\t\tawait _loadRelationshipsForMany(items, model, includes, opts);\n\n\t\t\tif (recursive && items.length) {\n\t\t\t\tconst visited = new Set();\n\t\t\t\tlet itemsToProcess = [...items];\n\t\t\t\tconst relationName = recursive;\n\n\t\t\t\twhile (itemsToProcess.length > 0) {\n\t\t\t\t\tconst currentBatch = [];\n\t\t\t\t\tfor (const item of itemsToProcess) {\n\t\t\t\t\t\tconst modelForVisitor = item._modelName || model;\n\t\t\t\t\t\tconst visitedKey = `${modelForVisitor}@${item.id}`;\n\t\t\t\t\t\tif (!visited.has(visitedKey)) {\n\t\t\t\t\t\t\tvisited.add(visitedKey);\n\t\t\t\t\t\t\tcurrentBatch.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentBatch.length === 0) break;\n\n\t\t\t\t\tconst batchModelName = currentBatch[0]._modelName || model;\n\t\t\t\t\tawait _loadRelationshipsForMany(\n\t\t\t\t\t\tcurrentBatch,\n\t\t\t\t\t\tbatchModelName,\n\t\t\t\t\t\t[relationName],\n\t\t\t\t\t\topts,\n\t\t\t\t\t);\n\n\t\t\t\t\titemsToProcess = [];\n\t\t\t\t\tfor (const item of currentBatch) {\n\t\t\t\t\t\tconst children = item[relationName];\n\t\t\t\t\t\tconst relDef = models[batchModelName][relationName];\n\t\t\t\t\t\tif (Array.isArray(children)) {\n\t\t\t\t\t\t\tchildren.forEach((child) => {\n\t\t\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\t\t\tif (relDef) child._modelName = relDef.targetModel;\n\t\t\t\t\t\t\t\t\titemsToProcess.push(child);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (children) {\n\t\t\t\t\t\t\tif (relDef) children._modelName = relDef.targetModel;\n\t\t\t\t\t\t\titemsToProcess.push(children);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!limit) return items;\n\n\t\t\tconst count = await db.count(\n\t\t\t\tmodel,\n\t\t\t\tArray.isArray(filter) ? { id: { $in: filter } } : filter,\n\t\t\t);\n\t\t\treturn { count, limit, offset, items };\n\t\t},\n\t\tasync remove(model, id, opts = {}) {\n\t\t\tconst properties = models[model];\n\t\t\tif (!properties) {\n\t\t\t\tconsole.error(`Model ${model} not found for removal.`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst row = await api.get(model, id);\n\t\t\tif (!row) return false;\n\t\t\tconst relationships = Object.keys(properties).filter(\n\t\t\t\t(prop) => properties[prop].targetModel && properties[prop].relationship,\n\t\t\t);\n\t\t\tconst storesToTransact = [model];\n\t\t\tconst updates = [];\n\n\t\t\tif (relationships.length > 0) {\n\t\t\t\tfor (const propKey of relationships) {\n\t\t\t\t\tconst propDef = properties[propKey];\n\t\t\t\t\tif (!propDef.targetModel || !propDef.targetForeignKey) continue;\n\n\t\t\t\t\tif (!storesToTransact.includes(propDef.targetModel)) {\n\t\t\t\t\t\tif (propDef.polymorphic) {\n\t\t\t\t\t\t} else storesToTransact.push(propDef.targetModel);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst targetModelName = propDef.targetModel;\n\t\t\t\t\tconst fkFieldNameOnTarget = propDef.targetForeignKey;\n\t\t\t\t\tconst fkFieldDefOnTarget =\n\t\t\t\t\t\tmodels[targetModelName]?.[fkFieldNameOnTarget];\n\n\t\t\t\t\tif (!fkFieldDefOnTarget) continue;\n\n\t\t\t\t\tif (fkFieldDefOnTarget.belongs) {\n\t\t\t\t\t\tconst valueToRemove = fkFieldDefOnTarget.polymorphic\n\t\t\t\t\t\t\t? `${model}@${id}`\n\t\t\t\t\t\t\t: id;\n\t\t\t\t\t\tlet filterForTargets;\n\n\t\t\t\t\t\tif (fkFieldDefOnTarget.many) {\n\t\t\t\t\t\t\tfilterForTargets = {\n\t\t\t\t\t\t\t\t[fkFieldNameOnTarget]: { $contains: valueToRemove },\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else filterForTargets = { [fkFieldNameOnTarget]: valueToRemove };\n\n\t\t\t\t\t\tconst targetsToUpdate = await api.getMany(\n\t\t\t\t\t\t\ttargetModelName,\n\t\t\t\t\t\t\tfilterForTargets,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\ttargetsToUpdate.forEach((target) => {\n\t\t\t\t\t\t\tlet newFkValue;\n\t\t\t\t\t\t\tif (fkFieldDefOnTarget.many) {\n\t\t\t\t\t\t\t\tnewFkValue = (target[fkFieldNameOnTarget] || []).filter(\n\t\t\t\t\t\t\t\t\t(entry) => entry !== valueToRemove,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewFkValue = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tupdates.push([\n\t\t\t\t\t\t\t\ttargetModelName,\n\t\t\t\t\t\t\t\t{ ...target, [fkFieldNameOnTarget]: newFkValue },\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst tx = await db.transaction(storesToTransact);\n\t\t\t\tconst relatedPuts = updates.map(([targetModel, targetRow]) =>\n\t\t\t\t\ttx.put(targetModel, targetRow),\n\t\t\t\t);\n\t\t\t\tconst mainRemove = tx.remove(model, id);\n\t\t\t\tawait Promise.all([...relatedPuts, mainRemove]);\n\t\t\t\tawait tx.done();\n\t\t\t\tconst system = isSystem(model);\n\t\t\t\t[`ModelRemoveRecord-${model}`, \"onRemoveRecord\"].forEach((event) =>\n\t\t\t\t\t$APP.hooks.run(event, {\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tsystem,\n\t\t\t\t\t\trow,\n\t\t\t\t\t\tdb: api,\n\t\t\t\t\t\textensions: Object.keys(models[model])\n\t\t\t\t\t\t\t.filter((prop) => prop[0] === \"$\")\n\t\t\t\t\t\t\t.map((prop) => prop.slice(1)),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t\"Failed to remove record or update relationships:\",\n\t\t\t\t\terror,\n\t\t\t\t\t{ model, id },\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tasync removeMany(model, filter, opts = {}) {\n\t\t\tif (!filter && opts.filter) filter = opts.filter;\n\t\t\tconst entries = Array.isArray(filter)\n\t\t\t\t? filter.map((item) => (typeof item === \"object\" ? item.id : item))\n\t\t\t\t: (await db.getMany(model, filter)).map((entry) => entry.id);\n\t\t\treturn Promise.all(\n\t\t\t\tentries\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.map((entryId) => api.remove(model, entryId, opts)),\n\t\t\t);\n\t\t},\n\t\tasync edit(model, row, _opts = {}) {\n\t\t\tif (!row || !row.id) {\n\t\t\t\tconsole.error(\"Edit operation requires a row with an ID.\", {\n\t\t\t\t\tmodel,\n\t\t\t\t\trow,\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\terrors: { id: \"ID is required for edit.\" },\n\t\t\t\t\tmodel,\n\t\t\t\t\trow,\n\t\t\t\t\topts: _opts,\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst opts = {\n\t\t\t\t..._opts,\n\t\t\t\tupdate: true,\n\t\t\t\tcurrentRow:\n\t\t\t\t\t_opts.currentRow ?? (await api.get(model, row.id, { includes: [] })),\n\t\t\t};\n\t\t\tif (!opts.currentRow) {\n\t\t\t\tconsole.warn(`Record not found for edit: ${model} with id ${row.id}`);\n\t\t\t\treturn { errors: { record: \"Record not found.\" }, model, row, opts };\n\t\t\t}\n\t\t\tconst [errors, patchResult] = await api.put(\n\t\t\t\tmodel,\n\t\t\t\t{ ...opts.currentRow, ...row },\n\t\t\t\topts,\n\t\t\t);\n\n\t\t\tif (errors) return { errors, model, row, opts };\n\t\t\tconst system = isSystem(model);\n\t\t\t[`ModelEditRecord-${model}`, \"onEditRecord\"].forEach((event) =>\n\t\t\t\t$APP.hooks.run(event, {\n\t\t\t\t\trow,\n\t\t\t\t\tmodel,\n\t\t\t\t\tsystem,\n\t\t\t\t\topts,\n\t\t\t\t\tdb: api,\n\t\t\t\t\textensions: Object.keys(models[model])\n\t\t\t\t\t\t.filter((prop) => prop[0] === \"$\")\n\t\t\t\t\t\t.map((prop) => prop.slice(1)),\n\t\t\t\t}),\n\t\t\t);\n\t\t\treturn patchResult;\n\t\t},\n\t\tasync editMany(model, rows, opts = {}) {\n\t\t\tif (!rows?.length) return [];\n\t\t\tconst results = await Promise.allSettled(\n\t\t\t\trows.map(async (row) => {\n\t\t\t\t\tif (row?.id) return api.edit(model, row, opts);\n\t\t\t\t\treturn { errors: { id: \"Row or ID missing for editMany\" }, row };\n\t\t\t\t}),\n\t\t\t);\n\t\t\treturn results;\n\t\t},\n\t\tasync editAll(model, filter, updates, opts = {}) {\n\t\t\tconst rows = await db.getMany(model, filter, {\n\t\t\t\t...opts,\n\t\t\t});\n\t\t\tconst results = await Promise.allSettled(\n\t\t\t\trows.map((row) =>\n\t\t\t\t\tapi.edit(model, { ...row, ...updates }, { ...opts, currentRow: row }),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn results;\n\t\t},\n\t\tasync add(model, row, opts = {}) {\n\t\t\tconst newRow = { ...row };\n\t\t\tconst system = isSystem(model);\n\t\t\tif ((!system && !opts.keepIndex && !opts.overrideId) || !newRow.id) {\n\t\t\t\tnewRow.id = $APP.Backend.generateId();\n\t\t\t}\n\t\t\tconst [errors, resultRow] = await api.put(model, newRow, {\n\t\t\t\t...opts,\n\t\t\t\tinsert: true,\n\t\t\t});\n\t\t\tif (errors) return { errors, model, row: newRow, opts };\n\t\t\t[`ModelAddRecord-${model}`, \"onAddRecord\"].forEach((event) =>\n\t\t\t\t$APP.hooks.run(event, {\n\t\t\t\t\tmodel,\n\t\t\t\t\trow: resultRow,\n\t\t\t\t\tsystem,\n\t\t\t\t\topts,\n\t\t\t\t\tdb: api,\n\t\t\t\t\textensions: Object.keys(models[model])\n\t\t\t\t\t\t.filter((prop) => prop[0] === \"$\")\n\t\t\t\t\t\t.map((prop) => prop.slice(1)),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn resultRow;\n\t\t},\n\t\tasync addMany(model, rows = [], opts = {}) {\n\t\t\tconst results = await Promise.allSettled(\n\t\t\t\trows.map((row) => api.add(model, row, opts)),\n\t\t\t);\n\t\t\treturn results;\n\t\t},\n\t};\n\treturn api;\n};\n\nexport const SysModel = createDatabase();\nawait SysModel.open({\n\tname: $APP.settings.sysmodels.APP,\n\tversion: 1,\n\tmodels: $APP.sysmodels,\n\tsystem: true,\n});\n$APP.setLibrary({\n\tname: \"sysmodel\",\n\talias: \"SysModel\",\n\tbase: SysModel,\n});\n\nconst Database = createDatabase();\n\n$APP.hooks.add(\"APP:BACKEND_STARTED\", async ({ app, models }) => {\n\tif (!app || !models) {\n\t\tconsole.error(\n\t\t\t\"APP:BACKEND_STARTED hook called with invalid app or models.\",\n\t\t\t{\n\t\t\t\tapp,\n\t\t\t\tmodels,\n\t\t\t},\n\t\t);\n\t\treturn;\n\t}\n\n\tawait Database.open({\n\t\tname: app.id,\n\t\tversion: app.version,\n\t\textensions: app.extensions,\n\t\tsystem: false,\n\t\tmodels: { ...models, ...(app.models || {}) },\n\t});\n\t$APP.hooks.run(\"APP:DATABASE_STARTED\");\n});\n\nexport default Database;\n","metaType": "application/javascript"},"/modules/mvc/model/extensions/metadata.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Database from \"/modules/mvc/model/database/index.js\";\nimport T from \"/modules/types/index.js\";\n\n$APP.hooks.set({\n\tonAddRecord({ model, row, system, extensions }) {\n\t\tif (system || !Database.extdbs || !extensions.includes(\"metadata\")) return;\n\t\tconst db = Database.extdbs.metadata;\n\t\tif (!db) return console.error(\"Metadata database instance not active.\");\n\t\tdb.put(model, {\n\t\t\tid: row.id,\n\t\t\tcreatedAt: Date.now(),\n\t\t\tupdatedAt: Date.now(),\n\t\t});\n\t},\n\n\tasync onEditRecord({ model, row, system, extensions }) {\n\t\tif (system || !Database.extdbs || !extensions.includes(\"metadata\")) return;\n\t\tconst db = Database.extdbs.metadata;\n\t\tif (!db) return console.error(\"Metadata database instance not active.\");\n\t\tconst metadataRow = await db.get(model, row.id);\n\t\tmetadataRow.updatedAt = Date.now();\n\t\tdb.put(model, metadataRow);\n\t},\n\n\tonRemoveRecord({ model, id, system, extensions }) {\n\t\tif (system || !Database.extdbs || !extensions.includes(\"metadata\")) return;\n\t\tconst db = Database.extdbs.metadata;\n\t\tif (!db) return console.error(\"Metadata database instance not active.\");\n\t\tdb.remove(model, id);\n\t},\n});\n\nexport default {\n\tcreatedAt: T.string({ index: true }).$,\n\tupdatedAt: T.string({ index: true }).$,\n\tcreatedBy: T.string({ index: true }).$,\n\tupdatedBy: T.string({ index: true }).$,\n};\n","metaType": "application/javascript"},"/modules/mvc/model/extensions/operations.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Database from \"/modules/mvc/model/database/index.js\";\nimport T from \"/modules/types/index.js\";\n\n$APP.hooks.set({\n\tonAddRecord({ model, row, system, extensions }) {\n\t\tif (system || !Database.extdbs || !extensions.includes(\"operations\"))\n\t\t\treturn;\n\t\tconst db = Database.extdbs.operations;\n\t\tif (!db) return console.error(\"Operations database instance not active.\");\n\t\tdb.put(model, {\n\t\t\ttimestamp: Date.now(),\n\t\t\trow,\n\t\t});\n\t},\n\n\tasync onEditRecord({ model, row, system, extensions }) {\n\t\tif (system || !Database.extdbs || !extensions.includes(\"operations\"))\n\t\t\treturn;\n\t\tconst db = Database.extdbs.operations;\n\t\tif (!db) return console.error(\"Operations database instance not active.\");\n\t\tdb.put(model, {\n\t\t\ttimestamp: Date.now(),\n\t\t\trowId: id,\n\t\t\trow,\n\t\t});\n\t},\n\n\tonRemoveRecord({ model, id, system, extensions }) {\n\t\tif (system || !Database.extdbs || !extensions.includes(\"operations\"))\n\t\t\treturn;\n\t\tconst db = Database.extdbs.operations;\n\t\tif (!db) return console.error(\"Operations database instance not active.\");\n\t\tdb.put(model, {\n\t\t\ttimestamp: Date.now(),\n\t\t\tremovedAt: Date.now(),\n\t\t\trowId: id,\n\t\t});\n\t},\n});\n\nexport default {\n\tcreatedAt: T.string({ index: true }).$,\n\tremovedAt: T.string().$,\n\trowId: T.string({ index: true }).$,\n\trow: T.object().$,\n};\n","metaType": "application/javascript"},"/modules/mvc/model/indexeddb/index.js": {"content": "const parseBoolean = { true: 1, false: 0 };\nconst parseBooleanReverse = { true: true, false: false };\n\nasync function open(props) {\n\tconst db = Database(props);\n\tawait db.init();\n\treturn db;\n}\n\nfunction Database({ name: dbName, models, version }) {\n\tlet db = null;\n\tlet isConnected = false;\n\tlet connectionPromise = null;\n\tlet dbVersion = Number(version);\n\n\tconst init = async () => {\n\t\tif (connectionPromise) return connectionPromise;\n\n\t\tconnectionPromise = new Promise((resolve, reject) => {\n\t\t\tconst request = indexedDB.open(dbName, dbVersion);\n\n\t\t\trequest.onerror = (event) => {\n\t\t\t\tconnectionPromise = null;\n\t\t\t\treject(new Error(`Failed to open database: ${event.target.error}`));\n\t\t\t};\n\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tdb = event.target.result;\n\t\t\t\tisConnected = true;\n\n\t\t\t\tdb.onversionchange = () => {\n\t\t\t\t\tif (db) {\n\t\t\t\t\t\tdb.close();\n\t\t\t\t\t\tdb = null;\n\t\t\t\t\t\tisConnected = false;\n\t\t\t\t\t\tconnectionPromise = null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tresolve(db);\n\t\t\t};\n\n\t\t\trequest.onupgradeneeded = (event) => {\n\t\t\t\tconst currentDb = event.target.result;\n\t\t\t\tconst transaction = event.target.transaction;\n\t\t\t\tObject.keys(models).forEach((storeName) => {\n\t\t\t\t\tif (!currentDb.objectStoreNames.contains(storeName)) {\n\t\t\t\t\t\tcreateStore(currentDb, storeName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst objectStore = transaction.objectStore(storeName);\n\t\t\t\t\t\tconst storeSchema = models[storeName];\n\t\t\t\t\t\tObject.keys(storeSchema).forEach((field) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tstoreSchema[field].index === true &&\n\t\t\t\t\t\t\t\t!objectStore.indexNames.contains(field)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tobjectStore.createIndex(field, field, {\n\t\t\t\t\t\t\t\t\tunique: storeSchema[field].unique || false,\n\t\t\t\t\t\t\t\t\tmultiEntry: storeSchema[field].type === \"array\",\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\n\t\treturn connectionPromise;\n\t};\n\n\tconst close = () => {\n\t\tif (db) {\n\t\t\tdb.close();\n\t\t}\n\t\tdb = null;\n\t\tisConnected = false;\n\t\tconnectionPromise = null;\n\t};\n\n\tconst reload = async (props) => {\n\t\t"metaType": "application/javascript"},"/modules/apps/habits/backend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport T from \"/modules/types/index.js\";\n\nconst data = {\n\thabits: [\n\t\t{\n\t\t\tid: \"habit-1\",\n\t\t\tname: \"Exercise\",\n\t\t},\n\t\t{\n\t\t\tid: \"habit-2\",\n\t\t\tname: \"Read a Book\",\n\t\t},\n\t],\n};\n\n$APP.data.set(data);\n\n$APP.models.set({\n\thabits: {\n\t\tname: { type: \"string\", required: true },\n\t\tcheckins: T.many(\"checkins\", \"habit\").$,\n\t\tnotes: T.many(\"notes\", \"habit\").$,\n\t\tdate: T.string().index().$,\n\t\t$metadata: T.extension().$,\n\t\t$operations: T.extension().$,\n\t},\n\tnotes: {\n\t\thabit: T.belongs(\"habits\", \"checkins\").$,\n\t\tnotes: T.string().$,\n\t\tdate: T.string().index().$,\n\t\t$metadata: T.extension().$,\n\t\t$operations: T.extension().$,\n\t},\n\tcheckins: {\n\t\thabit: T.belongs(\"habits\", \"checkins\").$,\n\t\tdate: T.string().index().$,\n\t\t$metadata: T.extension().$,\n\t\t$operations: T.extension().$,\n\t},\n});\n","metaType": "application/javascript"},"/modules/p2p/backend.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Model from \"/modules/mvc/model/backend.js\";\nimport Database from \"/modules/mvc/model/database/index.js\";\n\n$APP.events.set({\n\t\"P2P:LOAD_DATA_OP\": async ({ payload }) => {\n\t\tconst { model, method, row, id } = payload;\n\t\tif (method === \"add\")\n\t\t\tModel[model].add(row, { skipP2PSync: true, keepIndex: true });\n\t\tif (method === \"edit\")\n\t\t\tModel[model].edit(row, { skipP2PSync: true, keepIndex: true });\n\t\tif (method === \"remove\") Model[model].remove(id, { skipP2PSync: true });\n\t},\n\t\"P2P:JOIN_APP\": async ({ payload, respond }) => {\n\t\tconst { app, db } = payload;\n\t\tconst { id, models, version, timestamp } = app;\n\t\tif (!id) {\n\t\t\treturn respond({ error: \"An 'appId' is required to join an app.\" });\n\t\t}\n\n\t\tawait $APP.SysModel.editMany($APP.settings.sysmodels.APP, {\n\t\t\tactive: false,\n\t\t});\n\n\t\tlet appToJoin = await $APP.SysModel.get($APP.settings.sysmodels.APP, {\n\t\t\tid,\n\t\t});\n\n\t\tif (!appToJoin)\n\t\t\tappToJoin = await $APP.Backend.createAppEntry({\n\t\t\t\tid,\n\t\t\t\tmodels,\n\t\t\t\tversion,\n\t\t\t\ttimestamp,\n\t\t\t});\n\t\telse {\n\t\t\tawait $APP.SysModel.edit($APP.settings.sysmodels.APP, {\n\t\t\t\tid,\n\t\t\t\tactive: true,\n\t\t\t});\n\t\t\tappToJoin = await $APP.SysModel.get($APP.settings.sysmodels.APP, {\n\t\t\t\tid: id,\n\t\t\t});\n\t\t}\n\t\tconst env = await setupAppEnvironment({\n\t\t\t...appToJoin,\n\t\t\tmigrationTimestamp: Date.now(),\n\t\t});\n\t\tif (db) Database.loadDBDump({ app: env.app, dump: db });\n\t\trespond(env.app);\n\t},\n\n\t\"P2P:REGISTER_PEER_CONNECTION\": async ({ payload, respond }) => {\n\t\tconsole.log({ payload });\n\t\tconst { appId, userId, peerId } = payload;\n\t\tconst app = await $APP.SysModel.get($APP.settings.sysmodels.APP, {\n\t\t\tid: appId,\n\t\t});\n\t\tif (!app) {\n\t\t\treturn respond({ success: false, error: \"App not found\" });\n\t\t}\n\n\t\tconst newConnection = { userId, peerId, timestamp: Date.now() };\n\t\tconst updatedConnections = [...(app.connections || []), newConnection];\n\n\t\tawait $APP.SysModel.edit($APP.settings.sysmodels.APP, {\n\t\t\tid: appId,\n\t\t\tconnections: updatedConnections,\n\t\t});\n\n\t\trespond({ success: true });\n\t},\n\n\t\"P2P:UNREGISTER_PEER_CONNECTION\": async ({ payload, respond }) => {\n\t\tconst { appId, peerId } = payload;\n\t\tconsole.log({ payload });\n\t\tif (!appId || !peerId) {\n\t\t\treturn respond({\n\t\t\t\tsuccess: false,\n\t\t\t\terror: \"Both 'appId' and 'peerId' are required.\",\n\t\t\t});\n\t\t}\n\n\t\tconst app = await $APP.SysModel.get($APP.settings.sysmodels.APP, {\n\t\t\tid: appId,\n\t\t});\n\n\t\tif (!app) return respond({ success: false, error: \"App not found\" });\n\n\t\tif (!app.connections || app.connections.length === 0)\n\t\t\treturn respond({ success: true });\n\n\t\tconst updatedConnections = app.connections.filter(\n\t\t\t(conn) => conn.peerId !== peerId,\n\t\t);\n\n\t\tif (updatedConnections.length < app.connections.length) {\n\t\t\tawait $APP.SysModel.edit($APP.settings.sysmodels.APP, {\n\t\t\t\tid: appId,\n\t\t\t\tconnections: updatedConnections,\n\t\t\t});\n\t\t}\n\n\t\trespond({ success: true });\n\t},\n});\n\n$APP.hooks.set({\n\tonAddRecord({ model, row, system, opts }) {\n\t\tif (opts.skipP2PSync) return;\n\t\tif (system) return;\n\t\t$APP.Backend.broadcast({\n\t\t\ttype: \"P2P:SEND_DATA_OP\",\n\t\t\tpayload: { method: \"add\", model, row },\n\t\t});\n\t},\n\n\tonEditRecord({ model, row, system, opts }) {\n\t\tif (opts.skipP2PSync) return;\n\t\tif (system) return;\n\t\t$APP.Backend.broadcast({\n\t\t\ttype: \"P2P:SEND_DATA_OP\",\n\t\t\tpayload: { method: \"edit\", model, row },\n\t\t});\n\t},\n\n\tonRemoveRecord({ model, id, system, opts }) {\n\t\tif (opts.skipP2PSync) return;\n\t\tif (system) return;\n\t\t$APP.Backend.broadcast({\n\t\t\ttype: \"P2P:SEND_DATA_OP\",\n\t\t\tpayload: { method: \"remove\", model, id },\n\t\t});\n\t},\n});\n","metaType": "application/javascript"},"/modules/uix/display/icon.js": {"content": "import $APP from \"/bootstrap.js\";\nimport html, { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nconst { Icons, theme } = $APP;\n\nexport default {\n\ttag: \"uix-icon\",\n\n\tcss: css`& {\n\t\tdisplay: inline-block;\n\t\tvertical-align: middle;\t\n\t}\n\t\n\t&[solid] {\n\t\tstroke: currentColor;\n\t\tfill: currentColor;\n\t}`,\n\n\tproperties: {\n\t\tname: T.string(),\n\t\tsvg: T.string(),\n\t\tsolid: T.boolean(),\n\t},\n\n\tasync getIcon(name) {\n\t\tif (Icons[name]) {\n\t\t\tthis.svg = Icons[name];\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t$APP.fs.getFilePath(\n\t\t\t\t\t\t`modules/icon-${theme.font.icon.family}/${theme.font.icon.family}/${name}.svg`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst svgElement = await response.text();\n\t\t\t\t\tIcons.set({ [name]: svgElement });\n\t\t\t\t\tthis.svg = svgElement;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Failed to fetch icon: ${name}`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Error fetching icon: ${name}`, error);\n\t\t\t}\n\t\t}\n\t},\n\twillUpdate() {\n\t\tif (this.name) {\n\t\t\tthis.getIcon(this.name);\n\t\t}\n\t},\n\trender() {\n\t\treturn !this.svg ? null : html.unsafeHTML(this.svg);\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/display/card.js": {"content": "import { css } from \"/modules/mvc/view/html/index.js\";\n\nexport default {\n\ttag: \"uix-card\",\n\n\tcss: css`& {\n\t\t--uix-card-width: auto;\n\t\t--uix-card-padding: var(--uix-container-padding, 0);\n\t\t--uix-card-border-size: var(--uix-container-border-size, 0px);\n\t\t--uix-card-border-radius: var(--radius-md);\n\t\t--uix-card-background-color: var(--color-default-1, #f0f0f0);\n\t\t--uix-card-border-color: var(--uix-container-border-color, var(--color-default, #cccccc));\n\t\t--uix-card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n\t\t--uix-card-min-height: var(--uix-container-min-height, 50px);\n\t\t--uix-card-gap: var(--uix-container-gap, 0);\n\t\t--uix-card-height: auto;\n\t\t--uix-card-justify: var(--uix-container-justify, flex-start);\n\t\t--uix-card-align-items: var(--uix-container-align-items, stretch);\n\t\t--uix-card-overflow: var(--uix-container-overflow, visible);\n\t\t--uix-card-position: var(--uix-container-position, static);\n\t\t--uix-card-list-style-type: var(--uix-container-list-style-type, none);\n\t\t--uix-card-text-color: var(--uix-container-text-color, var(--uix-text-color));\n\t\n\t\tborder-width: var(--uix-card-border-size);\n\t\tborder-radius: var(--uix-card-border-radius);\n\t\tbackground-color: var(--uix-card-background-color);\n\t\tborder-color: var(--uix-card-border-color); \n\t\tbox-shadow: var(--uix-card-shadow);\n\t\tlist-style-type: var(--uix-card-list-style-type);\n\t\tcolor: var(--uix-card-text-color);\t\n\t\t&[clickable], &[clickable] * {\n\t\t\tcursor: pointer;\n\t\t}\n\t\n\t\t> :last-child.uix-join {\n\t\t\tmargin-left: calc(-1 * var(--uix-card-padding));\n\t\t\tmargin-right: calc(-1 * var(--uix-card-padding));\n\t\t\tmargin-bottom: calc(-1 * var(--uix-card-padding));\n\t\t\tpadding-bottom: 0;\n\t\n\t\t\tborder-radius: var(--uix-card-border-radius) !important;  \n\t\t\t.uix-button {\n\t\t\t\tborder-radius: 0 !important;\n\t\t\t\tborder-top-right-radius: 0 !important;      \n\t\t\t\t&:last-child {\n\t\t\t\t\tborder-bottom-right-radius: var(--uix-card-border-radius) !important;\n\t\t\t\t}\n\t\t\t\t&:first-child {\n\t\t\t\t\tborder-right-width: 0;\n\t\t\t\t\tborder-bottom-left-radius: var(--uix-card-border-radius) !important;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t&[horizontal] > :last-child.uix-join {\n\t\t\tmargin-top: calc(-1 * var(--uix-card-padding));\n\t\t\tmargin-bottom: calc(-1 * var(--uix-card-padding));\n\t\t\tmargin-right: 0;\n\t\t\tpadding-right: 0;\n\t\t}\n\t}`,\n};\n","metaType": "application/javascript"},"/modules/uix/form/form.js": {"content": "import { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-form\",\n\n\tcss: css`& {\n\t\tdisplay: flex;\n\t\tflex-direction: column; \n\t\tgap: 1rem; \n\t\tpadding-top: 1rem;\n\t}`,\n\tproperties: {\n\t\tmethod: T.string({ defaultValue: \"post\" }),\n\t\tendpoint: T.string(),\n\t\tsubmit: T.function(),\n\t\tsubmitSuccess: T.function(),\n\t\tsubmitError: T.function(),\n\t},\n\tgetFormControls() {\n\t\treturn this.querySelectorAll(\"uix-form-control\");\n\t},\n\tvalidate() {\n\t\tconst formControls = this.getFormControls();\n\t\treturn [...formControls].every((control) => control.reportValidity());\n\t},\n\tasync handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tif (this.submit) this.submit();\n\t\tconsole.log(this.submitSuccess);\n\t\tif (this.submitSuccess) this.submitSuccess();\n\n\t\tif (!this.validate()) return;\n\t\tconst formData = this.formData();\n\t\tconst response = await fetch(this.endpoint, {\n\t\t\tmethod: this.method,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(formData),\n\t\t});\n\t\tif (!response.ok) console.error(\"Form submission failed\", response);\n\t},\n\treset() {\n\t\tthis.getFormControls().forEach((control) => control.formResetCallback?.());\n\t},\n\tformData() {\n\t\tconst formData = Object.fromEntries(\n\t\t\t[...this.getFormControls()].map((element) => [\n\t\t\t\telement.name,\n\t\t\t\telement?.value(),\n\t\t\t]),\n\t\t);\n\t\treturn formData;\n\t},\n\tconnectedCallback() {\n\t\tconst submitButton = this.querySelector('uix-button[type=\"submit\"]');\n\t\tif (submitButton)\n\t\t\tsubmitButton.addEventListener(\"click\", this.handleSubmit.bind(this));\n\t\tthis.addEventListener(\"keydown\", (event) => {\n\t\t\tif (event.key !== \"Enter\") return;\n\t\t\tevent.preventDefault();\n\t\t\tthis.handleSubmit(event);\n\t\t});\n\t\tthis.addEventListener(`data-retrieved-${this.id}`, (event) =>\n\t\t\tthis.updateFields(event.detail),\n\t\t);\n\t},\n\tupdateFields(data) {\n\t\tconst formControls = this.getFormControls();\n\t\tObject.keys(data).forEach((key) => {\n\t\t\tconst control = [...formControls].find((control) => control.name === key);\n\t\t\tif (control) control.value = data[key];\n\t\t});\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/form/join.js": {"content": "import { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-join\",\n\n\tcss: css`& {\n\t\t--uix-list-button-radius: var(--uix-item-border-radius, 5px);\n\t\t--uix-list-button-border-width: 1px;\n\t\t--uix-list-button-margin: 0;\n\t\tlist-style-type: var(--uix-list-container-list-style-type);\n\t\twidth: auto;\n\t\t&.uix-join {\n\t\t\tflex-direction: row;\n\t\t\t&[vertical] {\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\t\t&[reverse][vertical] {\n\t\t\t\tflex-direction: column-reverse;\n\t\t\t}\n\t\t\t&[reverse]:not([vertical]) {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t}\n\t\t}\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\t& > * {\n\t\t\twidth: 100%;\n\t\t\tmargin: var(--uix-list-button-margin);\n\t\t\t&:first-child {\n\t\t\t\tborder-top-left-radius: var(--uix-list-button-radius);\n\t\t\t\tborder-bottom-left-radius: var(--uix-list-button-radius);\n\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\t\tborder-top-right-radius: 0;\n\t\t\t}\n\t\t\t&:last-child {\n\t\t\t\tborder-top-right-radius: var(--uix-list-button-radius);\n\t\t\t\tborder-bottom-right-radius: var(--uix-list-button-radius);\n\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t\tborder-left-width: 0;\n\t\t\t}\n\t\t}\n\t\t& > [bordered], & > [outline] {\n\t\t\t&:last-child {\n\t\t\t\tborder-width: var(--uix-list-button-border-width); \n\t\t\t}\n\t\t\t&:hover:active {\n\t\t\t\tborder-width: var(--uix-list-button-border-width);\n\t\t\t}\n\t\t\t&:has(+ *:active) {\n\t\t\t\tborder-width: var(--uix-list-button-border-width);\n\t\t\t}\n\t\t}\n\t\t&[vertical] {    \n\t\t\t& > * {\n\t\t\t\tborder-radius: 0;\n\t\t\t\tmargin: var(--uix-list-button-margin);\n\t\t\t\t&:first-child {\n\t\t\t\t\tborder-top-left-radius: var(--uix-list-button-radius);\n\t\t\t\t\tborder-top-right-radius: var(--uix-list-button-radius);\n\t\t\t\t}\n\t\t\t\t&:last-child {\n\t\t\t\t\tborder-bottom-left-radius: var(--uix-list-button-radius);\n\t\t\t\t\tborder-bottom-right-radius: var(--uix-list-button-radius);\n\t\t\t\t}\n\t\t\t}\n\t\t\t& > .uix-button[bordered], & > .uix-button[outline] {\n\t\t\t\tborder-width: var(--uix-list-button-border-width);\n\t\t\t\t&:last-child {\n\t\t\t\t\tborder-width: var(--uix-list-button-border-width); \n\t\t\t\t}\n\t\t\t\t&:hover:active {\n\t\t\t\t\tborder-width: var(--uix-list-button-border-width);\n\t\t\t\t}\n\t\t\t\t&:has(+ .uix-button:active) {\n\t\t\t\t\tborder-width: var(--uix-list-button-border-width);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`,\n\n\tproperties: {\n\t\tvertical: T.boolean(),\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/form/input.js": {"content": "import html, { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-input\",\n\n\tcss: css`& {\n\t\t--uix-input-background-color: var(--color-default-10);\n\t\t--uix-input-border-color: var(--color-default-70);\n\t\t--uix-input-text-color: var(--color-default-95); \n\t\t--uix-input-border-radius: 0.375rem; \n\t\t--uix-input-padding-x: 5px; \n\t\t--uix-input-padding-y: 5px; \n\t\t--uix-input-font-size: 1rem; \n\t\t--uix-input-focus-ring-width: 2px; \n\t\t--uix-input-focus-ring-offset-width: 2px;\n\t\t--uix-input-height:  2.5rem;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\twidth: 100%; \n\t\theight: var(--uix-input-height); \n\t\tborder-radius: var(--uix-input-border-radius); \n\t\tborder: 2px solid var(--uix-input-border-color); \n\t\tfont-size: var(--uix-input-font-size); \n\t\tbackground-color: var(--uix-input-background-color);\n\t\tcolor: var(--uix-input-text-color);\n\t\t&:focus {\n\t\t\toutline: none;outline-style: none;\n\t\t\tbox-shadow: none;\n\t\t\tborder-color: transparent;\n\t\t}\n\t\t\n\t\tinput[type=\"text\"],\n\t\tinput[type=\"password\"],\n\t\tinput[type=\"email\"],\n\t\tinput[type=\"number\"],\n\t\tinput[type=\"decimal\"],\n\t\tinput[type=\"search\"],\n\t\tinput[type=\"tel\"],\n\t\tinput[type=\"url\"] {\n\t\t\twidth: 100%;\n\t\t\toutline: none;\n\t\t\tcolor: var(--uix-input-text-color);\n\t\t\tbackground-color: transparent;\n\t\t\tpadding: var(--uix-input-padding-x) var(--uix-input-padding-y);\n\t\t\tborder: 0;\n\t\t\t&:focus + label, &:not(:placeholder-shown) + label {\n\t\t\t\ttransition: margin-top 0.3s ease, font-size 0.3s ease;\n\t\t\t\tmargin-top: -0.4rem;\n\t\t\t\tfont-size: 0.6rem;\n\t\t\t\tcursor: default;\n\t\t\t\t.uix-text {\n\t\t\t\t\t--uix-text-size: 0.8rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t&::placeholder {\n\t\t\t\tcolor: transparent;\n\t\t\t}\n\t\t\t&:focus {\n\t\t\t\toutline: none;outline-style: none;\n\t\t\t\tbox-shadow: none;\n\t\t\t\tborder-color: transparent;\n\t\t\t\t&::placeholder {\n\t\t\t\t\tcolor: var(--uix-input-text-color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlabel {\n\t\t\t.uix-text {\n\t\t\t\t--uix-text-font-weight: 600;\n\t\t\t}\n\t\t\tcursor: text;\n\t\t\tposition: absolute;\n\t\t\tmargin-top: 0.5rem; \n\t\t\tfont-family: monospace; \n\t\t\tletter-spacing: 0.05em; \n\t\t\ttext-transform: uppercase; \n\t\t\tfont-weight: 600;\n\t\t\tmargin-left: 0.75rem;\n\t\t\tpadding-right: 0.5rem; \n\t\t\tpadding-left: 0.25rem;\n\t\t\tbackground-color: var(--uix-input-background-color);\n\t\t\tcolor: var(--uix-input-text-color);\n\t\t\ttransition: margin-top 0.3s ease, font-size 0.3s ease;\n\t\t}\n\t\tlabel[required]::after {\n\t\t\tcontent: '*';\n\t\t\tcolor: var(--color-error-50); \n\t\t}\n\t\t&:not([type=checkbox]):not([radio]) input:focus-visible {\n\t\t\toutline: none; \n\t\t\tbox-shadow: 0 0 0 var(--uix-input-focus-ring-width) var(--uix-input-border-color);\n\t\t}\n\t\t&:not([type=checkbox]):not([radio]) input:disabled {\n\t\t\tcursor: not-allowed; \n\t\t\topacity: 0.6;\n\t\t}\n\t\t&[type=checkbox],\n\t\t&[radio] {\n\t\t\tborder: 0;\n\t\t\talign-items: center;\n\t\t\theight: auto;\n\t\t\twidth: auto;\n\t\t\tposition: relative;\n\t\t\tcursor: pointer;\n\t\t}\n\t\t&[type=checkbox] label,\n\t\t&[radio] label {\n\t\t\tposition: static;\n\t\t\tmargin-top: 0;\n\t\t\tbackground-color: transparent;\n\t\t\tpadding: 0;\n\t\t\tcursor: pointer;\n\t\t\tmargin-left: 0.5rem;    \n\t\t\ttext-transform: none;\n\t\t\tfont-family: inherit;\n\t\t\tletter-spacing: normal;\n\t\t\tfont-weight: normal;\n\t\t\t.uix-text {\n\t\t\t\t--uix-text-font-weight: 400;\n\t\t\t}\n\t\t}\n\t\t&[type=checkbox] input,\n\t\t&[radio] input[type=\"radio\"] {\n\t\t\twidth: var(--uix-input-size);\n\t\t\theight: var(--uix-input-size);\n\t\t\tmargin: 0;\n\t\t\tborder: none;\n\t\t\tbackground: none;\n\t\t\tbox-shadow: none;\n\t\t\tpadding: 0;    \n\t\t}\n\t\t&[type=checkbox] input:disabled,\n\t\t&[radio] input[type=\"radio\"]:disabled {\n\t\t\tcursor: not-allowed;\n\t\t\topacity: 0.6;\n\t\t}\n\t\t&[type=checkbox], &[radio] {\n\t\t\tgap: 0.75rem;\n\t\t\tpadding: 0.5rem 0;\n\t\t\t--uix-checkbox-size: 1.5rem;\n\t\t\t--uix-checkbox-border-radius: 0.375rem;\n\t\t\t--uix-checkbox-checked-bg: var(--uix-input-border-color);\n\t\t\t--uix-checkbox-check-color: var(--uix-input-background-color);\n\t\t\tinput, input[type=\"radio\"] {\n\t\t\t\tappearance: none;\n\t\t\t\t-webkit-appearance: none;\n\t\t\t\twidth: var(--uix-checkbox-size);\n\t\t\t\theight: var(--uix-checkbox-size);\n\t\t\t\tmargin: 0;\n\t\t\t\tborder: 2px solid var(--uix-input-border-color);\n\t\t\t\tborder-radius: var(--uix-checkbox-border-radius);\n\t\t\t\tbackground-color: var(--uix-input-background-color);\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: relative;\n\t\t\t\ttransition: \n\t\t\t\t\tbackground-color 0.2s ease,\n\t\t\t\t\tborder-color 0.2s ease;\n\t\t\t\t&::after {\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tdisplay: none;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\twidth: 0.375rem;\n\t\t\t\t\theight: 0.75rem;\n\t\t\t\t\tborder: solid var(--uix-checkbox-check-color);\n\t\t\t\t\tborder-width: 0 2px 2px 0;\n\t\t\t\t\ttransform: translate(-50%, -60%) rotate(45deg);\n\t\t\t\t}\n\t\t\t\t&:checked {\n\t\t\t\t\tbackground-color: var(--uix-checkbox-checked-bg);\n\t\t\t\t\tborder-color: var(--uix-checkbox-checked-bg);\n\t\t\t\t\t&::after {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t&:focus-visible {\n\t\t\t\t\tbox-shadow: 0 0 0 var(--uix-input-focus-ring-width) var(--uix-input-border-color);\n\t\t\t\t}\n\t\t\t\t&:disabled {\n\t\t\t\t\topacity: 0.6;\n\t\t\t\t\tcursor: not-allowed;\n\t\t\t\t\t\n\t\t\t\t\t& + label {\n\t\t\t\t\t\tcursor: not-allowed;\n\t\t\t\t\t\topacity: 0.6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t&:hover:not(:has(input[type=\"checkbox\"]:disabled)) {\n\t\t\t\tinput[type=\"checkbox\"] {\n\t\t\t\t\tborder-color: var(--uix-input-border-color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlabel {\n\t\t\t\tmargin-left: 0;\n\t\t\t\torder: 2;\n\t\t\t}\n\t\t}\n\t}\n\t`,\n\tproperties: {\n\t\tbind: T.object(),\n\t\tautofocus: T.boolean(),\n\t\tvalue: T.string(),\n\t\tplaceholder: T.string(),\n\t\tname: T.string(),\n\t\tlabel: T.string(),\n\t\tdisabled: T.boolean(),\n\t\tregex: T.string(),\n\t\trequired: T.boolean(),\n\t\ttype: T.string({\n\t\t\tdefaultValue: \"text\",\n\t\t\tenum: [\n\t\t\t\t\"text\",\n\t\t\t\t\"password\",\n\t\t\t\t\"email\",\n\t\t\t\t\"number\",\n\t\t\t\t\"decimal\",\n\t\t\t\t\"search\",\n\t\t\t\t\"tel\",\n\t\t\t\t\"url\",\n\t\t\t\t\"checkbox\",\n\t\t\t],\n\t\t}),\n\t\tmaxLength: T.number(),\n\t\tkeydown: T.function(),\n\t\tinput: T.function(),\n\t\tselected: T.boolean(),\n\t},\n\tconnectedCallback() {\n\t\tif (!this.name) {\n\t\t\tconst uniqueId = `uix-input-${Math.random().toString(36).substr(2, 9)}`;\n\t\t\tthis.name = uniqueId;\n\t\t}\n\t},\n\tinputValue() {\n\t\tconst el = this.q(\"input\");\n\t\treturn el?.value;\n\t},\n\tresetValue() {\n\t\tconst el = this.q(\"input\");\n\t\tif (el) el.value = null;\n\t},\n\t_input(event) {\n\t\tthis.value = event.target.value;\n\t\tif (this.input) this.input(event);\n\t},\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\tautofocus,\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\trequired,\n\t\t\tregex,\n\t\t\ttype,\n\t\t\t_input: input,\n\t\t\tsize,\n\t\t\tbind,\n\t\t\tcheckbox,\n\t\t\tradio,\n\t\t\tselected,\n\t\t} = this;\n\n\t\tconst inputType = checkbox ? \"checkbox\" : radio ? \"radio\" : type;\n\t\tconst inputValue = (bind ? bind.value : value) || \"\";\n\t\tconst isCheckbox = type === \"checkbox\";\n\t\treturn html`\n        <input\n          type=${inputType}\n          value=${inputValue}\n          ?autofocus=${autofocus}\n          ?disabled=${disabled}\n          size=${size}\n          ?required=${required}\n            ?checked=${selected}\n          name=${name}\n          id=${name}\n          regex=${regex}\n          @input=${bind ? (e) => bind.setValue(isCheckbox ? e.target.checked : e.target.value) : input}\n          placeholder=${placeholder}\n        />\t\t\t\n        ${\n\t\t\t\t\tlabel || placeholder\n\t\t\t\t\t\t? html`<label for=${name} ?required=${required}>${label || placeholder}</label>`\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\n    `;\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/display/button.js": {"content": "import { css } from \"/modules/mvc/view/html/index.js\";\n\nexport default {\n\ttag: \"uix-button\",\n\n\textends: \"uix-link\",\n\tcss: css`& {\n\t\t--uix-button-font-weight: 700; \n\t\t--uix-button-text-color: var(--color-default-80);\n\t\t--uix-button-background-color: var(--color-default-100);\n\t\t--uix-button-hover-background-color: var(--color-default-20);\n\t\t--uix-button-border-radius: var(--radius-sm);\n\t\t--uix-button-border-size:  0;\n\t\t--uix-button-border-color: var(--color-default-40);\n\t\t--uix-button-hover-opacity:  0.9;\n\t\t--uix-button-active-scale: 0.9;\n\t\t--uix-button-width: fit-content;\n\t\t--uix-button-height: fit-content;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tgap: 0.5rem; \n\t\tcursor: pointer;\n\t\ttransition: all 0.3s ease-in-out;\n\t\tfont-weight: var(--uix-button-font-weight);\n\t\tcolor: var(--uix-button-text-color);\n\t\tbackground-color: var(--uix-button-background-color);\n\t\twidth: var(--uix-button-width);\n\t\theight: var(--uix-button-height);\n\t\tborder: var(--uix-button-border-size) solid var(--uix-button-border-color);\n\t\tborder-radius: var(--uix-button-border-radius);\n\t \n\t\t> button, > a, > input {\n\t\t\tpadding: var(--uix-button-padding, var(--uix-link-padding));\n\t\t\tword-break: keep-all;\n\t\t\theight: 100%;\n\t\t\tline-height: var(--uix-button-height);\n\t\t\tborder-radius: var(--uix-button-border-radius);\n\t\t\tflex-basis: 100%;\n\t\t\tjustify-content: var(--uix-text-align);\n\t\t\t&:hover {\n\t\t\t\topacity: var(--uix-button-hover-opacity); \n\t\t\t\tbackground-color: var(--uix-button-hover-background-color);\n\t\t\t}\n\t\t\t\n\t\t\t&:hover:active {\n\t\t\t\topacity: var(--uix-button-hover-opacity);\n\t\t\t}  \n\t\t}\n\t\n\t\t.uix-icon, button, input, a {\n\t\t\tcursor: pointer;      \n\t\t}\n\t}\n\t`,\n\ttypes: {\n\t\tdefault: ({ variant }) => ({\n\t\t\t\"border-size\": \"0\",\n\t\t\t\"background-color\":\n\t\t\t\tvariant === \"default\"\n\t\t\t\t\t? `var(--color-${variant}-100)`\n\t\t\t\t\t: `var(--color-${variant}-60)`,\n\t\t\t\"hover-background-color\": `var(--color-${variant}-30)`,\n\t\t\t\"text-color\": `var(--color-${variant}-1)`,\n\t\t}),\n\t\tbordered: ({ variant }) => ({\n\t\t\t\"border-size\": \"1px\",\n\t\t\t\"background-color\": \"transparent\",\n\t\t\t\"hover-background-color\": `var(--color-${variant}-30)`,\n\t\t\t\"border-color\": `var(--color-${variant}-40)`,\n\t\t\t\"text-color\": `var(--color-${variant}-100)`,\n\t\t}),\n\t\tghost: ({ variant }) => ({\n\t\t\t\"background-color\": \"transparent\",\n\t\t\t\"hover-background-color\": `var(--color-${variant}-30)`,\n\t\t\t\"border-size\": \"0px\",\n\t\t\t\"text-color\": `var(--color-${variant}-100)`,\n\t\t}),\n\t\toutline: ({ variant }) => ({\n\t\t\t\"background-color\": \"transparent\",\n\t\t\t\"hover-background-color\": `var(--color-${variant}-30)`,\n\t\t\t\"text-color\": `var(--color-${variant}-90)`,\n\t\t\t\"border-size\": \"1px\",\n\t\t}),\n\t\tfloat: ({ variant }) => ({\n\t\t\t\"background-color\": `var(--color-${variant}-60)`,\n\t\t\t\"hover-background-color\": `var(--color-${variant}-50)`,\n\t\t\t\"text-color\": `var(--color-${variant}-1)`,\n\t\t\t\"border-size\": \"0px\",\n\t\t\t\"border-radius\": \"100%\",\n\t\t\twidth: \"var(--uix-button-height)\",\n\t\t\tpadding: \"0\",\n\t\t\t\"justify-content\": \"center\",\n\t\t\tshadow: \"var(--shadow-md)\",\n\t\t\t\"hover-shadow\": \"var(--shadow-lg)\",\n\t\t}),\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/layout/list.js": {"content": "import html from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-list\",\n\n\tproperties: {\n\t\tmultiple: T.boolean(),\n\t\tmultipleWithCtrl: T.boolean(),\n\t\tmultipleWithShift: T.boolean(),\n\t\tlastSelectedIndex: T.number(),\n\t\tselectedIds: T.array(),\n\t\tonSelectedChanged: T.function(),\n\t\tgap: T.string({ defaultValue: \"md\" }),\n\t\titemId: T.string(\".uix-link\"),\n\t\tselectable: T.boolean(),\n\t},\n\tconnectedCallback() {\n\t\tif (this.selectable)\n\t\t\tthis.addEventListener(\"click\", this.handleClick.bind(this));\n\t},\n\tdisconnectedCallback() {\n\t\tif (this.selectable)\n\t\t\tthis.removeEventListener(\"click\", this.handleClick.bind(this));\n\t},\n\thandleClick: function (e) {\n\t\tconsole.log(this);\n\t\tconst link = e.target.closest(\".uix-link\");\n\t\tif (!link || !this.contains(link)) return;\n\t\te.preventDefault();\n\t\tconst links = Array.from(this.qa(\".uix-link\"));\n\t\tconst index = links.indexOf(link);\n\t\tif (index === -1) return;\n\t\t"metaType": "application/javascript"},"/modules/uix/layout/container.js": {"content": "export default { tag: \"uix-container\" };\n","metaType": "application/javascript"},"/modules/uix/display/stat.js": {"content": "import html from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\nexport default {\n\ttag: \"uix-stat\",\n\n\tproperties: {\n\t\tlabel: T.string(),\n\t\tvalue: T.string(),\n\t\tpadding: T.string(\"lg\"),\n\t\titems: T.string(\"center\"),\n\t\ttext: T.string(\"center\"),\n\t\tgap: T.string(\"md\"),\n\t},\n\trender() {\n\t\treturn html`<span class=\"center text-6xl text-bold\">${this.value}</span>\n\t\t\t\t\t\t\t\t<span class=\"center text-xl text-medium\">${this.label}</span>`;\n\t},\n};\n","metaType": "application/javascript"},"/modules/app/button.js": {"content": "import html from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"app-button\",\n\n\trender() {\n\t\treturn html`<div class=\"fixed bottom-[30px] right-[30px]\">\n                  <uix-button .float=${html`<div class=\"flex flex-col items-center gap-2\">\n                                              <theme-darkmode></theme-darkmode>\n                                              <app-dev-only>\n                                                <template>\n                                                  <bundler-button></bundler-button>\n                                                </template>\n                                              </app-dev-only>\n                                              <p2p-button></p2p-button> \n                                            </div>`} icon=\"settings\"></uix-button>\n                </div>`;\n\t},\n\tproperties: {\n\t\tlabel: T.string(\"Actions\"),\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/display/link.js": {"content": "import html, { css } from \"/modules/mvc/view/html/index.js\";\nimport Router from \"/modules/router/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-link\",\n\n\tcss: css`& {\n\t\t&[vertical] {\n\t\t\tmargin: 0 auto;\n\t\t}\n\t\t--uix-link-indent: 0;\n\t\tcursor: pointer;\n\t\ta, button {\n\t\t\tcursor: pointer;\n\t\t\tpadding: var(--uix-link-padding);\n\t\t\t&:hover {\n\t\t\t\tcolor: var(--uix-link-hover-color, var(--color-primary-70));    \n\t\t\t}\n\t\t}\n\t\tcolor: var(--uix-link-text-color, var(--color-primary-70));\n\t\tfont-weight: var(--uix-link-font-weight, 600);\n\t\twidth: var(--uix-link-width, auto);\t\t\n\t\t.uix-text-icon__element {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: var(--uix-link-icon-gap, 0.5rem);\n\t\t\twidth: auto;\n\t\t\t&[reverse][vertical] {\n\t\t\t\tflex-direction: column-reverse;\n\t\t\t}\n\t\n\t\t\t&:not([reverse])[vertical] {\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\n\t\t\t&[reverse]:not([vertical]) {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t}\n\t\n\t\t\t&:not([reverse]):not([vertical]) {\n\t\t\t\tflex-direction: row;\n\t\t\t}\n\t\t}\n\t\ttransition: all 0.3s ease-in-out; \n\t}\n\t\n\t&[indent] {\n\t\t> a, > button {\n\t\t\tpadding-left: var(--uix-link-indent);\n\t\t}\n\t}\n\t\n\t&[active]:hover {\n\t\tcolor: var(--uix-link-hover-text-color, var(--color-primary-40));\n\t}\n\t\n\t&[selectable][selected] {\n\t\tbackground-color: var(--color-primary-40); \n\t}\n\t\n\t&:hover {\n\t\t[tooltip] {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n\t\n\t&[tooltip] {\n\t\tdisplay: inline-block;\n\t\t&:hover {\n\t\t\t[tooltip] {\n\t\t\t\tvisibility: visible;\n\t\t\t}\n\t\t}\n\t\t[tooltip] {\n\t\t\t\tvisibility: hidden;\n\t\t\t\twidth: 120px;\n\t\t\t\tbackground-color: black;\n\t\t\t\tcolor: #fff;\n\t\t\t\ttext-align: center;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\tpadding: 5px 0;    \n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 1000000000;\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: 100%;       \n\t\t\t\ttransform: translateY(-50%);\n\t\t}\n\t}\n\t\n\t&[position~=\"top\"] [tooltip] {\n\t\tbottom: 100%; \n\t\tleft: 50%;\n\t\ttransform: translateX(-50%); \n\t}\n\t\n\t&[position~=\"bottom\"] [tooltip] {\n\t\ttop: 100%; \n\t\tleft: 50%;\n\t\ttransform: translateX(-50%); \n\t}\n\t\n\t&[position~=\"left\"] [tooltip] {\n\t\ttop: 50%;\n\t\tright: 100%; \n\t\ttransform: translateY(-50%);\n\t}\n\t\n\t&[tooltip], &[dropdown], &[context], &[float] {\n\t\tposition: relative;\n\t}\n\t\n\t&[dropdown], &[accordion] {\n\t\tflex-direction: column;\n\t}\n\t\n\t[float], [dropdown], [accordion], [context] {\n\t\tdisplay: none;\n\t}\n\n\t&[floatopen] [float] {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tbottom: 50px;\n\t\tright: 30px;\n\t\twidth: 30px;\n\t}\n\t\n\t&[context] {\n\t\tz-index: auto;\n\t}\n\t\n\t[dropdown], [context][open] {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 100%; \n\t\twidth: 100%;\n\t\tmin-width: 200px;\n\t\tz-index: 1000;\n\t\tbackground-color: var(--color-primary-10); \n\t\tbox-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n\t\t.uix-link:hover, input {\n\t\t\tbackground-color: var(--color-primary-20); \n\t\t}\n\t\t& > .uix-link, input {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t\n\t[context][open] {\n\t\tdisplay: flex;\n\t}\n\t\n\t&[selected] {\n\t\t[dropdown], [accordion] {\n\t\t\tdisplay: flex;\n\t\t}\n\t}`,\n\tproperties: {\n\t\tcontent: T.object(),\n\t\tcontext: T.object(), "metaType": "application/javascript"},"/modules/icon-lucide/lucide/calendar-heart.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M3 10h18V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7M8 2v4m8-4v4\"/><path d=\"M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34l-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53c-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z\"/></g></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/circle-plus.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8m-4-4v8\"/></g></svg>","metaType": "image/svg+xml"},"/modules/uix/display/calendar.js": {"content": "import $APP from \"/bootstrap.js\";\nimport html, { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-calendar\",\n\n\tcss: css`\n\tuix-calendar-day {\n\t\tmargin-inline: auto;\n\t}\n\t[calendarDay] {\n\t\t\t\tcursor: pointer; \n\t\t\t\ttext-align: center; \n\t\t\t\tpadding: 0.5rem; \n\t\t\t\tbackground-color: transparent;\n\t\t\t\t&[toggled] {\n\t\t\t\t\tbackground-color: var(--color-primary-50);\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\t\t\t}`,\n\tproperties: {\n\t\tgap: T.string(),\n\t\tmonth: T.number({ defaultValue: new Date().getMonth() }),\n\t\tyear: T.number({ defaultValue: new Date().getFullYear() }),\n\t\ttoggledDays: T.array({ defaultValue: [] }),\n\t\tdayContent: T.object(),\n\t\thabit: T.string(),\n\t},\n\t_getCalendarDays(month, year) {\n\t\tconst days = [];\n\t\tconst date = new Date(year, month, 1);\n\t\tconst firstDayIndex = (date.getDay() + 6) % 7;\n\t\tconst lastDay = new Date(year, month + 1, 0).getDate();\n\t\tfor (let i = 0; i < firstDayIndex; i++)\n\t\t\tdays.push({ day: null, isCurrentMonth: false });\n\n\t\tfor (let i = 1; i <= lastDay; i++)\n\t\t\tdays.push({\n\t\t\t\tday: i,\n\t\t\t\tisCurrentMonth: true,\n\t\t\t\tdate: new Date(year, month, i),\n\t\t\t});\n\n\t\treturn days;\n\t},\n\n\t_prevMonth() {\n\t\tif (this.month === 0) {\n\t\t\tthis.month = 11;\n\t\t\tthis.year--;\n\t\t} else this.month--;\n\t\tthis.requestUpdate();\n\t},\n\n\t_nextMonth() {\n\t\tif (this.month === 11) {\n\t\t\tthis.month = 0;\n\t\t\tthis.year++;\n\t\t} else this.month++;\n\t\tthis.requestUpdate();\n\t},\n\trender() {\n\t\tconst weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\t\tconst calendarDays = this._getCalendarDays(this.month, this.year);\n\t\tconst headerText = new Intl.DateTimeFormat(undefined, {\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"long\",\n\t\t}).format(new Date(this.year, this.month));\n\t\treturn html`\n      <div class=\"flex justify-between items-center p-2\">\n        <uix-icon class=\"cursor-pointer rounded-full p-2 hover:bg-gray-100 dark:hover:bg-gray-700\" name=\"chevron-left\" @click=${() => this._prevMonth()}></uix-icon>\n        <span class=\"font-bold text-center\">${headerText}</span>\n        <uix-icon class=\"cursor-pointer rounded-full p-2 hover:bg-gray-100 dark:hover:bg-gray-700\" name=\"chevron-right\" @click=${() => this._nextMonth()}></uix-icon>\n      </div>\n      <div class=\"grid grid-cols-7 mt-4\" style=${`gap: ${this.gap || \"0.5rem\"}`}>\n        ${weekdays.map((day) => html`<span class=\"text-center font-semibold text-sm text-gray-500\">${day}</span>`)}\n        ${calendarDays.map((day) => {\n\t\t\t\t\tif (!day.isCurrentMonth) return html`<div></div>`;\n\t\t\t\t\tconst dateKey = $APP.Date.formatKey(day.date);\n\t\t\t\t\treturn this.dayContent({\n\t\t\t\t\t\tdateKey,\n\t\t\t\t\t\ttoggled: this.toggledDays.includes(dateKey),\n\t\t\t\t\t\tday,\n\t\t\t\t\t\thabit: this.habit,\n\t\t\t\t\t});\n\t\t\t\t})}\n      </div>\n    `;\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/overlay/modal.js": {"content": "import html, { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-modal\",\n\n\tcss: css`& {\n\t\t--uix-modal-background-color: var(--color-default-1, #ffffff);\n\t\t--uix-modal-box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n\t\t--uix-modal-padding: var(--spacing-sm);\n\t\t--uix-modal-dialog-width: var(--sizes-xl);\n\t\t--uix-container-height: auto;\n\t\tborder: 0;   \n\t\tdialog {\n\t\t\t&[open] {\n\t\t\t\tdisplay: flex;\n\t\t\t}\t\t\t\n\t\t\tposition: absolute;\n\t\t\tmargin: auto;\t\t\t\n\t\t\tz-index: 1000; \n\t\t\toverflow-y: auto;\n\t\t\tbox-sizing: border-box; \n\t\t\ttransition: all 0.1s ease-in-out;      \n\t\t\tborder: 0;\n\t\t\tbackground-color: transparent;\n\t\t\t> .uix-card {\n\n\t\t\t}\n\t\t}  \n\t}`,\n\tproperties: {\n\t\tlabel: T.string(),\n\t\ticon: T.string(),\n\t\topen: T.boolean({ defaultValue: false }),\n\t\tcontent: T.object(),\n\t\tcontentFn: T.function(),\n\t\tonclose: T.function(),\n\t\tcta: T.object(),\n\t},\n\tfirstUpdated() {\n\t\tconst firstChild = this.children[0];\n\t\tif (firstChild && firstChild.tagName !== \"DIALOG\")\n\t\t\tfirstChild.addEventListener(\"click\", this.show.bind(this));\n\n\t\tthis.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n\t\tthis.addEventListener(\"click\", this.onBackdropClick.bind(this));\n\t},\n\thide() {\n\t\tthis.querySelector(\"dialog\").close();\n\t\tthis.open = false;\n\t\tif (this.onclose) this.onclose();\n\t},\n\tfocusFirstInput() {\n\t\tconst dialog = this.querySelector(\"dialog\");\n\t\tconst firstInput = dialog.querySelector(\"input, textarea, select, button\");\n\t\tif (firstInput) firstInput.focus();\n\t},\n\tshow(e) {\n\t\tthis.open = true;\n\t\tthis.querySelector(\"dialog\").showModal();\n\t\tthis.focusFirstInput();\n\t\te?.stopPropagation();\n\t},\n\ttoggle(e) {\n\t\te?.preventDefault();\n\t\tthis.open ? this.hide() : this.show();\n\t},\n\tonKeyDown(e) {\n\t\tif (e.key === \"Escape\") this.hide();\n\t},\n\tonBackdropClick(e) {\n\t\tif (\n\t\t\t!window.getSelection().toString() &&\n\t\t\te.target === this.querySelector(\"dialog\")\n\t\t)\n\t\t\tthis.hide();\n\t},\n\trender() {\n\t\treturn html`<dialog ?open=${this.open}>\n\t\t\t\t\t\t\t\t\t<uix-card variant=${this.variant} size=${this.size} width=${this.size}>\n\t\t\t\t\t\t\t\t\t\t<div horizontal items=\"center\" width=\"full\" justify=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span grow size=\"lg\" transform=\"uppercase\" weight=\"semibold\" icon=${this.icon}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t${this.label}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<uix-link @click=${this.hide.bind(this)} icon=\"x\"></uix-link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t${!this.open ? null : (this.content ?? this.contentFn.bind(this)())}\n\t\t\t\t\t\t\t\t\t</uix-card>\n\t\t\t\t\t\t\t\t</dialog>\n\t\t\t\t\t\t\t\t${!this.cta ? null : html`<div @click=${this.show.bind(this)}>${this.cta}</div>`}\n\t\t\t\t\t\t`;\n\t},\n};\n","metaType": "application/javascript"},"/modules/router/index.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Controller from \"/modules/mvc/controller/frontend.js\";\nimport html from \"/modules/mvc/view/html/index.js\";\n\nclass Router {\n\tstatic stack = [];\n\tstatic routes = {};\n\n\tstatic init(routes, defaultTitle) {\n\t\tif (!Object.keys(routes).length)\n\t\t\treturn console.error(\"Error: no routes loaded\");\n\n\t\tthis.routes = routes;\n\t\tthis.defaultTitle = defaultTitle;\n\n\t\t"metaType": "application/javascript"},"/modules/uix/display/calendar-day.js": {"content": "import html from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-calendar-day\",\n\n\textends: \"uix-avatar\",\n\tproperties: {\n\t\ttoggled: T.boolean(),\n\t\tday: T.object(),\n\t\thabit: T.string(),\n\t\tdateKey: T.string(),\n\t},\n\n\trender() {\n\t\tconst { day, dateKey, toggled, habit } = this;\n\t\treturn html`<uix-link \n\t\t\t\t\t\t\t\t\t\tcenter\n\t\t\t\t\t\t\t\t\t\t?toggled=${toggled}\n\t\t\t\t\t\t\t\t\t\tcalendarDay\n\t\t\t\t\t\t\t\t\t\t._data=${{\n\t\t\t\t\t\t\t\t\t\t\tmodel: \"checkins\",\n\t\t\t\t\t\t\t\t\t\t\tmethod: \"add\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t._map=${{\n\t\t\t\t\t\t\t\t\t\t\thabit,\n\t\t\t\t\t\t\t\t\t\t\tdate: dateKey,\n\t\t\t\t\t\t\t\t\t\t\tonclick: toggled ? \"$data:remove\" : \"$data:add\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t${day.day}\n\t\t\t\t\t\t\t\t\t</uix-link>\n\t\t\t\t\t\t\t\t\t<uix-overlay y=\"top\" x=\"right\">\n\t\t\t\t\t\t\t\t\t\t<uix-modal\n\t\t\t\t\t\t\t\t\t\ticon=\"message\" label=\"Add notes\"\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t.cta=${html`<uix-circle\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-4 h-4 bg-green\"\n\t\t\t\t\t\t\t\t\t\t\t._map=${{\n\t\t\t\t\t\t\t\t\t\t\t\t_row: `$find:@parent.notes:date=${dateKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\tsolid: \"$boolean:@id\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></uix-circle>`}\n\t\t\t\t\t\t\t\t\t\t.content=${html`\n\t\t\t\t\t\t\t\t\t\t\t<uix-form\n\t\t\t\t\t\t\t\t\t\t\t\t._data=${{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodel: \"notes\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: \"add\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t._map=${{\n\t\t\t\t\t\t\t\t\t\t\t\t\t_row: `$find:@parent.notes:date=${dateKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\thabit,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdate: dateKey,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsubmit: \"$data:upsert\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitSuccess: \"$closest:uix-modal.hide\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<uix-join>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<uix-input name=\"notes\" size=\"xl\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t._map=${{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_row: `$find:@parent.notes:date=${dateKey}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"@notes\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></uix-input>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<uix-button label=\"ADD\" icon=\"plus\" type=\"submit\" size=\"xl\"></uix-button>\n\t\t\t\t\t\t\t\t\t\t\t\t</uix-join>\n\t\t\t\t\t\t\t\t\t\t\t</uix-form>`}>\n\t\t\t\t\t\t\t\t\t\t</uix-modal>\n\t\t\t\t\t\t\t\t\t</uix-overlay>`;\n\t},\n};\n","metaType": "application/javascript"},"/modules/icon-lucide/lucide/chevron-left.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m15 18l-6-6l6-6\"/></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/chevron-right.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m9 18l6-6l-6-6\"/></svg>","metaType": "image/svg+xml"},"/modules/uix/display/avatar.js": {"content": "import { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-avatar\",\n\n\tcss: css`\n    & {\n      --uix-avatar-background-color: var(--color-default-30, #d1d5db);\n      --uix-avatar-text: var(--color-default, #000000);\n      --uix-avatar-ring: var(--color-default, #000000);\n      --uix-avatar-ring-width: 2px;\n      --uix-avatar-border-radius: 50%;\n      --uix-avatar-width: 3rem;\n      --uix-avatar-height: 3rem;\n      display: flex;\n      position: relative;\n      justify-content: center;\n      align-items: center;\n      overflow: hidden;\n      color: var(--uix-avatar-text);\n      font-size: calc(var(--uix-avatar-width) / 2.5);\n      font-weight: 500;\n      vertical-align: middle;\n\t\t\ttext-align: center; \n\t\t\tmin-width: var(--uix-avatar-width);\n\t\t\tpadding: 3px;\n    }\n\t\t> :not(uix-overlay) {\n      width: var(--uix-avatar-width);\n      height: var(--uix-avatar-height);\n      border-radius: var(--uix-avatar-border-radius);\n      background-color: var(--uix-avatar-background-color);\n\t\t}\n\n    &[ring] {\n      box-shadow: 0 0 0 var(--uix-avatar-ring-width) var(--uix-avatar-ring);\n    }\n    > img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n\n\n    > uix-overlay {\n      position: absolute;\n      z-index: 100;\n      --tx: 0;\n      --ty: 0;\n      transform: translate(var(--tx), var(--ty));\n\t\t\tcursor: pointer; \n\t\t\ttext-align: center; \n\t\t\tbackground: transparent;\n    }\n    > uix-overlay[y=\"top\"] { top: 0%; }\n    > uix-overlay[y=\"bottom\"] { bottom: 0%; }\n    > uix-overlay[y=\"center\"] { top: 50%; --ty: -50%; }\n    > uix-overlay[x=\"left\"] { left: -5%; }\n    > uix-overlay[x=\"right\"] { right: 0%; }\n    > uix-overlay[x=\"center\"] { left: 50%; --tx: -50%; }\n  `,\n\tproperties: {\n\t\tpresence: T.string({\n\t\t\tenum: [\"online\", \"offline\"],\n\t\t\treflect: true,\n\t\t}),\n\t\tring: T.boolean({\n\t\t\tdefaultValue: false,\n\t\t\treflect: true,\n\t\t}),\n\t},\n};\n","metaType": "application/javascript"},"/modules/theme/darkmode.js": {"content": "import html from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"theme-darkmode\",\n\n\textends: \"uix-button\",\n\ticons: [\"moon\", \"sun\"],\n\tproperties: {\n\t\twidth: T.string({ defaultValue: \"fit\" }),\n\t\tdarkmode: T.boolean({ sync: \"local\", defaultValue: true }),\n\t},\n\n\tclick(e) {\n\t\te.stopPropagation();\n\t\tdocument.documentElement.classList.toggle(\"dark\");\n\t\tthis.darkmode = !this.darkmode;\n\t\tthis.icon = !this.darkmode ? \"sun\" : \"moon\";\n\t},\n\n\tconnectedCallback() {\n\t\tthis.icon = this.darkmode ? \"sun\" : \"moon\";\n\t\tif (this.darkmode) document.documentElement.classList.add(\"dark\");\n\t},\n};\n","metaType": "application/javascript"},"/modules/app/dev-only.js": {"content": "import $APP from \"/bootstrap.js\";\n\nexport default {\n\ttag: \"app-dev-only\",\n\n\tconnectedCallback() {\n\t\tif ($APP.settings.dev) {\n\t\t\tconst template = this.querySelector(\"template\");\n\t\t\tif (template) {\n\t\t\t\tthis.append(template.content.cloneNode(true));\n\t\t\t}\n\t\t}\n\t},\n};\n","metaType": "application/javascript"},"/modules/icon-lucide/lucide/trash.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 6h18m-2 0v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6m3 0V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"/></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/x.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 6L6 18M6 6l12 12\"/></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/plus.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h14m-7-7v14\"/></svg>","metaType": "image/svg+xml"},"/modules/p2p/button.js": {"content": "import $APP from \"/bootstrap.js\";\nimport Controller from \"/modules/mvc/controller/frontend.js\";\nimport html from \"/modules/mvc/view/html/index.js\";\nimport Trystero from \"/modules/p2p/trystero.js\";\nimport T from \"/modules/types/index.js\";\n\nconst eventHandlers = {\n\tSYNC_DATA_OP: ({ payload }) => {\n\t\tconsole.log({ payload });\n\t\tController.backend(\"P2P:LOAD_DATA_OP\", payload);\n\t},\n\tREQUEST_TO_JOIN: ({ payload, peerId, component }) => {\n\t\tconst { deviceId } = payload;\n\t\tconsole.log(\n\t\t\t`Received join request from peer ${peerId} with device ID ${deviceId}`,\n\t\t);\n\n\t\tconst isKnownDevice = component.currentApp?.connections?.some(\n\t\t\t(conn) => conn.deviceId === deviceId,\n\t\t);\n\n\t\tif (isKnownDevice) {\n\t\t\tconsole.log(`Auto-approving known device: ${deviceId}`);\n\t\t\tcomponent.projectRoom.sendEvent({ type: \"RECONNECT_APPROVED\" }, peerId);\n\t\t} else {\n\t\t\tconsole.log(\n\t\t\t\t`Device ${deviceId} is not trusted. Awaiting manual approval.`,\n\t\t\t);\n\t\t\tif (component.connectionRequests.some((req) => req.peerId === peerId))\n\t\t\t\treturn;\n\t\t\tcomponent.connectionRequests = [\n\t\t\t\t...component.connectionRequests,\n\t\t\t\t{ peerId, deviceId },\n\t\t\t];\n\t\t}\n\t},\n\tJOIN_APPROVED: async ({ payload, peerId }) => {\n\t\tconsole.log(`Join request approved by ${peerId}. Receiving DB dump.`);\n\t\tawait Controller.backend(\"P2P:JOIN_APP\", payload);\n\t\twindow.location.reload();\n\t},\n\tRECONNECT_APPROVED: ({ peerId }) => {\n\t\tconsole.log(`Reconnection approved by ${peerId}.`);\n\t\talert(\"Reconnected to project successfully!\");\n\t},\n\tJOIN_DENIED: ({ peerId, component }) => {\n\t\tconsole.log(`Join request denied by ${peerId}.`);\n\t\talert(\"Your request to join the project was denied. Leaving room.\");\n\t\tcomponent.projectRoom?.room.leave();\n\t\tcomponent.projectRoom = null;\n\t},\n\tDATA_OPERATION: ({ payload, peerId }) => {\n\t\tconsole.log(`Received DATA_OPERATION from peer ${peerId}:`, payload);\n\t},\n};\n\nexport default {\n\ttag: \"p2p-button\",\n\n\tproperties: {\n\t\tapps: T.array({ defaultValue: [] }),\n\t\tcurrentApp: T.object({ defaultValue: null }),\n\t\tprojectRoom: T.object(),\n\t\tpeerCount: T.number({ defaultValue: 0 }),\n\t\tconnectionRequests: T.array({ defaultValue: [], sync: \"local\" }),\n\t\tjoinAppId: T.string({ defaultValue: \"\" }),\n\t\tisLoading: T.boolean({ defaultValue: true }),\n\t},\n\n\tasync firstUpdated() {\n\t\tthis.isLoading = true;\n\t\t[this.apps, this.currentApp] = await Promise.all([\n\t\t\tController.backend(\"LIST_APPS\"),\n\t\t\tController.backend(\"GET_CURRENT_APP\"),\n\t\t]);\n\t\tthis.isLoading = false;\n\n\t\tif (this.currentApp?.id && Trystero) {\n\t\t\tthis._joinRoom(this.currentApp.id, true);\n\t\t}\n\t},\n\n\t_joinRoom(appId, isMember = false) {\n\t\tif (!appId || !Trystero) return;\n\t\tconsole.log(\"JOIN ROOM\", appId);\n\t\tthis.peerCount = 0;\n\t\tthis.connectionRequests = [];\n\n\t\tconst room = Trystero.joinRoom({ appId }, appId);\n\t\tconst [sendEvent, onEvent] = room.makeAction(\"event\");\n\t\tthis.sendEvent = sendEvent;\n\t\tonEvent((event, peerId) => {\n\t\t\tconst handler = eventHandlers[event.type];\n\t\t\tif (handler) {\n\t\t\t\thandler({ payload: event.payload, peerId, component: this });\n\t\t\t} else {\n\t\t\t\tconsole.warn(`No handler found for event type: ${event.type}`);\n\t\t\t}\n\t\t});\n\n\t\troom.onPeerJoin((peerId) => {\n\t\t\tthis.peerCount = Object.keys(room.getPeers()).length;\n\t\t\tif (!isMember) {\n\t\t\t\tconsole.log(`Requesting to join room ${appId}...`);\n\t\t\t\tsendEvent({\n\t\t\t\t\ttype: \"REQUEST_TO_JOIN\",\n\t\t\t\t\tpayload: { deviceId: $APP.about.device.id },\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\troom.onPeerLeave((peerId) => {\n\t\t\tthis.peerCount = Object.keys(room.getPeers()).length;\n\t\t\tthis.connectionRequests = this.connectionRequests.filter(\n\t\t\t\t(req) => req.peerId !== peerId,\n\t\t\t);\n\t\t});\n\n\t\tthis.projectRoom = { room, sendEvent, appId };\n\t},\n\n\tasync _handleApproveRequest(request) {\n\t\tconsole.log(\n\t\t\t`Approving request for peer ${request.peerId} with device ${request.deviceId}`,\n\t\t);\n\n\t\tawait Controller.backend(\"P2P:REGISTER_PEER_CONNECTION\", {\n\t\t\tappId: this.currentApp.id,\n\t\t\tdeviceId: request.deviceId,\n\t\t});\n\n\t\tconst dump = await Controller.backend(\"GET_DB_DUMP\");\n\t\tthis.projectRoom.sendEvent(\n\t\t\t{ type: \"JOIN_APPROVED\", payload: { app: this.currentApp, db: dump } },\n\t\t\trequest.peerId,\n\t\t);\n\n\t\tif (\n\t\t\t!this.currentApp.connections?.some((c) => c.deviceId === request.deviceId)\n\t\t) {\n\t\t\tthis.currentApp.connections = [\n\t\t\t\t...(this.currentApp.connections || []),\n\t\t\t\t{ deviceId: request.deviceId },\n\t\t\t];\n\t\t}\n\n\t\tthis.connectionRequests = this.connectionRequests.filter(\n\t\t\t(r) => r.peerId !== request.peerId,\n\t\t);\n\t},\n\n\t_handleDenyRequest(request) {\n\t\tconsole.log(`Denying request from ${request.peerId}`);\n\t\tthis.projectRoom.sendEvent(\n\t\t\t{ type: \"JOIN_DENIED\", payload: {} },\n\t\t\trequest.peerId,\n\t\t);\n\t\tthis.connectionRequests = this.connectionRequests.filter(\n\t\t\t(r) => r.peerId !== request.peerId,\n\t\t);\n\t},\n\n\t_handleJoinApp() {\n\t\tconst appId = this.joinAppId;\n\t\tif (appId) {\n\t\t\tthis._joinRoom(appId, false);\n\t\t}\n\t},\n\n\tasync _handleSelectApp(appId) {\n\t\tif (appId && appId !== this.currentApp?.id) {\n\t\t\tawait Controller.backend(\"SELECT_APP\", { appId });\n\t\t\twindow.location.reload();\n\t\t}\n\t},\n\n\tasync _handleCreateApp() {\n\t\tawait Controller.backend(\"CREATE_APP\");\n\t\twindow.location.reload();\n\t},\n\n\t_handleSendDataOperation() {\n\t\tif (!this.projectRoom || this.peerCount === 0) return;\n\t\tconst samplePayload = {\n\t\t\ttimestamp: Date.now(),\n\t\t\toperation: \"CREATE_ITEM\",\n\t\t\tdata: {\n\t\t\t\tid: `item-${Math.random().toString(36).substr(2, 9)}`,\n\t\t\t\tvalue: \"hello world\",\n\t\t\t},\n\t\t};\n\t\tthis.projectRoom.sendEvent({\n\t\t\ttype: \"DATA_OPERATION\",\n\t\t\tpayload: samplePayload,\n\t\t});\n\t},\n\tconnectedCallback() {\n\t\t$APP.p2p.on(\"SEND_DATA_OP\", (payload) => {\n\t\t\tif (this.sendEvent) this.sendEvent({ type: \"SYNC_DATA_OP\", payload });\n\t\t});\n\t\tController.backend(\"START_SYNC_DATA\");\n\t},\n\tdisconnectedCallback() {\n\t\tController.backend(\"STOP_SYNC_DATA\");\n\t},\n\trender() {\n\t\tconst isConnected = this.peerCount > 0;\n\t\tconst statusText = isConnected\n\t\t\t? `Connected to ${this.peerCount} peer(s)`\n\t\t\t: \"Offline\";\n\n\t\tconst modalContent = html`\n      <div class=\"flex flex-col gap-4 p-4 w-[640px]\">\n        <p class=\"text-lg\">Project ID: <strong class=\"font-mono bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">#${this.currentApp?.id}</strong></p>\n        <p class=\"text-sm text-gray-500 flex items-center gap-2\">Status: ${statusText} <uix-icon name=${isConnected ? \"users\" : \"cloud-off\"}></uix-icon></p>\n        \n        ${\n\t\t\t\t\tthis.projectRoom\n\t\t\t\t\t\t? html`\n          <hr class=\"my-2 border-gray-200 dark:border-gray-700\" />\n          <h6 class=\"font-semibold\">Test Data Sync</h6>\n          <uix-button\n            class=\"rounded-md bg-gray-200 dark:bg-gray-700 text-black dark:text-white hover:bg-gray-300 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            label=\"Send Data Operation\"\n            icon=\"send\"\n            .click=${this._handleSendDataOperation.bind(this)}\n            .disabled=${!isConnected}\n            title=${!isConnected ? \"Must be connected to another peer to send data\" : \"Send a sample data operation\"}\n          ></uix-button>\n        `\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\n        ${\n\t\t\t\t\tthis.connectionRequests.length > 0\n\t\t\t\t\t\t? html`\n          <hr class=\"my-2 border-gray-200 dark:border-gray-700\" />\n          <h6 class=\"font-semibold\">Connection Requests</h6>\n          <div class=\"flex flex-col gap-2\">\n            ${this.connectionRequests.map(\n\t\t\t\t\t\t\t(req) => html`\n              <div class=\"p-2 bg-gray-100 dark:bg-gray-800 rounded-md flex flex-col gap-2\">\n                <p>Request from: <strong class=\"font-mono\">${req.peerId.slice(0, 8)}...</strong></p>\n                <div class=\"flex justify-end gap-2\">\n                  <uix-button class=\"text-xs px-2 py-1 rounded-md bg-red-600 hover:bg-red-700 text-white\" .click=${() => this._handleDenyRequest(req)} label=\"Deny\"></uix-button>\n                  <uix-button class=\"text-xs px-2 py-1 rounded-md bg-green-600 hover:bg-green-700 text-white\" .click=${() => this._handleApproveRequest(req)} label=\"Approve\"></uix-button>\n                </div>\n              </div>\n            `,\n\t\t\t\t\t\t)}\n          </div>\n        `\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\n\n        <hr class=\"my-2 border-gray-200 dark:border-gray-700\" />\n        <h6 class=\"font-semibold\">My Projects</h6>\n        ${\n\t\t\t\t\tthis.isLoading\n\t\t\t\t\t\t? html`<uix-spinner></uix-spinner>`\n\t\t\t\t\t\t: html`\n          <div class=\"flex flex-col gap-2\">\n            ${this.apps.map(\n\t\t\t\t\t\t\t(app) => html`\n              <uix-button\n                class=\"w-full text-left px-3 py-2 rounded-md ${app.id === this.currentApp?.id ? \"bg-blue-600 text-white\" : \"bg-gray-200 dark:bg-gray-700 text-black dark:text-white hover:bg-gray-300 dark:hover:bg-gray-600\"}\"\n                .click=${() => this._handleSelectApp(app.id)}\n                label=${`Project ${app.id.slice(0, 12)}...`}\n              ></uix-button>\n            `,\n\t\t\t\t\t\t)}\n          </div>\n        `\n\t\t\t\t}\n\n        <hr class=\"my-2 border-gray-200 dark:border-gray-700\" />\n        <h6 class=\"font-semibold\">Join a Project</h6>\n        <uix-join class=\"flex\">\n          <uix-input\n            class=\"flex-grow border rounded-md dark:bg-gray-800 dark:border-gray-600\"\n            label=\"Enter Project ID to join\"\n            .bind=${this.prop(\"joinAppId\")}            \n          ></uix-input>\n          <uix-button\n            class=\"px-4 py-2 rounded-md bg-gray-200 dark:bg-gray-700 text-black dark:text-white hover:bg-gray-300 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            .click=${this._handleJoinApp.bind(this)}\n            label=\"Join\"\n            icon=\"log-in\"\n            .disabled=${!this.joinAppId}\n          ></uix-button>\n\t\t\t\t</uix-join>\n\n        <hr class=\"my-2 border-gray-200 dark:border-gray-700\" />\n        <uix-button class=\"w-full px-4 py-2 rounded-md bg-blue-600 hover:bg-blue-700 text-white\" .click=${this._handleCreateApp} label=\"Create New Project\" icon=\"plus\"></uix-button>\n      </div>\n    `;\n\n\t\treturn html`\n        <uix-modal\n          .content=${modalContent}\n          .cta=${html`<uix-button icon=\"wifi\"></uix-button>`}\n        ></uix-modal>\n    `;\n\t},\n};\n","metaType": "application/javascript"},"/modules/icon-lucide/lucide/settings.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></g></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/message-square-text.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2zm-8-7H7m10 4H7\"/></svg>","metaType": "image/svg+xml"},"/modules/uix/overlay/overlay.js": {"content": "import T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-overlay\",\n\n\tproperties: {\n\t\tx: T.string({\n\t\t\tdefaultValue: \"right\",\n\t\t}),\n\t\ty: T.string({\n\t\t\tdefaultValue: \"bottom\",\n\t\t}),\n\t},\n};\n","metaType": "application/javascript"},"/modules/uix/display/circle.js": {"content": "import { css } from \"/modules/mvc/view/html/index.js\";\nimport T from \"/modules/types/index.js\";\n\nexport default {\n\ttag: \"uix-circle\",\n\n\tcss: css`\n    &:not([solid]) {\n      background-color: transparent;\n    }\n  `,\n\tclass:\n\t\t\"inline-block align-middle box-border w-4 h-4 rounded-full border-1 border-solid border-gray-900\",\n\tproperties: {\n\t\tsolid: T.boolean({\n\t\t\tdefaultValue: false,\n\t\t}),\n\t},\n};\n","metaType": "application/javascript"},"/modules/p2p/trystero.js": {"content": "const { floor: e, random: r } = Math,\n\tt = \"Trystero\",\n\tn = (e, r) => Array(e).fill().map(r),\n\ta = \"0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\",\n\to = (t) => n(t, () => a[e(62 * r())]).join(\"\"),\n\ts = o(20),\n\ti = Promise.all.bind(Promise),\n\tc = \"undefined\" != typeof window,\n\t{ entries: l, fromEntries: d, keys: f } = Object,\n\tu = () => {},\n\tp = (e) => Error(`${t}: ${e}`),\n\ty = new TextEncoder(),\n\tm = new TextDecoder(),\n\tw = (e) => y.encode(e),\n\tg = (e) => m.decode(e),\n\th = (...e) => e.join(\"@\"),\n\tb = JSON.stringify,\n\tk = JSON.parse,\n\tv = {},\n\tP = \"AES-GCM\",\n\tT = {},\n\tA = async (e) =>\n\t\tT[e] ||\n\t\t(T[e] = Array.from(\n\t\t\tnew Uint8Array(await crypto.subtle.digest(\"SHA-1\", w(e))),\n\t\t)\n\t\t\t.map((e) => e.toString(36))\n\t\t\t.join(\"\")),\n\tS = async (e, r) => {\n\t\tconst t = crypto.getRandomValues(new Uint8Array(16));\n\t\treturn (\n\t\t\tt.join(\",\") +\n\t\t\t\"$\" +\n\t\t\t((n = await crypto.subtle.encrypt({ name: P, iv: t }, await e, w(r))),\n\t\t\tbtoa(String.fromCharCode.apply(null, new Uint8Array(n))))\n\t\t);\n\t\tvar n;\n\t},\n\tD = async (e, r) => {\n\t\tconst [t, n] = r.split(\"$\");\n\t\treturn g(\n\t\t\tawait crypto.subtle.decrypt(\n\t\t\t\t{ name: P, iv: new Uint8Array(t.split(\",\")) },\n\t\t\t\tawait e,\n\t\t\t\t((e) => {\n\t\t\t\t\tconst r = atob(e);\n\t\t\t\t\treturn new Uint8Array(r.length).map((e, t) => r.charCodeAt(t)).buffer;\n\t\t\t\t})(n),\n\t\t\t),\n\t\t);\n\t},\n\tL = \"icegatheringstatechange\",\n\tI = \"offer\";\nvar $ = (e, { rtcConfig: r, rtcPolyfill: t, turnConfig: n }) => {\n\tconst a = new (t || RTCPeerConnection)({\n\t\t\ticeServers: E.concat(n || []),\n\t\t\t...r,\n\t\t}),\n\t\to = {};\n\tlet s = !1,\n\t\tc = !1,\n\t\tl = null;\n\tconst d = (e) => {\n\t\t\t(e.binaryType = \"arraybuffer\"),\n\t\t\t\t(e.bufferedAmountLowThreshold = 65535),\n\t\t\t\t(e.onmessage = (e) => o.data?.(e.data)),\n\t\t\t\t(e.onopen = () => o.connect?.()),\n\t\t\t\t(e.onclose = () => o.close?.()),\n\t\t\t\t(e.onerror = (e) => o.error?.(e));\n\t\t},\n\t\tf = (e) =>\n\t\t\tPromise.race([\n\t\t\t\tnew Promise((r) => {\n\t\t\t\t\tconst t = () => {\n\t\t\t\t\t\t\"complete\" === e.iceGatheringState &&\n\t\t\t\t\t\t\t(e.removeEventListener(L, t), r());\n\t\t\t\t\t};\n\t\t\t\t\te.addEventListener(L, t), t();\n\t\t\t\t}),\n\t\t\t\tnew Promise((e) => setTimeout(e, 5e3)),\n\t\t\t]).then(() => ({\n\t\t\t\ttype: e.localDescription.type,\n\t\t\t\tsdp: e.localDescription.sdp.replace(/a=ice-options:trickle\\s\\n/g, \"\"),\n\t\t\t}));\n\treturn (\n\t\te\n\t\t\t? ((l = a.createDataChannel(\"data\")), d(l))\n\t\t\t: (a.ondatachannel = ({ channel: e }) => {\n\t\t\t\t\t(l = e), d(e);\n\t\t\t\t}),\n\t\t(a.onnegotiationneeded = async () => {\n\t\t\ttry {\n\t\t\t\t(s = !0), await a.setLocalDescription();\n\t\t\t\tconst e = await f(a);\n\t\t\t\to.signal?.(e);\n\t\t\t} catch (e) {\n\t\t\t\to.error?.(e);\n\t\t\t} finally {\n\t\t\t\ts = !1;\n\t\t\t}\n\t\t}),\n\t\t(a.onconnectionstatechange = () => {\n\t\t\t[\"disconnected\", \"failed\", \"closed\"].includes(a.connectionState) &&\n\t\t\t\to.close?.();\n\t\t}),\n\t\t(a.ontrack = (e) => {\n\t\t\to.track?.(e.track, e.streams[0]), o.stream?.(e.streams[0]);\n\t\t}),\n\t\t(a.onremovestream = (e) => o.stream?.(e.stream)),\n\t\te && (a.canTrickleIceCandidates || a.onnegotiationneeded()),\n\t\t{\n\t\t\tcreated: Date.now(),\n\t\t\tconnection: a,\n\t\t\tget channel() {\n\t\t\t\treturn l;\n\t\t\t},\n\t\t\tget isDead() {\n\t\t\t\treturn \"closed\" === a.connectionState;\n\t\t\t},\n\t\t\tasync signal(r) {\n\t\t\t\tif (\"open\" !== l?.readyState || r.sdp?.includes(\"a=rtpmap\"))\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (r.type === I) {\n\t\t\t\t\t\t\tif (s || (\"stable\" !== a.signalingState && !c)) {\n\t\t\t\t\t\t\t\tif (e) return;\n\t\t\t\t\t\t\t\tawait i([\n\t\t\t\t\t\t\t\t\ta.setLocalDescription({ type: \"rollback\" }),\n\t\t\t\t\t\t\t\t\ta.setRemoteDescription(r),\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t} else await a.setRemoteDescription(r);\n\t\t\t\t\t\t\tawait a.setLocalDescription();\n\t\t\t\t\t\t\tconst t = await f(a);\n\t\t\t\t\t\t\treturn o.signal?.(t), t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\"answer\" === r.type) {\n\t\t\t\t\t\t\tc = !0;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait a.setRemoteDescription(r);\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tc = !1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\to.error?.(e);\n\t\t\t\t\t}\n\t\t\t},\n\t\t\tsendData(e) {\n\t\t\t\treturn l.send(e);\n\t\t\t},\n\t\t\tdestroy() {\n\t\t\t\tl?.close(), a.close(), (s = !1), (c = !1);\n\t\t\t},\n\t\t\tsetHandlers(e) {\n\t\t\t\treturn Object.assign(o, e);\n\t\t\t},\n\t\t\tofferPromise: e\n\t\t\t\t? new Promise(\n\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t(o.signal = (r) => {\n\t\t\t\t\t\t\t\tr.type === I && e(r);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t: Promise.resolve(),\n\t\t\taddStream(e) {\n\t\t\t\treturn e.getTracks().forEach((r) => a.addTrack(r, e));\n\t\t\t},\n\t\t\tremoveStream(e) {\n\t\t\t\treturn a\n\t\t\t\t\t.getSenders()\n\t\t\t\t\t.filter((r) => e.getTracks().includes(r.track))\n\t\t\t\t\t.forEach((e) => a.removeTrack(e));\n\t\t\t},\n\t\t\taddTrack(e, r) {\n\t\t\t\treturn a.addTrack(e, r);\n\t\t\t},\n\t\t\tremoveTrack(e) {\n\t\t\t\tconst r = a.getSenders().find((r) => r.track === e);\n\t\t\t\tr && a.removeTrack(r);\n\t\t\t},\n\t\t\treplaceTrack(e, r) {\n\t\t\t\tconst t = a.getSenders().find((r) => r.track === e);\n\t\t\t\tif (t) return t.replaceTrack(r);\n\t\t\t},\n\t\t}\n\t);\n};\nconst E = [\n\t\t...n(3, (e, r) => `stun:stun${r || \"\"}.l.google.com:19302`),\n\t\t\"stun:stun.cloudflare.com:3478\",\n\t].map((e) => ({ urls: e })),\n\tC = Object.getPrototypeOf(Uint8Array),\n\tU = 16369,\n\t_ = 255,\n\tO = \"bufferedamountlow\",\n\tj = (e) => \"@_\" + e;\nconst H = {},\n\tJ = {},\n\tM = {},\n\tR = {},\n\tx = {},\n\tq = {},\n\tB = {},\n\tG = {},\n\tN = async (e) => {\n\t\tif (J[e]) return J[e];\n\t\tconst r = (await A(e)).slice(0, 20);\n\t\treturn (J[e] = r), (M[r] = e), r;\n\t},\n\tz = async (e, r, t) =>\n\t\te.send(b({ action: \"announce\", info_hash: await N(r), peer_id: s, ...t })),\n\tK = (e, r, n) =>\n\t\tconsole.warn(\n\t\t\t`${t}: torrent tracker ${n ? \"failure\" : \"warning\"} from ${e} - ${r}`,\n\t\t),\n\tV = (({ init: e, subscribe: r, announce: a }) => {\n\t\tconst o = {};\n\t\tlet y,\n\t\t\tm,\n\t\t\tv,\n\t\t\tT = !1;\n\t\treturn (L, I, E) => {\n\t\t\tconst { appId: H } = L;\n\t\t\tif (o[H]?.[I]) return o[H][I];\n\t\t\tconst J = {},\n\t\t\t\tM = {},\n\t\t\t\tR = h(t, H, I),\n\t\t\t\tx = A(R),\n\t\t\t\tq = A(h(R, s)),\n\t\t\t\tB = (async (e, r, t) =>\n\t\t\t\t\tcrypto.subtle.importKey(\n\t\t\t\t\t\t\"raw\",\n\t\t\t\t\t\tawait crypto.subtle.digest(\n\t\t\t\t\t\t\t{ name: \"SHA-256\" },\n\t\t\t\t\t\t\tw(`${e}:${r}:${t}`),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{ name: P },\n\t\t\t\t\t\t!1,\n\t\t\t\t\t\t[\"encrypt\", \"decrypt\"],\n\t\t\t\t\t))(L.password || \"\", H, I),\n\t\t\t\tG = (e) => async (r) => ({ type: r.type, sdp: await e(B, r.sdp) }),\n\t\t\t\tN = G(D),\n\t\t\t\tz = G(S),\n\t\t\t\tK = () => $(!0, L),\n\t\t\t\tV = (e, r, t) => {\n\t\t\t\t\tM[r]\n\t\t\t\t\t\t? M[r] !== e && e.destroy()\n\t\t\t\t\t\t: ((M[r] = e),\n\t\t\t\t\t\t\tre(e, r),\n\t\t\t\t\t\t\tJ[r]?.forEach((e, r) => {\n\t\t\t\t\t\t\t\tr !== t && e.destroy();\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tdelete J[r]);\n\t\t\t\t},\n\t\t\t\tW = (e, r) => {\n\t\t\t\t\tM[r] === e && delete M[r];\n\t\t\t\t},\n\t\t\t\tF = (e) => (\n\t\t\t\t\tm.push(...n(e, K)),\n\t\t\t\t\ti(\n\t\t\t\t\t\tm\n\t\t\t\t\t\t\t.splice(0, e)\n\t\t\t\t\t\t\t.map((e) =>\n\t\t\t\t\t\t\t\te.offerPromise.then(z).then((r) => ({ peer: e, offer: r })),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tQ = (e, r) =>\n\t\t\t\t\tE?.({\n\t\t\t\t\t\terror: `incorrect password (${L.password}) when decrypting ${r}`,\n\t\t\t\t\t\tappId: H,\n\t\t\t\t\t\tpeerId: e,\n\t\t\t\t\t\troomId: I,\n\t\t\t\t\t}),\n\t\t\t\tX = (e) => async (r, t, n) => {\n\t\t\t\t\tconst [a, o] = await i([x, q]);\n\t\t\t\t\tif (r !== a && r !== o) return;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpeerId: c,\n\t\t\t\t\t\toffer: l,\n\t\t\t\t\t\tanswer: d,\n\t\t\t\t\t\tpeer: f,\n\t\t\t\t\t} = \"string\" == typeof t ? k(t) : t;\n\t\t\t\t\tif (c !== s && !M[c])\n\t\t\t\t\t\tif (!c || l || d) {\n\t\t\t\t\t\t\tif (l) {\n\t\t\t\t\t\t\t\tconst r = J[c]?.[e];\n\t\t\t\t\t\t\t\tif (r && s > c) return;\n\t\t\t\t\t\t\t\tconst t = $(!1, L);\n\t\t\t\t\t\t\t\tlet a;\n\t\t\t\t\t\t\t\tt.setHandlers({\n\t\t\t\t\t\t\t\t\tconnect() {\n\t\t\t\t\t\t\t\t\t\treturn V(t, c, e);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tclose() {\n\t\t\t\t\t\t\t\t\t\treturn W(t, c);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\ta = await N(l);\n\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\treturn void Q(c, \"offer\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (t.isDead) return;\n\t\t\t\t\t\t\t\tconst [o, d] = await i([A(h(R, c)), t.signal(a)]);\n\t\t\t\t\t\t\t\tn(o, b({ peerId: s, answer: await z(d) }));\n\t\t\t\t\t\t\t} else if (d) {\n\t\t\t\t\t\t\t\tlet r;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tr = await N(d);\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\treturn void Q(c, \"answer\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (f)\n\t\t\t\t\t\t\t\t\tf.setHandlers({\n\t\t\t\t\t\t\t\t\t\tconnect() {\n\t\t\t\t\t\t\t\t\t\t\treturn V(f, c, e);\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tclose() {\n\t\t\t\t\t\t\t\t\t\t\treturn W(f, c);\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tf.signal(r);\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tconst t = J[c]?.[e];\n\t\t\t\t\t\t\t\t\tt && !t.isDead && t.signal(r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (J[c]?.[e]) return;\n\t\t\t\t\t\t\tconst [[{ peer: r, offer: t }], a] = await i([F(1), A(h(R, c))]);\n\t\t\t\t\t\t\t(J[c] ||= []),\n\t\t\t\t\t\t\t\t(J[c][e] = r),\n\t\t\t\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t((e, r) => {\n\t\t\t\t\t\t\t\t\t\t\tif (M[e]) return;\n\t\t\t\t\t\t\t\t\t\t\tconst t = J[e]?.[r];\n\t\t\t\t\t\t\t\t\t\t\tt && (delete J[e][r], t.destroy());\n\t\t\t\t\t\t\t\t\t\t})(c, e),\n\t\t\t\t\t\t\t\t\t0.9 * Y[e],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tr.setHandlers({\n\t\t\t\t\t\t\t\t\tconnect() {\n\t\t\t\t\t\t\t\t\t\treturn V(r, c, e);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tclose() {\n\t\t\t\t\t\t\t\t\t\treturn W(r, c);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tn(a, b({ peerId: s, offer: t }));\n\t\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tif (!L) throw p(\"requires a config map as the first argument\");\n\t\t\tif (!H && !L.firebaseApp) throw p(\"config map is missing appId field\");\n\t\t\tif (!I) throw p(\"roomId argument required\");\n\t\t\tif (!T) {\n\t\t\t\tconst r = e(L);\n\t\t\t\t(m = n(20, K)),\n\t\t\t\t\t(y = Array.isArray(r) ? r : [r]),\n\t\t\t\t\t(T = !0),\n\t\t\t\t\t(v = setInterval(\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t(m = m.filter((e) => {\n\t\t\t\t\t\t\t\tconst r = Date.now() - e.created < 57333;\n\t\t\t\t\t\t\t\treturn r || e.destroy(), r;\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t59052.99,\n\t\t\t\t\t));\n\t\t\t}\n\t\t\tconst Y = y.map(() => 5333),\n\t\t\t\tZ = [],\n\t\t\t\tee = y.map(async (e, t) => r(await e, await x, await q, X(t), F));\n\t\t\ti([x, q]).then(([e, r]) => {\n\t\t\t\tconst t = async (n, o) => {\n\t\t\t\t\tconst s = await a(n, e, r);\n\t\t\t\t\t\"number\" == typeof s && (Y[o] = s),\n\t\t\t\t\t\t(Z[o] = setTimeout(() => t(n, o), Y[o]));\n\t\t\t\t};\n\t\t\t\tee.forEach(async (e, r) => {\n\t\t\t\t\tawait e, t(await y[r], r);\n\t\t\t\t});\n\t\t\t});\n\t\t\tlet re = u;\n\t\t\treturn (\n\t\t\t\t(o[H] ||= {}),\n\t\t\t\t(o[H][I] = ((e, r, a) => {\n\t\t\t\t\tconst o = {},\n\t\t\t\t\t\ts = {},\n\t\t\t\t\t\ty = {},\n\t\t\t\t\t\tm = {},\n\t\t\t\t\t\th = {},\n\t\t\t\t\t\tv = {},\n\t\t\t\t\t\tP = {},\n\t\t\t\t\t\tT = {\n\t\t\t\t\t\t\tonPeerJoin: u,\n\t\t\t\t\t\t\tonPeerLeave: u,\n\t\t\t\t\t\t\tonPeerStream: u,\n\t\t\t\t\t\t\tonPeerTrack: u,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA = (e, r) =>\n\t\t\t\t\t\t\t(e ? (Array.isArray(e) ? e : [e]) : f(o)).flatMap((e) => {\n\t\t\t\t\t\t\t\tconst n = o[e];\n\t\t\t\t\t\t\t\treturn n\n\t\t\t\t\t\t\t\t\t? r(e, n)\n\t\t\t\t\t\t\t\t\t: (console.warn(`${t}: no peer with id ${e} found`), []);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tS = (e) => {\n\t\t\t\t\t\t\to[e] &&\n\t\t\t\t\t\t\t\t(delete o[e], delete m[e], delete h[e], T.onPeerLeave(e), r(e));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tD = (e) => {\n\t\t\t\t\t\t\tif (s[e]) return y[e];\n\t\t\t\t\t\t\tif (!e) throw p(\"action type argument is required\");\n\t\t\t\t\t\t\tconst r = w(e);\n\t\t\t\t\t\t\tif (r.byteLength > 12)\n\t\t\t\t\t\t\t\tthrow p(\n\t\t\t\t\t\t\t\t\t`action type string \"${e}\" (${r.byteLength}b) exceeds byte limit (12). Hint: choose a shorter name.`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst t = new Uint8Array(12);\n\t\t\t\t\t\t\tt.set(r);\n\t\t\t\t\t\t\tlet a = 0;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t(s[e] = {\n\t\t\t\t\t\t\t\t\tonComplete: u,\n\t\t\t\t\t\t\t\t\tonProgress: u,\n\t\t\t\t\t\t\t\t\tsetOnComplete: (r) => (s[e] = { ...s[e], onComplete: r }),\n\t\t\t\t\t\t\t\t\tsetOnProgress: (r) => (s[e] = { ...s[e], onProgress: r }),\n\t\t\t\t\t\t\t\t\tasync send(e, r, s, c) {\n\t\t\t\t\t\t\t\t\t\tif (s && \"object\" != typeof s)\n\t\t\t\t\t\t\t\t\t\t\tthrow p(\"action meta argument must be an object\");\n\t\t\t\t\t\t\t\t\t\tconst l = typeof e;\n\t\t\t\t\t\t\t\t\t\tif (\"undefined\" === l)\n\t\t\t\t\t\t\t\t\t\t\tthrow p(\"action data cannot be undefined\");\n\t\t\t\t\t\t\t\t\t\tconst d = \"string\" !== l,\n\t\t\t\t\t\t\t\t\t\t\tf = e instanceof Blob,\n\t\t\t\t\t\t\t\t\t\t\tu = f || e instanceof ArrayBuffer || e instanceof C;\n\t\t\t\t\t\t\t\t\t\tif (s && !u)\n\t\t\t\t\t\t\t\t\t\t\tthrow p(\n\t\t\t\t\t\t\t\t\t\t\t\t\"action meta argument can only be used with binary data\",\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst y = u\n\t\t\t\t\t\t\t\t\t\t\t\t? new Uint8Array(f ? await e.arrayBuffer() : e)\n\t\t\t\t\t\t\t\t\t\t\t\t: w(d ? b(e) : e),\n\t\t\t\t\t\t\t\t\t\t\tm = s ? w(b(s)) : null,\n\t\t\t\t\t\t\t\t\t\t\tg = Math.ceil(y.byteLength / U) + (s ? 1 : 0) || 1,\n\t\t\t\t\t\t\t\t\t\t\th = n(g, (e, r) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst n = r === g - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\to = s && 0 === r,\n\t\t\t\t\t\t\t\t\t\t\t\t\ti = new Uint8Array(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t15 +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? m.byteLength\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? y.byteLength - U * (g - (s ? 2 : 1))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: U),\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.set(t),\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.set([a], 12),\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.set([n | (o << 1) | (u << 2) | (d << 3)], 13),\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.set([Math.round(((r + 1) / g) * _)], 14),\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.set(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? m\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: y.subarray((r - 1) * U, r * U)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: y.subarray(r * U, (r + 1) * U),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\ti\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t(a = (a + 1) & _),\n\t\t\t\t\t\t\t\t\t\t\ti(\n\t\t\t\t\t\t\t\t\t\t\t\tA(r, async (e, r) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst { channel: t } = r;\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet n = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (; n < g; ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst a = h[n];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(t.bufferedAmount >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.bufferedAmountLowThreshold &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(await new Promise((e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst r = () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.removeEventListener(O, r), e();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.addEventListener(O, r);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!o[e])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tr.sendData(a), n++, c?.(a[14] / _, e, s);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t(y[e] ||= [s[e].send, s[e].setOnComplete, s[e].setOnProgress])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tL = (e, r) => {\n\t\t\t\t\t\t\tconst n = new Uint8Array(r),\n\t\t\t\t\t\t\t\ta = g(n.subarray(0, 12)).replaceAll(\"\\0\", \"\"),\n\t\t\t\t\t\t\t\t[o] = n.subarray(12, 13),\n\t\t\t\t\t\t\t\t[i] = n.subarray(13, 14),\n\t\t\t\t\t\t\t\t[c] = n.subarray(14, 15),\n\t\t\t\t\t\t\t\tl = n.subarray(15),\n\t\t\t\t\t\t\t\td = !!(1 & i),\n\t\t\t\t\t\t\t\tf = !!(2 & i),\n\t\t\t\t\t\t\t\tu = !!(4 & i),\n\t\t\t\t\t\t\t\tp = !!(8 & i);\n\t\t\t\t\t\t\tif (!s[a])\n\t\t\t\t\t\t\t\treturn void console.warn(\n\t\t\t\t\t\t\t\t\t`${t}: received message with unregistered type (${a})`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t(m[e] ||= {}), (m[e][a] ||= {});\n\t\t\t\t\t\t\tconst y = (m[e][a][o] ||= { chunks: [] });\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(f ? (y.meta = k(g(l))) : y.chunks.push(l),\n\t\t\t\t\t\t\t\ts[a].onProgress(c / _, e, y.meta),\n\t\t\t\t\t\t\t\t!d)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tconst w = new Uint8Array(\n\t\t\t\t\t\t\t\ty.chunks.reduce((e, r) => e + r.byteLength, 0),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(y.chunks.reduce((e, r) => (w.set(r, e), e + r.byteLength), 0),\n\t\t\t\t\t\t\t\tdelete m[e][a][o],\n\t\t\t\t\t\t\t\tu)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\ts[a].onComplete(w, e, y.meta);\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconst r = g(w);\n\t\t\t\t\t\t\t\ts[a].onComplete(p ? k(r) : r, e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tI = async () => {\n\t\t\t\t\t\t\tawait N(\"\"),\n\t\t\t\t\t\t\t\tawait new Promise((e) => setTimeout(e, 99)),\n\t\t\t\t\t\t\t\tl(o).forEach(([e, r]) => {\n\t\t\t\t\t\t\t\t\tr.destroy(), delete o[e];\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\ta();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[$, E] = D(j(\"ping\")),\n\t\t\t\t\t\t[H, J] = D(j(\"pong\")),\n\t\t\t\t\t\t[M, R] = D(j(\"signal\")),\n\t\t\t\t\t\t[x, q] = D(j(\"stream\")),\n\t\t\t\t\t\t[B, G] = D(j(\"track\")),\n\t\t\t\t\t\t[N, z] = D(j(\"leave\"));\n\t\t\t\t\treturn (\n\t\t\t\t\t\te((e, r) => {\n\t\t\t\t\t\t\to[r] ||\n\t\t\t\t\t\t\t\t((o[r] = e),\n\t\t\t\t\t\t\t\te.setHandlers({\n\t\t\t\t\t\t\t\t\tdata: (e) => L(r, e),\n\t\t\t\t\t\t\t\t\tstream(e) {\n\t\t\t\t\t\t\t\t\t\tT.onPeerStream(e, r, v[r]), delete v[r];\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttrack(e, t) {\n\t\t\t\t\t\t\t\t\t\tT.onPeerTrack(e, t, r, P[r]), delete P[r];\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsignal: (e) => M(e, r),\n\t\t\t\t\t\t\t\t\tclose: () => S(r),\n\t\t\t\t\t\t\t\t\terror(e) {\n\t\t\t\t\t\t\t\t\t\tconsole.error(e), S(r);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tT.onPeerJoin(r),\n\t\t\t\t\t\t\t\te.drainEarlyData?.((e) => L(r, e)));\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tE((e, r) => H(\"\", r)),\n\t\t\t\t\t\tJ((e, r) => {\n\t\t\t\t\t\t\th[r]?.(), delete h[r];\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tR((e, r) => o[r]?.signal(e)),\n\t\t\t\t\t\tq((e, r) => (v[r] = e)),\n\t\t\t\t\t\tG((e, r) => (P[r] = e)),\n\t\t\t\t\t\tz((e, r) => S(r)),\n\t\t\t\t\t\tc && addEventListener(\"beforeunload\", I),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmakeAction: D,\n\t\t\t\t\t\t\tleave: I,\n\t\t\t\t\t\t\tasync ping(e) {\n\t\t\t\t\t\t\t\tif (!e) throw p(\"ping() must be called with target peer ID\");\n\t\t\t\t\t\t\t\tconst r = Date.now();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t$(\"\", e), await new Promise((r) => (h[e] = r)), Date.now() - r\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetPeers: () => d(l(o).map(([e, r]) => [e, r.connection])),\n\t\t\t\t\t\t\taddStream: (e, r, t) =>\n\t\t\t\t\t\t\t\tA(r, async (r, n) => {\n\t\t\t\t\t\t\t\t\tt && (await x(t, r)), n.addStream(e);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tremoveStream: (e, r) => A(r, (r, t) => t.removeStream(e)),\n\t\t\t\t\t\t\taddTrack: (e, r, t, n) =>\n\t\t\t\t\t\t\t\tA(t, async (t, a) => {\n\t\t\t\t\t\t\t\t\tn && (await B(n, t)), a.addTrack(e, r);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tremoveTrack: (e, r) => A(r, (r, t) => t.removeTrack(e)),\n\t\t\t\t\t\t\treplaceTrack: (e, r, t, n) =>\n\t\t\t\t\t\t\t\tA(t, async (t, a) => {\n\t\t\t\t\t\t\t\t\tn && (await B(n, t)), a.replaceTrack(e, r);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tonPeerJoin: (e) => (T.onPeerJoin = e),\n\t\t\t\t\t\t\tonPeerLeave: (e) => (T.onPeerLeave = e),\n\t\t\t\t\t\t\tonPeerStream: (e) => (T.onPeerStream = e),\n\t\t\t\t\t\t\tonPeerTrack: (e) => (T.onPeerTrack = e),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t})(\n\t\t\t\t\t(e) => (re = e),\n\t\t\t\t\t(e) => delete M[e],\n\t\t\t\t\t() => {\n\t\t\t\t\t\tdelete o[H][I],\n\t\t\t\t\t\t\tZ.forEach(clearTimeout),\n\t\t\t\t\t\t\tee.forEach(async (e) => (await e)()),\n\t\t\t\t\t\t\tclearInterval(v);\n\t\t\t\t\t},\n\t\t\t\t))\n\t\t\t);\n\t\t};\n\t})({\n\t\tinit(e) {\n\t\t\treturn ((e, r, t) =>\n\t\t\t\t(e.relayUrls || r).slice(\n\t\t\t\t\t0,\n\t\t\t\t\te.relayUrls ? e.relayUrls.length : e.relayRedundancy || t,\n\t\t\t\t))(e, Q, 3).map((e) => {\n\t\t\t\tconst r = ((e, r) => {\n\t\t\t\t\t\tconst t = {},\n\t\t\t\t\t\t\tn = () => {\n\t\t\t\t\t\t\t\tconst a = new WebSocket(e);\n\t\t\t\t\t\t\t\t(a.onclose = () => {\n\t\t\t\t\t\t\t\t\t(v[e] ??= 3333), setTimeout(n, v[e]), (v[e] *= 2);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t(a.onmessage = (e) => r(e.data)),\n\t\t\t\t\t\t\t\t\t(t.socket = a),\n\t\t\t\t\t\t\t\t\t(t.url = a.url),\n\t\t\t\t\t\t\t\t\t(t.ready = new Promise(\n\t\t\t\t\t\t\t\t\t\t(r) =>\n\t\t\t\t\t\t\t\t\t\t\t(a.onopen = () => {\n\t\t\t\t\t\t\t\t\t\t\t\tr(t), (v[e] = 3333);\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t)),\n\t\t\t\t\t\t\t\t\t(t.send = (e) => {\n\t\t\t\t\t\t\t\t\t\t1 === a.readyState && a.send(e);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\treturn n(), t;\n\t\t\t\t\t})(e, (e) => {\n\t\t\t\t\t\tconst r = k(e),\n\t\t\t\t\t\t\tn = r[\"failure reason\"],\n\t\t\t\t\t\t\ta = r[\"warning message\"],\n\t\t\t\t\t\t\t{ interval: o } = r,\n\t\t\t\t\t\t\ts = M[r.info_hash];\n\t\t\t\t\t\tif (n) K(t, n, !0);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif ((a && K(t, a), o && 1e3 * o > q[t] && x[t][s])) {\n\t\t\t\t\t\t\t\tconst e = Math.min(1e3 * o, 120333);\n\t\t\t\t\t\t\t\tclearInterval(R[t][s]),\n\t\t\t\t\t\t\t\t\t(q[t] = e),\n\t\t\t\t\t\t\t\t\t(R[t][s] = setInterval(x[t][s], e));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tB[r.offer_id] ||\n\t\t\t\t\t\t\t\t((r.offer || r.answer) && ((B[r.offer_id] = !0), G[t][s]?.(r)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t{ url: t } = r;\n\t\t\t\treturn (H[t] = r), (G[t] = {}), r.ready;\n\t\t\t});\n\t\t},\n\t\tsubscribe(e, r, t, n, a) {\n\t\t\tconst { url: s } = e,\n\t\t\t\ti = async () => {\n\t\t\t\t\tconst t = d((await a(10)).map((e) => [o(20), e]));\n\t\t\t\t\t(G[e.url][r] = (a) => {\n\t\t\t\t\t\tif (a.offer)\n\t\t\t\t\t\t\tn(r, { offer: a.offer, peerId: a.peer_id }, (t, n) =>\n\t\t\t\t\t\t\t\tz(e, r, {\n\t\t\t\t\t\t\t\t\tanswer: k(n).answer,\n\t\t\t\t\t\t\t\t\toffer_id: a.offer_id,\n\t\t\t\t\t\t\t\t\tto_peer_id: a.peer_id,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\telse if (a.answer) {\n\t\t\t\t\t\t\tconst e = t[a.offer_id];\n\t\t\t\t\t\t\te && n(r, { answer: a.answer, peerId: a.peer_id, peer: e.peer });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t\tz(e, r, {\n\t\t\t\t\t\t\tnumwant: 10,\n\t\t\t\t\t\t\toffers: l(t).map(([e, { offer: r }]) => ({\n\t\t\t\t\t\t\t\toffer_id: e,\n\t\t\t\t\t\t\t\toffer: r,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\treturn (\n\t\t\t\t(q[s] = 33333),\n\t\t\t\t(x[s] ||= {}),\n\t\t\t\t(x[s][r] = i),\n\t\t\t\t(R[s] ||= {}),\n\t\t\t\t(R[s][r] = setInterval(i, q[s])),\n\t\t\t\ti(),\n\t\t\t\t() => {\n\t\t\t\t\tclearInterval(R[s][r]), delete G[s][r], delete x[s][r];\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\tannounce(e) {\n\t\t\treturn q[e.url];\n\t\t},\n\t}),\n\tW = ((F = H), () => d(l(F).map(([e, r]) => [e, r.socket])));\nvar F;\nconst Q = [\n\t\"tracker.webtorrent.dev\",\n\t\"tracker.openwebtorrent.com\",\n\t\"tracker.btorrent.xyz\",\n\t\"tracker.files.fm:7073/announce\",\n].map((e) => \"wss://\" + e);\nconst trystero = {\n\tdefaultRelayUrls: Q,\n\tgetRelaySockets: W,\n\tjoinRoom: V,\n\tselfId: s,\n};\n\nexport default trystero;\n","metaType": "application/javascript"},"/modules/apps/bundler/button.js": {"content": "import Bundler from \"/modules/apps/bundler/frontend.js\";\nimport Controller from \"/modules/mvc/controller/frontend.js\";\nimport html from \"/modules/mvc/view/html/index.js\";\n\nexport default {\n\ttag: \"bundler-button\",\n\n\textends: \"uix-modal\",\n\tcta: html`<uix-button icon=\"file-box\"></uix-button>`,\n\tasync bundleAppSPA() {\n\t\tawait Bundler.bundleSPA();\n\t},\n\n\tasync bundleAppSSR() {\n\t\tawait Controller.backend(\"BUNDLE_APP_SSR\");\n\t},\n\tcontentFn() {\n\t\treturn html`<uix-list gap=\"md\">\n        <uix-button .click=${this.bundleAppSPA.bind(this)} label=\"Bundle SPA\"></uix-button>\n        <uix-button .click=${this.bundleAppSSR.bind(this)} label=\"Bundle SSR\"></uix-button>\n        <uix-button href=\"/admin\" label=\"Admin\"></uix-button>\n      </uix-list>`;\n\t},\n};\n","metaType": "application/javascript"},"/modules/icon-lucide/lucide/sun.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><circle cx=\"12\" cy=\"12\" r=\"4\"/><path d=\"M12 2v2m0 16v2M4.93 4.93l1.41 1.41m11.32 11.32l1.41 1.41M2 12h2m16 0h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41\"/></g></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/wifi.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 20h.01M2 8.82a15 15 0 0 1 20 0M5 12.859a10 10 0 0 1 14 0m-10.5 3.57a5 5 0 0 1 7 0\"/></svg>","metaType": "image/svg+xml"},"/modules/icon-lucide/lucide/file-box.svg": {"content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M14.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4\"/><path d=\"M14 2v4a2 2 0 0 0 2 2h4M3 13.1a2 2 0 0 0-1 1.76v3.24a2 2 0 0 0 .97 1.78L6 21.7a2 2 0 0 0 2.03.01L11 19.9a2 2 0 0 0 1-1.76V14.9a2 2 0 0 0-.97-1.78L8 11.3a2 2 0 0 0-2.03-.01ZM7 17v5\"/><path d=\"M11.7 14.2L7 17l-4.7-2.8\"/></g></svg>","metaType": "image/svg+xml"},"/manifest.json": {"content": "{\n\t\"manifest_version\": 3,\n\t\"name\": \"meetuprio\",\n\t\"version\": \"1.0\",\n\t\"description\": \"MV3 Development\",\n\t\"permissions\": [\n\t\t\"activeTab\",\n\t\t\"alarms\",\n\t\t\"background\",\n\t\t\"bookmarks\",\n\t\t\"browsingData\",\n\t\t\"clipboardRead\",\n\t\t\"clipboardWrite\",\n\t\t\"cookies\",\n\t\t\"debugger\",\n\t\t\"declarativeNetRequest\",\n\t\t\"declarativeNetRequestFeedback\",\n\t\t\"downloads\",\n\t\t\"history\",\n\t\t\"identity\",\n\t\t\"idle\",\n\t\t\"management\",\n\t\t\"nativeMessaging\",\n\t\t\"notifications\",\n\t\t\"pageCapture\",\n\t\t\"scripting\",\n\t\t\"storage\",\n\t\t\"tabs\",\n\t\t\"topSites\",\n\t\t\"unlimitedStorage\",\n\t\t\"webAuthenticationProxy\",\n\t\t\"webNavigation\",\n\t\t\"webRequest\"\n\t],\n\t\"action\": {\n\t\t\"default_popup\": \"popup.html\"\n\t},\n\t\"background\": {\n\t\t\"service_worker\": \"modules/backend/sw.js\"\n\t},\n\t\"host_permissions\": [\"<all_urls>\"],\n\t\"optional_host_permissions\": [],\n\t\"web_accessible_resources\": [\n\t\t{\n\t\t\t\"resources\": [\"*\", \"modules/*\", \"assets/*\"],\n\t\t\t\"matches\": [\"<all_urls>\"]\n\t\t}\n\t],\n\t\"icons\": {\n\t\t\"16\": \"assets/icons/icon_16.png\",\n\t\t\"48\": \"assets/icons/icon_48.png\",\n\t\t\"128\": \"assets/icons/icon_128.png\"\n\t},\n\t\"chrome_url_overrides\": {\n\t\t\"newtab\": \"extension.html\"\n\t}\n}\n","metaType": "application/json"},"/index.js": {"content": "const ensureSWController = () => {\n\tconst timeoutPromise = new Promise((_, reject) => {\n\t\tsetTimeout(() => reject(new Error(\"Service Worker timed out.\")), 100);\n\t});\n\tconst controllerPromise = new Promise((resolve) => {\n\t\tif (navigator.serviceWorker.controller) {\n\t\t\treturn resolve();\n\t\t}\n\t\tnavigator.serviceWorker.addEventListener(\"controllerchange\", () => {\n\t\t\treturn resolve();\n\t\t});\n\t});\n\treturn Promise.race([controllerPromise, timeoutPromise]);\n};\n\nconst startApp = async () => {\n\tif (!(\"serviceWorker\" in navigator)) {\n\t\tconsole.warn(\"Service Worker not supported.\");\n\t\tthrow new Error(\"Platform not supported\");\n\t}\n\n\tawait navigator.serviceWorker.register(\"/sw.js\", { scope: \"/\" });\n\n\ttry {\n\t\tconsole.log(\"Waiting for Service Worker to take control...\");\n\t\tawait ensureSWController();\n\t\tconsole.log(\"✅ Service Worker is in control!\");\n\t\tawait import(\"/bootstrap.js\");\n\t\tawait import(\"/app.js\");\n\t} catch (error) {\n\t\tconsole.warn(\"Service Worker did not take control in time. Reloading...\");\n\t\twindow.location.reload();\n\t}\n};\n\nstartApp();\n","metaType": "application/javascript"},"/style.css": {"content": "*,::before,::after{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x:;--un-pan-y:;--un-pinch-zoom:;--un-scroll-snap-strictness:proximity;--un-ordinal:;--un-slashed-zero:;--un-numeric-figure:;--un-numeric-spacing:;--un-numeric-fraction:;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 rgb(0 0 0 / 0);--un-ring-shadow:0 0 rgb(0 0 0 / 0);--un-shadow-inset:;--un-shadow:0 0 rgb(0 0 0 / 0);--un-ring-inset:;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgb(147 197 253 / 0.5);--un-blur:;--un-brightness:;--un-contrast:;--un-drop-shadow:;--un-grayscale:;--un-hue-rotate:;--un-invert:;--un-saturate:;--un-sepia:;--un-backdrop-blur:;--un-backdrop-brightness:;--un-backdrop-contrast:;--un-backdrop-grayscale:;--un-backdrop-hue-rotate:;--un-backdrop-invert:;--un-backdrop-opacity:;--un-backdrop-saturate:;--un-backdrop-sepia:;}::backdrop{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x:;--un-pan-y:;--un-pinch-zoom:;--un-scroll-snap-strictness:proximity;--un-ordinal:;--un-slashed-zero:;--un-numeric-figure:;--un-numeric-spacing:;--un-numeric-fraction:;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 rgb(0 0 0 / 0);--un-ring-shadow:0 0 rgb(0 0 0 / 0);--un-shadow-inset:;--un-shadow:0 0 rgb(0 0 0 / 0);--un-ring-inset:;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgb(147 197 253 / 0.5);--un-blur:;--un-brightness:;--un-contrast:;--un-drop-shadow:;--un-grayscale:;--un-hue-rotate:;--un-invert:;--un-saturate:;--un-sepia:;--un-backdrop-blur:;--un-backdrop-brightness:;--un-backdrop-contrast:;--un-backdrop-grayscale:;--un-backdrop-hue-rotate:;--un-backdrop-invert:;--un-backdrop-opacity:;--un-backdrop-saturate:;--un-backdrop-sepia:;}.fixed{position:fixed;}.bottom-\\[30px\\]{bottom:30px;}.right-\\[30px\\]{right:30px;}.grid{display:grid;}.grid-cols-7{grid-template-columns:repeat(7,minmax(0,1fr));}.m15{margin:3.75rem;}.m9{margin:2.25rem;}.mx-auto{margin-left:auto;margin-right:auto;}.my-2{margin-top:0.5rem;margin-bottom:0.5rem;}.mt-4{margin-top:1rem;}.box-border{box-sizing:border-box;}.inline-block{display:inline-block;}.h-4{height:1rem;}.max-w-6xl{max-width:72rem;}.w-\\[640px\\]{width:640px;}.w-4{width:1rem;}.w-full{width:100%;}.flex{display:flex;}.flex-grow{flex-grow:1;}.flex-col{flex-direction:column;}.cursor-pointer{cursor:pointer;}.cursor-not-allowed{cursor:not-allowed;}.disabled\\:cursor-not-allowed:disabled{cursor:not-allowed;}.items-center{align-items:center;}.justify-between{justify-content:space-between;}.justify-evenly{justify-content:space-evenly;}.gap-\\[10px\\]{gap:10px;}.gap-16{gap:4rem;}.gap-2{gap:0.5rem;}.gap-4{gap:1rem;}.gap-8{gap:2rem;}.border, .border-1{border-width:1px;}.border-gray-200{--un-border-opacity:1;border-color:rgb(229 231 235 / var(--un-border-opacity));}.border-gray-900{--un-border-opacity:1;border-color:rgb(17 24 39 / var(--un-border-opacity));}.dark .dark\\:border-gray-600{--un-border-opacity:1;border-color:rgb(75 85 99 / var(--un-border-opacity));}.dark .dark\\:border-gray-700{--un-border-opacity:1;border-color:rgb(55 65 81 / var(--un-border-opacity));}.rounded{border-radius:0.25rem;}.rounded-full{border-radius:9999px;}.rounded-lg{border-radius:0.5rem;}.rounded-md{border-radius:0.375rem;}.border-solid{border-style:solid;}.bg-blue-100{--un-bg-opacity:1;background-color:rgb(219 234 254 / var(--un-bg-opacity));}.bg-blue-600{--un-bg-opacity:1;background-color:rgb(37 99 235 / var(--un-bg-opacity));}.bg-gray-100{--un-bg-opacity:1;background-color:rgb(243 244 246 / var(--un-bg-opacity));}.bg-gray-200{--un-bg-opacity:1;background-color:rgb(229 231 235 / var(--un-bg-opacity));}.bg-green{--un-bg-opacity:1;background-color:rgb(74 222 128 / var(--un-bg-opacity));}.bg-green-600{--un-bg-opacity:1;background-color:rgb(22 163 74 / var(--un-bg-opacity));}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255 / var(--un-bg-opacity));}.dark .dark\\:bg-gray-700{--un-bg-opacity:1;background-color:rgb(55 65 81 / var(--un-bg-opacity));}.dark .dark\\:bg-gray-800{--un-bg-opacity:1;background-color:rgb(31 41 55 / var(--un-bg-opacity));}.dark .dark\\:hover\\:bg-gray-600:hover{--un-bg-opacity:1;background-color:rgb(75 85 99 / var(--un-bg-opacity));}.dark .dark\\:hover\\:bg-gray-700:hover{--un-bg-opacity:1;background-color:rgb(55 65 81 / var(--un-bg-opacity));}.hover\\:bg-blue-700:hover{--un-bg-opacity:1;background-color:rgb(29 78 216 / var(--un-bg-opacity));}.hover\\:bg-gray-100:hover{--un-bg-opacity:1;background-color:rgb(243 244 246 / var(--un-bg-opacity));}.hover\\:bg-gray-300:hover{--un-bg-opacity:1;background-color:rgb(209 213 219 / var(--un-bg-opacity));}.p-2{padding:0.5rem;}.p-3{padding:0.75rem;}.p-4{padding:1rem;}.p-6{padding:1.5rem;}.p-8{padding:2rem;}.px-2{padding-left:0.5rem;padding-right:0.5rem;}.px-4{padding-left:1rem;padding-right:1rem;}.py-1{padding-top:0.25rem;padding-bottom:0.25rem;}.py-2{padding-top:0.5rem;padding-bottom:0.5rem;}.text-center{text-align:center;}.align-middle{vertical-align:middle;}.text-2xl{font-size:1.5rem;line-height:2rem;}.text-3xl{font-size:1.875rem;line-height:2.25rem;}.text-4xl{font-size:2.25rem;line-height:2.5rem;}.text-6xl{font-size:3.75rem;line-height:1;}.text-lg{font-size:1.125rem;line-height:1.75rem;}.text-sm{font-size:0.875rem;line-height:1.25rem;}.text-xl{font-size:1.25rem;line-height:1.75rem;}.dark .dark\\:text-white, .text-white{--un-text-opacity:1;color:rgb(255 255 255 / var(--un-text-opacity));}.text-black{--un-text-opacity:1;color:rgb(0 0 0 / var(--un-text-opacity));}.text-blue-600{--un-text-opacity:1;color:rgb(37 99 235 / var(--un-text-opacity));}.text-gray-500{--un-text-opacity:1;color:rgb(107 114 128 / var(--un-text-opacity));}.text-green-600{--un-text-opacity:1;color:rgb(22 163 74 / var(--un-text-opacity));}.text-red-500{--un-text-opacity:1;color:rgb(239 68 68 / var(--un-text-opacity));}.hover\\:text-red-700:hover{--un-text-opacity:1;color:rgb(185 28 28 / var(--un-text-opacity));}.font-bold{font-weight:700;}.font-semibold{font-weight:600;}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;}.uppercase{text-transform:uppercase;}.disabled\\:opacity-50:disabled{opacity:0.5;}.shadow-md{--un-shadow:var(--un-shadow-inset) 0 4px 6px -1px var(--un-shadow-color, rgb(0 0 0 / 0.1)),var(--un-shadow-inset) 0 2px 4px -2px var(--un-shadow-color, rgb(0 0 0 / 0.1));box-shadow:var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}.uix-icon{&{display:inline-block;vertical-align:middle;}&[solid]{stroke:currentColor;fill:currentColor;}}.uix-card{&{--uix-card-width:auto;--uix-card-padding:var(--uix-container-padding, 0);--uix-card-border-size:var(--uix-container-border-size, 0px);--uix-card-border-radius:var(--radius-md);--uix-card-background-color:var(--color-default-1, #f0f0f0);--uix-card-border-color:var(--uix-container-border-color, var(--color-default, #cccccc));--uix-card-shadow:0 4px 6px rgba(0, 0, 0, 0.1);--uix-card-min-height:var(--uix-container-min-height, 50px);--uix-card-gap:var(--uix-container-gap, 0);--uix-card-height:auto;--uix-card-justify:var(--uix-container-justify, flex-start);--uix-card-align-items:var(--uix-container-align-items, stretch);--uix-card-overflow:var(--uix-container-overflow, visible);--uix-card-position:var(--uix-container-position, static);--uix-card-list-style-type:var(--uix-container-list-style-type, none);--uix-card-text-color:var(--uix-container-text-color, var(--uix-text-color));border-width:var(--uix-card-border-size);border-radius:var(--uix-card-border-radius);background-color:var(--uix-card-background-color);border-color:var(--uix-card-border-color);box-shadow:var(--uix-card-shadow);list-style-type:var(--uix-card-list-style-type);color:var(--uix-card-text-color);&[clickable], &[clickable] *{cursor:pointer;}>:last-child.uix-join{margin-left:calc(-1 * var(--uix-card-padding));margin-right:calc(-1 * var(--uix-card-padding));margin-bottom:calc(-1 * var(--uix-card-padding));padding-bottom:0;border-radius:var(--uix-card-border-radius) !important;.uix-button{border-radius:0 !important;border-top-right-radius:0 !important;&:last-child{border-bottom-right-radius:var(--uix-card-border-radius) !important;}&:first-child{border-right-width:0;border-bottom-left-radius:var(--uix-card-border-radius) !important;}}}&[horizontal] >:last-child.uix-join{margin-top:calc(-1 * var(--uix-card-padding));margin-bottom:calc(-1 * var(--uix-card-padding));margin-right:0;padding-right:0;}}}.uix-form{&{display:flex;flex-direction:column;gap:1rem;padding-top:1rem;}}.uix-join{&{--uix-list-button-radius:var(--uix-item-border-radius, 5px);--uix-list-button-border-width:1px;--uix-list-button-margin:0;list-style-type:var(--uix-list-container-list-style-type);width:auto;&.uix-join{flex-direction:row;&[vertical]{flex-direction:column;}&[reverse][vertical]{flex-direction:column-reverse;}&[reverse]:not([vertical]){flex-direction:row-reverse;}}display:flex;flex-direction:row;& > *{width:100%;margin:var(--uix-list-button-margin);&:first-child{border-top-left-radius:var(--uix-list-button-radius);border-bottom-left-radius:var(--uix-list-button-radius);border-bottom-right-radius:0;border-top-right-radius:0;}&:last-child{border-top-right-radius:var(--uix-list-button-radius);border-bottom-right-radius:var(--uix-list-button-radius);border-top-left-radius:0;border-bottom-left-radius:0;border-left-width:0;}}& > [bordered], & > [outline]{&:last-child{border-width:var(--uix-list-button-border-width);}&:hover:active{border-width:var(--uix-list-button-border-width);}&:has(+ *:active){border-width:var(--uix-list-button-border-width);}}&[vertical]{& > *{border-radius:0;margin:var(--uix-list-button-margin);&:first-child{border-top-left-radius:var(--uix-list-button-radius);border-top-right-radius:var(--uix-list-button-radius);}&:last-child{border-bottom-left-radius:var(--uix-list-button-radius);border-bottom-right-radius:var(--uix-list-button-radius);}}& > .uix-button[bordered], & > .uix-button[outline]{border-width:var(--uix-list-button-border-width);&:last-child{border-width:var(--uix-list-button-border-width);}&:hover:active{border-width:var(--uix-list-button-border-width);}&:has(+ .uix-button:active){border-width:var(--uix-list-button-border-width);}}}}}.uix-input{&{--uix-input-background-color:var(--color-default-10);--uix-input-border-color:var(--color-default-70);--uix-input-text-color:var(--color-default-95);--uix-input-border-radius:0.375rem;--uix-input-padding-x:5px;--uix-input-padding-y:5px;--uix-input-font-size:1rem;--uix-input-focus-ring-width:2px;--uix-input-focus-ring-offset-width:2px;--uix-input-height:2.5rem;position:relative;display:flex;width:100%;height:var(--uix-input-height);border-radius:var(--uix-input-border-radius);border:2px solid var(--uix-input-border-color);font-size:var(--uix-input-font-size);background-color:var(--uix-input-background-color);color:var(--uix-input-text-color);&:focus{outline:none;outline-style:none;box-shadow:none;border-color:transparent;}input[type=\"text\"], input[type=\"password\"], input[type=\"email\"], input[type=\"number\"], input[type=\"decimal\"], input[type=\"search\"], input[type=\"tel\"], input[type=\"url\"]{width:100%;outline:none;color:var(--uix-input-text-color);background-color:transparent;padding:var(--uix-input-padding-x) var(--uix-input-padding-y);border:0;&:focus + label, &:not(:placeholder-shown) + label{transition:margin-top 0.3s ease, font-size 0.3s ease;margin-top:-0.4rem;font-size:0.6rem;cursor:default;.uix-text{--uix-text-size:0.8rem;}}&::placeholder{color:transparent;}&:focus{outline:none;outline-style:none;box-shadow:none;border-color:transparent;&::placeholder{color:var(--uix-input-text-color);}}}label{.uix-text{--uix-text-font-weight:600;}cursor:text;position:absolute;margin-top:0.5rem;font-family:monospace;letter-spacing:0.05em;text-transform:uppercase;font-weight:600;margin-left:0.75rem;padding-right:0.5rem;padding-left:0.25rem;background-color:var(--uix-input-background-color);color:var(--uix-input-text-color);transition:margin-top 0.3s ease, font-size 0.3s ease;}label[required]::after{content:'*';color:var(--color-error-50);}&:not([type=checkbox]):not([radio]) input:focus-visible{outline:none;box-shadow:0 0 0 var(--uix-input-focus-ring-width) var(--uix-input-border-color);}&:not([type=checkbox]):not([radio]) input:disabled{cursor:not-allowed;opacity:0.6;}&[type=checkbox], &[radio]{border:0;align-items:center;height:auto;width:auto;position:relative;cursor:pointer;}&[type=checkbox] label, &[radio] label{position:static;margin-top:0;background-color:transparent;padding:0;cursor:pointer;margin-left:0.5rem;text-transform:none;font-family:inherit;letter-spacing:normal;font-weight:normal;.uix-text{--uix-text-font-weight:400;}}&[type=checkbox] input, &[radio] input[type=\"radio\"]{width:var(--uix-input-size);height:var(--uix-input-size);margin:0;border:none;background:none;box-shadow:none;padding:0;}&[type=checkbox] input:disabled, &[radio] input[type=\"radio\"]:disabled{cursor:not-allowed;opacity:0.6;}&[type=checkbox], &[radio]{gap:0.75rem;padding:0.5rem 0;--uix-checkbox-size:1.5rem;--uix-checkbox-border-radius:0.375rem;--uix-checkbox-checked-bg:var(--uix-input-border-color);--uix-checkbox-check-color:var(--uix-input-background-color);input, input[type=\"radio\"]{appearance:none;-webkit-appearance:none;width:var(--uix-checkbox-size);height:var(--uix-checkbox-size);margin:0;border:2px solid var(--uix-input-border-color);border-radius:var(--uix-checkbox-border-radius);background-color:var(--uix-input-background-color);cursor:pointer;position:relative;transition:background-color 0.2s ease, border-color 0.2s ease;&::after{content:\"\";position:absolute;display:none;left:50%;top:50%;width:0.375rem;height:0.75rem;border:solid var(--uix-checkbox-check-color);border-width:0 2px 2px 0;transform:translate(-50%, -60%) rotate(45deg);}&:checked{background-color:var(--uix-checkbox-checked-bg);border-color:var(--uix-checkbox-checked-bg);&::after{display:block;}}&:focus-visible{box-shadow:0 0 0 var(--uix-input-focus-ring-width) var(--uix-input-border-color);}&:disabled{opacity:0.6;cursor:not-allowed;& + label{cursor:not-allowed;opacity:0.6;}}}&:hover:not(:has(input[type=\"checkbox\"]:disabled)){input[type=\"checkbox\"]{border-color:var(--uix-input-border-color);}}label{margin-left:0;order:2;}}}}.uix-calendar{uix-calendar-day{margin-inline:auto;}[calendarDay]{cursor:pointer;text-align:center;padding:0.5rem;background-color:transparent;&[toggled]{background-color:var(--color-primary-50);color:white;}}}.uix-modal{&{--uix-modal-background-color:var(--color-default-1, #ffffff);--uix-modal-box-shadow:0 25px 50px -12px rgba(0, 0, 0, 0.25);--uix-modal-padding:var(--spacing-sm);--uix-modal-dialog-width:var(--sizes-xl);--uix-container-height:auto;border:0;dialog{&[open]{display:flex;}position:absolute;margin:auto;z-index:1000;overflow-y:auto;box-sizing:border-box;transition:all 0.1s ease-in-out;border:0;background-color:transparent;> .uix-card{}}}}.uix-link{&{&[vertical]{margin:0 auto;}--uix-link-indent:0;cursor:pointer;a, button{cursor:pointer;padding:var(--uix-link-padding);&:hover{color:var(--uix-link-hover-color, var(--color-primary-70));}}color:var(--uix-link-text-color, var(--color-primary-70));font-weight:var(--uix-link-font-weight, 600);width:var(--uix-link-width, auto);.uix-text-icon__element{display:flex;align-items:center;gap:var(--uix-link-icon-gap, 0.5rem);width:auto;&[reverse][vertical]{flex-direction:column-reverse;}&:not([reverse])[vertical]{flex-direction:column;}&[reverse]:not([vertical]){flex-direction:row-reverse;}&:not([reverse]):not([vertical]){flex-direction:row;}}transition:all 0.3s ease-in-out;}&[indent]{> a, > button{padding-left:var(--uix-link-indent);}}&[active]:hover{color:var(--uix-link-hover-text-color, var(--color-primary-40));}&[selectable][selected]{background-color:var(--color-primary-40);}&:hover{[tooltip]{display:flex;}}&[tooltip]{display:inline-block;&:hover{[tooltip]{visibility:visible;}}[tooltip]{visibility:hidden;width:120px;background-color:black;color:#fff;text-align:center;border-radius:6px;padding:5px 0;position:absolute;z-index:1000000000;top:50%;left:100%;transform:translateY(-50%);}}&[position~=\"top\"] [tooltip]{bottom:100%;left:50%;transform:translateX(-50%);}&[position~=\"bottom\"] [tooltip]{top:100%;left:50%;transform:translateX(-50%);}&[position~=\"left\"] [tooltip]{top:50%;right:100%;transform:translateY(-50%);}&[tooltip], &[dropdown], &[context], &[float]{position:relative;}&[dropdown], &[accordion]{flex-direction:column;}[float], [dropdown], [accordion], [context]{display:none;}&[floatopen] [float]{display:block;position:absolute;bottom:50px;right:30px;width:30px;}&[context]{z-index:auto;}[dropdown], [context][open]{position:absolute;left:0;top:100%;width:100%;min-width:200px;z-index:1000;background-color:var(--color-primary-10);box-shadow:0 8px 16px rgba(0, 0, 0, 0.2);.uix-link:hover, input{background-color:var(--color-primary-20);}& > .uix-link, input{width:100%;}}[context][open]{display:flex;}&[selected]{[dropdown], [accordion]{display:flex;}}}.uix-button{&{--uix-button-font-weight:700;--uix-button-text-color:var(--color-default-80);--uix-button-background-color:var(--color-default-100);--uix-button-hover-background-color:var(--color-default-20);--uix-button-border-radius:var(--radius-sm);--uix-button-border-size:0;--uix-button-border-color:var(--color-default-40);--uix-button-hover-opacity:0.9;--uix-button-active-scale:0.9;--uix-button-width:fit-content;--uix-button-height:fit-content;display:flex;flex-direction:row;align-items:center;gap:0.5rem;cursor:pointer;transition:all 0.3s ease-in-out;font-weight:var(--uix-button-font-weight);color:var(--uix-button-text-color);background-color:var(--uix-button-background-color);width:var(--uix-button-width);height:var(--uix-button-height);border:var(--uix-button-border-size) solid var(--uix-button-border-color);border-radius:var(--uix-button-border-radius);> button, > a, > input{padding:var(--uix-button-padding, var(--uix-link-padding));word-break:keep-all;height:100%;line-height:var(--uix-button-height);border-radius:var(--uix-button-border-radius);flex-basis:100%;justify-content:var(--uix-text-align);&:hover{opacity:var(--uix-button-hover-opacity);background-color:var(--uix-button-hover-background-color);}&:hover:active{opacity:var(--uix-button-hover-opacity);}}.uix-icon, button, input, a{cursor:pointer;}}}.uix-avatar{&{--uix-avatar-background-color:var(--color-default-30, #d1d5db);--uix-avatar-text:var(--color-default, #000000);--uix-avatar-ring:var(--color-default, #000000);--uix-avatar-ring-width:2px;--uix-avatar-border-radius:50%;--uix-avatar-width:3rem;--uix-avatar-height:3rem;display:flex;position:relative;justify-content:center;align-items:center;overflow:hidden;color:var(--uix-avatar-text);font-size:calc(var(--uix-avatar-width) / 2.5);font-weight:500;vertical-align:middle;text-align:center;min-width:var(--uix-avatar-width);padding:3px;}>:not(uix-overlay){width:var(--uix-avatar-width);height:var(--uix-avatar-height);border-radius:var(--uix-avatar-border-radius);background-color:var(--uix-avatar-background-color);}&[ring]{box-shadow:0 0 0 var(--uix-avatar-ring-width) var(--uix-avatar-ring);}> img{width:100%;height:100%;object-fit:cover;}> uix-overlay{position:absolute;z-index:100;--tx:0;--ty:0;transform:translate(var(--tx), var(--ty));cursor:pointer;text-align:center;background:transparent;}> uix-overlay[y=\"top\"]{top:0%;}> uix-overlay[y=\"bottom\"]{bottom:0%;}> uix-overlay[y=\"center\"]{top:50%;--ty:-50%;}> uix-overlay[x=\"left\"]{left:-5%;}> uix-overlay[x=\"right\"]{right:0%;}> uix-overlay[x=\"center\"]{left:50%;--tx:-50%;}}.uix-circle{&:not([solid]){background-color:transparent;}}@font-face{font-family:'Manrope';font-weight:200;src:url('/modules/font/manrope/extralight.woff2') format('woff2');}@font-face{font-family:'Manrope';font-weight:300;src:url('/modules/font/manrope/light.woff2') format('woff2');}@font-face{font-family:'Manrope';font-weight:500;src:url('/modules/font/manrope/medium.woff2') format('woff2');}@font-face{font-family:'Manrope';font-weight:400;src:url('/modules/font/manrope/regular.woff2') format('woff2');}@font-face{font-family:'Manrope';font-weight:600;src:url('/modules/font/manrope/semibold.woff2') format('woff2');}@font-face{font-family:'Manrope';font-weight:700;src:url('/modules/font/manrope/bold.woff2') format('woff2');}@font-face{font-family:'Manrope';font-weight:800;src:url('/modules/font/manrope/extrabold.woff2') format('woff2');}body{font-family:var(--font-family);}html, body{font-family:var(--font-family);background-color:var(--background-color) !important;color:var(--text-color) !important;width:100%;min-height:100%;height:100%;padding:0;margin:0;}body:not(.production) *:not(:defined){border:1px solid red;}.dark{filter:invert(1) hue-rotate(180deg);}.dark img, .dark dialog, .dark video, .dark iframe{filter:invert(1) hue-rotate(180deg);}html{font-size:14px;}@media (max-width:768px){html{font-size:18px;}}@media (max-width:480px){html{font-size:20px;}}textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0;}:root{box-sizing:border-box;-moz-text-size-adjust:none;-webkit-text-size-adjust:none;text-size-adjust:none;line-height:1.2;-webkit-font-smoothing:antialiased;}*, *::before, *::after{box-sizing:border-box;}*{margin:0;}body{-webkit-font-smoothing:antialiased;}a{color:currentColor;text-decoration:none;font-family:var(--font-family);}button, textarea, select{background-color:inherit;border-width:0;color:inherit;}img, picture, video, canvas, svg{display:block;max-width:100%;}input, button, textarea, select{font:inherit;}p, h1, h2, h3, h4, h5, h6{font-family:var(--font-family);overflow-wrap:break-word;}dialog::backdrop{background-color:rgba(0, 0, 0, 0.8);}*::-webkit-scrollbar{width:8px;margin-right:10px;}*::-webkit-scrollbar-track{background:transparent;}*::-webkit-scrollbar-thumb{&:hover{scrollbar-color:rgba(154, 153, 150, 0.8) transparent;}border-radius:10px;border:none;}*::-webkit-scrollbar-button{background:transparent;color:transparent;}*{scrollbar-width:thin;scrollbar-color:transparent transparent;&:hover{scrollbar-color:rgba(154, 153, 150, 0.8) transparent;}}[full]{width:100%;height:100vh;}[w-full]{width:100%;}[grow]{flex-grow:1;}[hide]{display:none !important;}.hide{display:none !important;}[noscroll]{overflow:hidden;}div [container]{display:flex;}div [container][horizontal]{display:flex;flex-direction:col;}","metaType": "text/css"}};self.addEventListener("install", (e) => e.waitUntil(self.skipWaiting()));self.addEventListener("activate", (e) => e.waitUntil(self.clients.claim()));self.addEventListener("fetch", (e) => {const url = new URL(e.request.url);const file = FILE_BUNDLE[url.pathname];if (file) {e.respondWith(new Response(file.content, {headers: { 'Content-Type': file.metaType || 'application/javascript' }}));}});